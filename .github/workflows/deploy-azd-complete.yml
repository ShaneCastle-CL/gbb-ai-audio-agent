name: 🎯 Complete Deployment with AZD

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      action:
        description: 'Action to perform'
        required: true
        default: 'up'
        type: choice
        options:
          - provision  # Infrastructure only
          - deploy     # Application only
          - up         # Both infrastructure and application
          - down       # Destroy everything

  push:
    branches:
      - main
    paths:
      - 'infra/terraform/**'
      - 'src/**'
      - 'apps/**'
      - 'azure.yaml'
      - '.github/workflows/deploy-azd.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'infra/terraform/**'
      - 'azure.yaml'
      - '.github/workflows/deploy-azd.yml'

jobs:
  # ============================================================================
  # UNIFIED DEPLOYMENT WITH AZD
  # ============================================================================
  deploy:
    name: 🚀 Deploy with Azure Developer CLI
    uses: ./.github/workflows/deploy-azd.yml
    with:
      environment: ${{ inputs.environment || 'dev' }}
      action: ${{ inputs.action || 'up' }}
      # Use repository variables for remote state with fallbacks
      rs_resource_group: ${{ vars.RS_RESOURCE_GROUP || 'Default-ActivityLogAlerts' }}
      rs_storage_account: ${{ vars.RS_STORAGE_ACCOUNT || 'rtagent' }}
      rs_container_name: ${{ vars.RS_CONTAINER_NAME || 'tfstate' }}
    secrets: inherit

  # ============================================================================
  # DEPLOYMENT SUMMARY
  # ============================================================================
  summary:
    name: 📋 Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always() && github.event_name != 'pull_request'
    
    steps:
      - name: 📋 Generate Summary
        run: |
          echo "## 🎯 Azure Developer CLI Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          DEPLOYMENT_STATUS="${{ needs.deploy.result }}"
          ACTION="${{ inputs.action || 'up' }}"
          ENVIRONMENT="${{ inputs.environment || 'dev' }}"
          
          echo "| Component | Status | Environment | Action |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|-------------|---------|" >> $GITHUB_STEP_SUMMARY
          
          if [ "$DEPLOYMENT_STATUS" = "success" ]; then
            echo "| 🚀 Deployment | ✅ Success | \`$ENVIRONMENT\` | \`$ACTION\` |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🚀 Deployment | ❌ Failed | \`$ENVIRONMENT\` | \`$ACTION\` |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "$ACTION" != "down" ] && [ "$DEPLOYMENT_STATUS" = "success" ]; then
            echo "### 🔗 Application URLs" >> $GITHUB_STEP_SUMMARY
            
            if [ -n "${{ needs.deploy.outputs.frontend_url }}" ]; then
              echo "- 🌐 **Frontend**: [${{ needs.deploy.outputs.frontend_url }}](${{ needs.deploy.outputs.frontend_url }})" >> $GITHUB_STEP_SUMMARY
            fi
            
            if [ -n "${{ needs.deploy.outputs.backend_url }}" ]; then
              echo "- 🔧 **Backend**: [${{ needs.deploy.outputs.backend_url }}](${{ needs.deploy.outputs.backend_url }})" >> $GITHUB_STEP_SUMMARY
            fi
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📊 Resource Information" >> $GITHUB_STEP_SUMMARY
            echo "- 📦 **Resource Group**: \`${{ needs.deploy.outputs.resource_group }}\`" >> $GITHUB_STEP_SUMMARY
            echo "- 🌍 **Environment**: \`$ENVIRONMENT\`" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🛠️ Azure Developer CLI" >> $GITHUB_STEP_SUMMARY
          echo "This deployment was managed using Azure Developer CLI (azd) with:" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ **Infrastructure**: Terraform-based provisioning" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **Application**: Container-based deployment" >> $GITHUB_STEP_SUMMARY
          echo "- 🔄 **Lifecycle**: Complete deployment lifecycle management" >> $GITHUB_STEP_SUMMARY
          echo "- 📋 **Preview**: Terraform plan preview for pull requests" >> $GITHUB_STEP_SUMMARY
          
          if [ "$DEPLOYMENT_STATUS" = "success" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🎯 Next Steps" >> $GITHUB_STEP_SUMMARY
            echo "- Test your application using the URLs above" >> $GITHUB_STEP_SUMMARY
            echo "- Monitor resources in the [Azure Portal](https://portal.azure.com)" >> $GITHUB_STEP_SUMMARY
            echo "- Check logs with \`azd monitor\`" >> $GITHUB_STEP_SUMMARY
          fi
