{
  "summary": {
    "total_files": 137,
    "analyzed_files": 136,
    "total_functions": 460,
    "total_classes": 201,
    "functions_with_docstrings": 311,
    "classes_with_docstrings": 130,
    "average_quality_score": 0.21631870902672695
  },
  "files": [
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\docstring_standardizer.py",
      "functions": [
        {
          "name": "main",
          "line_number": 555,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": "Main entry point for the docstring standardization tool.\n\nThis function provides command-line interface for analyzing, fixing, and\nvalidating docstring compliance across the entire codebase. It supports\nmultiple operation modes for comprehensive documentation management.\n\n:param: None (uses command line arguments).\n:return: None (outputs results to console and files).\n:raises SystemExit: If invalid command line arguments are provided.",
          "quality_score": 0.4000000000000001,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Main entry point for the docstring standardization tool.\\n\\nThis function provides command-line interface for analyzing, fixing, and\nvalidating docstring compliance across the entire codebase. This function implements main functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If main operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 52,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "root_path",
              "annotation": "str"
            },
            {
              "name": "exclude_patterns",
              "annotation": "List[str]"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param root_path: String value representing root path data.\\n:param exclude_patterns: String value representing exclude patterns data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "find_python_files",
          "line_number": 61,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "List[Path]",
          "docstring": "Discover all Python files in the project excluding specified patterns.\n\nThis method recursively searches the root directory for Python source files\nwhile respecting exclusion patterns to avoid analyzing generated code,\nvirtual environments, and other non-source directories.\n\n:param: None.\n:return: List of Path objects representing Python files to analyze.\n:raises FileNotFoundError: If root_path does not exist.",
          "quality_score": 0.6000000000000001,
          "issues": [
            "Missing parameter documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Discover all Python files in the project excluding specified patterns.\\n\\nThis method recursively searches the root directory for Python source files\nwhile respecting exclusion patterns to avoid analyzing generated code,\nvirtual environments, and other non-source directories. This function implements find python files functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: List of items matching the specified criteria.\\n:raises FileNotFoundError: If find python files operation fails due to invalid parameters or system state."
        },
        {
          "name": "analyze_file",
          "line_number": 83,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Analyze a single Python file for docstring quality and standards compliance.\n\nThis method parses the Python AST to extract all function and class definitions,\nanalyzes their existing docstrings against enterprise standards, and identifies\nareas for improvement including missing docstrings and formatting issues.\n\n:param file_path: Path to the Python file to analyze.\n:return: Dictionary containing analysis results with issues and recommendations.\n:raises SyntaxError: If the Python file contains syntax errors.\n:raises FileNotFoundError: If the specified file does not exist.",
          "quality_score": 0.8,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Analyze a single Python file for docstring quality and standards compliance.\\n\\nThis method parses the Python AST to extract all function and class definitions,\nanalyzes their existing docstrings against enterprise standards, and identifies\nareas for improvement including missing docstrings and formatting issues. This function implements analyze file functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param file_path: Parameter for file path specification.\\n:return: Dictionary containing operation results and status information.\\n:raises FileNotFoundError: If analyze file operation fails due to invalid parameters or system state."
        },
        {
          "name": "_analyze_function",
          "line_number": 128,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "node",
              "annotation": "ast.FunctionDef"
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Analyze a single function definition for docstring compliance.\n\nThis method examines function signatures, existing docstrings, and parameter\npatterns to determine compliance with enterprise documentation standards\nand generate improvement recommendations.\n\n:param node: AST node representing the function definition.\n:param content: Full file content for context extraction.\n:return: Dictionary containing function analysis results and recommendations.\n:raises AttributeError: If node is not a valid function definition.",
          "quality_score": 0.8666666666666667,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Analyze a single function definition for docstring compliance.\\n\\nThis method examines function signatures, existing docstrings, and parameter\npatterns to determine compliance with enterprise documentation standards\nand generate improvement recommendations. This function implements  analyze function functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param node: Parameter for node specification.\\n:param content: String value representing content data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  analyze function operation fails due to invalid parameters or system state."
        },
        {
          "name": "_analyze_class",
          "line_number": 172,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "node",
              "annotation": "ast.ClassDef"
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Analyze a class definition for docstring compliance and method documentation.\n\nThis method examines class-level documentation, inheritance patterns, and\nmethod documentation to ensure comprehensive coverage following enterprise\nstandards for API documentation generation.\n\n:param node: AST node representing the class definition.\n:param content: Full file content for context extraction.\n:return: Dictionary containing class analysis results and recommendations.\n:raises AttributeError: If node is not a valid class definition.",
          "quality_score": 0.8666666666666667,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Analyze a class definition for docstring compliance and method documentation.\\n\\nThis method examines class-level documentation, inheritance patterns, and\nmethod documentation to ensure comprehensive coverage following enterprise\nstandards for API documentation generation. This function implements  analyze class functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param node: Parameter for node specification.\\n:param content: String value representing content data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  analyze class operation fails due to invalid parameters or system state."
        },
        {
          "name": "_score_docstring_quality",
          "line_number": 205,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "docstring",
              "annotation": "Optional[str]"
            },
            {
              "name": "params",
              "annotation": "List[Dict]"
            },
            {
              "name": "return_annotation",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "float",
          "docstring": "Calculate a quality score for the given docstring based on enterprise standards.\n\nThis method evaluates docstring completeness, format compliance, parameter\ndocumentation coverage, and adherence to the specified documentation format\nto generate a quantitative quality assessment.\n\n:param docstring: The docstring text to evaluate for quality.\n:param params: List of function parameters requiring documentation.\n:param return_annotation: Return type annotation if present.\n:return: Quality score between 0.0 and 1.0 indicating compliance level.\n:raises TypeError: If parameters are not in expected format.",
          "quality_score": 0.9000000000000001,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Calculate a quality score for the given docstring based on enterprise standards.\\n\\nThis method evaluates docstring completeness, format compliance, parameter\ndocumentation coverage, and adherence to the specified documentation format\nto generate a quantitative quality assessment. This function implements  score docstring quality functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param docstring: String value representing docstring data.\\n:param params: Parameter for params specification.\\n:param return_annotation: String value representing return annotation data.\\n:return: Instance of float with operation results.\\n:raises RuntimeError: If  score docstring quality operation fails due to invalid parameters or system state."
        },
        {
          "name": "_identify_docstring_issues",
          "line_number": 250,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "docstring",
              "annotation": "Optional[str]"
            },
            {
              "name": "params",
              "annotation": "List[Dict]"
            },
            {
              "name": "return_annotation",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "List[str]",
          "docstring": "Identify specific issues with the current docstring format and content.\n\nThis method performs detailed analysis to identify missing elements,\nformatting problems, and compliance gaps relative to the enterprise\ndocumentation standards for automated generation systems.\n\n:param docstring: The docstring text to analyze for issues.\n:param params: List of function parameters to check for documentation.\n:param return_annotation: Return type annotation to verify documentation.\n:return: List of specific issues found in the docstring.\n:raises TypeError: If parameters are not in expected format.",
          "quality_score": 0.9000000000000001,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Identify specific issues with the current docstring format and content.\\n\\nThis method performs detailed analysis to identify missing elements,\nformatting problems, and compliance gaps relative to the enterprise\ndocumentation standards for automated generation systems. This function implements  identify docstring issues functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param docstring: String value representing docstring data.\\n:param params: Parameter for params specification.\\n:param return_annotation: String value representing return annotation data.\\n:return: List of items matching the specified criteria.\\n:raises RuntimeError: If  identify docstring issues operation fails due to invalid parameters or system state."
        },
        {
          "name": "_generate_standard_docstring",
          "line_number": 290,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "func_name",
              "annotation": "str"
            },
            {
              "name": "params",
              "annotation": "List[Dict]"
            },
            {
              "name": "return_annotation",
              "annotation": "Optional[str]"
            },
            {
              "name": "existing_docstring",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "str",
          "docstring": "Generate a standardized docstring following enterprise documentation format.\n\nThis method creates a comprehensive docstring that follows the specified\nenterprise format with proper parameter documentation, return value\ndescriptions, and exception handling information for automated documentation.\n\n:param func_name: Name of the function being documented.\n:param params: List of function parameters with type annotations.\n:param return_annotation: Return type annotation if available.\n:param existing_docstring: Current docstring content for reference.\n:return: Standardized docstring following enterprise format requirements.\n:raises ValueError: If required parameters are missing or invalid.",
          "quality_score": 0.9200000000000002,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate a standardized docstring following enterprise documentation format.\\n\\nThis method creates a comprehensive docstring that follows the specified\nenterprise format with proper parameter documentation, return value\ndescriptions, and exception handling information for automated documentation. This function implements  generate standard docstring functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param func_name: String value representing func name data.\\n:param params: Parameter for params specification.\\n:param return_annotation: String value representing return annotation data.\\n:param existing_docstring: String value representing existing docstring data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate standard docstring operation fails due to invalid parameters or system state."
        },
        {
          "name": "_generate_class_docstring",
          "line_number": 334,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "class_name",
              "annotation": "str"
            },
            {
              "name": "existing_docstring",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "str",
          "docstring": "Generate a standardized class docstring following enterprise documentation format.\n\nThis method creates comprehensive class documentation that describes the\nclass purpose, usage patterns, initialization requirements, and integration\npoints following enterprise standards for API documentation generation.\n\n:param class_name: Name of the class being documented.\n:param existing_docstring: Current class docstring for reference.\n:return: Standardized class docstring following enterprise format.\n:raises ValueError: If class_name is empty or invalid.",
          "quality_score": 0.8666666666666667,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate a standardized class docstring following enterprise documentation format.\\n\\nThis method creates comprehensive class documentation that describes the\nclass purpose, usage patterns, initialization requirements, and integration\npoints following enterprise standards for API documentation generation. This function implements  generate class docstring functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param class_name: String value representing class name data.\\n:param existing_docstring: String value representing existing docstring data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate class docstring operation fails due to invalid parameters or system state."
        },
        {
          "name": "generate_report",
          "line_number": 365,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Generate a comprehensive report of docstring analysis across the codebase.\n\nThis method analyzes all Python files in the project and generates a detailed\nreport showing current documentation quality, specific issues, and recommended\nimprovements for achieving enterprise-grade documentation standards.\n\n:param: None.\n:return: Comprehensive analysis report with statistics and recommendations.\n:raises FileNotFoundError: If project files cannot be accessed.",
          "quality_score": 0.6000000000000001,
          "issues": [
            "Missing parameter documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate a comprehensive report of docstring analysis across the codebase.\\n\\nThis method analyzes all Python files in the project and generates a detailed\nreport showing current documentation quality, specific issues, and recommended\nimprovements for achieving enterprise-grade documentation standards. This function implements generate report functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If generate report operation fails due to invalid parameters or system state."
        },
        {
          "name": "_generate_brief_description",
          "line_number": 424,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "func_name",
              "annotation": "str"
            },
            {
              "name": "existing",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "str",
          "docstring": "Generate a brief description for the function.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate a brief description for the function.\\n\\nThis function implements  generate brief description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param func_name: String value representing func name data.\\n:param existing: String value representing existing data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate brief description operation fails due to invalid parameters or system state."
        },
        {
          "name": "_generate_detailed_description",
          "line_number": 448,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "func_name",
              "annotation": "str"
            },
            {
              "name": "existing",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "str",
          "docstring": "Generate detailed description for the function.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate detailed description for the function.\\n\\nThis function implements  generate detailed description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param func_name: String value representing func name data.\\n:param existing: String value representing existing data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate detailed description operation fails due to invalid parameters or system state."
        },
        {
          "name": "_generate_param_description",
          "line_number": 460,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "param",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "str",
          "docstring": "Generate parameter description based on name and type.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate parameter description based on name and type.\\n\\nThis function implements  generate param description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param param: String value representing param data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate param description operation fails due to invalid parameters or system state."
        },
        {
          "name": "_generate_return_description",
          "line_number": 493,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "return_annotation",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "str",
          "docstring": "Generate return value description.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate return value description.\\n\\nThis function implements  generate return description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param return_annotation: String value representing return annotation data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate return description operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_common_exception",
          "line_number": 513,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "func_name",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Determine most appropriate exception type for function.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Determine most appropriate exception type for function.\\n\\nThis function implements  get common exception functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param func_name: String value representing func name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get common exception operation fails due to invalid parameters or system state."
        },
        {
          "name": "_generate_exception_description",
          "line_number": 530,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "func_name",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Generate exception description based on function purpose.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate exception description based on function purpose.\\n\\nThis function implements  generate exception description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param func_name: String value representing func name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate exception description operation fails due to invalid parameters or system state."
        },
        {
          "name": "_generate_recommendations",
          "line_number": 534,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "report",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "List[str]",
          "docstring": "Generate improvement recommendations based on analysis.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate improvement recommendations based on analysis.\\n\\nThis function implements  generate recommendations functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param report: String value representing report data.\\n:return: List of items matching the specified criteria.\\n:raises RuntimeError: If  generate recommendations operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "DocstringAnalyzer",
          "line_number": 38,
          "docstring": "Analyze and standardize Python docstrings across the codebase.\n\nThis class provides comprehensive analysis of existing docstrings and\ngenerates standardized replacements following enterprise documentation\npractices for automated documentation generation.\n\n:param root_path: Root directory path to analyze for Python files.\n:param exclude_patterns: List of directory patterns to exclude from analysis.\n:return: Configured DocstringAnalyzer instance ready for processing.\n:raises ValueError: If root_path does not exist or is not accessible.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 52,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "root_path",
                  "annotation": "str"
                },
                {
                  "name": "exclude_patterns",
                  "annotation": "List[str]"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param root_path: String value representing root path data.\\n:param exclude_patterns: String value representing exclude patterns data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "find_python_files",
              "line_number": 61,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "List[Path]",
              "docstring": "Discover all Python files in the project excluding specified patterns.\n\nThis method recursively searches the root directory for Python source files\nwhile respecting exclusion patterns to avoid analyzing generated code,\nvirtual environments, and other non-source directories.\n\n:param: None.\n:return: List of Path objects representing Python files to analyze.\n:raises FileNotFoundError: If root_path does not exist.",
              "quality_score": 0.6000000000000001,
              "issues": [
                "Missing parameter documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Discover all Python files in the project excluding specified patterns.\\n\\nThis method recursively searches the root directory for Python source files\nwhile respecting exclusion patterns to avoid analyzing generated code,\nvirtual environments, and other non-source directories. This function implements find python files functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: List of items matching the specified criteria.\\n:raises FileNotFoundError: If find python files operation fails due to invalid parameters or system state."
            },
            {
              "name": "analyze_file",
              "line_number": 83,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "file_path",
                  "annotation": "Path"
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Analyze a single Python file for docstring quality and standards compliance.\n\nThis method parses the Python AST to extract all function and class definitions,\nanalyzes their existing docstrings against enterprise standards, and identifies\nareas for improvement including missing docstrings and formatting issues.\n\n:param file_path: Path to the Python file to analyze.\n:return: Dictionary containing analysis results with issues and recommendations.\n:raises SyntaxError: If the Python file contains syntax errors.\n:raises FileNotFoundError: If the specified file does not exist.",
              "quality_score": 0.8,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Analyze a single Python file for docstring quality and standards compliance.\\n\\nThis method parses the Python AST to extract all function and class definitions,\nanalyzes their existing docstrings against enterprise standards, and identifies\nareas for improvement including missing docstrings and formatting issues. This function implements analyze file functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param file_path: Parameter for file path specification.\\n:return: Dictionary containing operation results and status information.\\n:raises FileNotFoundError: If analyze file operation fails due to invalid parameters or system state."
            },
            {
              "name": "_analyze_function",
              "line_number": 128,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "node",
                  "annotation": "ast.FunctionDef"
                },
                {
                  "name": "content",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Analyze a single function definition for docstring compliance.\n\nThis method examines function signatures, existing docstrings, and parameter\npatterns to determine compliance with enterprise documentation standards\nand generate improvement recommendations.\n\n:param node: AST node representing the function definition.\n:param content: Full file content for context extraction.\n:return: Dictionary containing function analysis results and recommendations.\n:raises AttributeError: If node is not a valid function definition.",
              "quality_score": 0.8666666666666667,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Analyze a single function definition for docstring compliance.\\n\\nThis method examines function signatures, existing docstrings, and parameter\npatterns to determine compliance with enterprise documentation standards\nand generate improvement recommendations. This function implements  analyze function functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param node: Parameter for node specification.\\n:param content: String value representing content data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  analyze function operation fails due to invalid parameters or system state."
            },
            {
              "name": "_analyze_class",
              "line_number": 172,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "node",
                  "annotation": "ast.ClassDef"
                },
                {
                  "name": "content",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Analyze a class definition for docstring compliance and method documentation.\n\nThis method examines class-level documentation, inheritance patterns, and\nmethod documentation to ensure comprehensive coverage following enterprise\nstandards for API documentation generation.\n\n:param node: AST node representing the class definition.\n:param content: Full file content for context extraction.\n:return: Dictionary containing class analysis results and recommendations.\n:raises AttributeError: If node is not a valid class definition.",
              "quality_score": 0.8666666666666667,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Analyze a class definition for docstring compliance and method documentation.\\n\\nThis method examines class-level documentation, inheritance patterns, and\nmethod documentation to ensure comprehensive coverage following enterprise\nstandards for API documentation generation. This function implements  analyze class functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param node: Parameter for node specification.\\n:param content: String value representing content data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  analyze class operation fails due to invalid parameters or system state."
            },
            {
              "name": "_score_docstring_quality",
              "line_number": 205,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "docstring",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "params",
                  "annotation": "List[Dict]"
                },
                {
                  "name": "return_annotation",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "float",
              "docstring": "Calculate a quality score for the given docstring based on enterprise standards.\n\nThis method evaluates docstring completeness, format compliance, parameter\ndocumentation coverage, and adherence to the specified documentation format\nto generate a quantitative quality assessment.\n\n:param docstring: The docstring text to evaluate for quality.\n:param params: List of function parameters requiring documentation.\n:param return_annotation: Return type annotation if present.\n:return: Quality score between 0.0 and 1.0 indicating compliance level.\n:raises TypeError: If parameters are not in expected format.",
              "quality_score": 0.9000000000000001,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Calculate a quality score for the given docstring based on enterprise standards.\\n\\nThis method evaluates docstring completeness, format compliance, parameter\ndocumentation coverage, and adherence to the specified documentation format\nto generate a quantitative quality assessment. This function implements  score docstring quality functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param docstring: String value representing docstring data.\\n:param params: Parameter for params specification.\\n:param return_annotation: String value representing return annotation data.\\n:return: Instance of float with operation results.\\n:raises RuntimeError: If  score docstring quality operation fails due to invalid parameters or system state."
            },
            {
              "name": "_identify_docstring_issues",
              "line_number": 250,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "docstring",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "params",
                  "annotation": "List[Dict]"
                },
                {
                  "name": "return_annotation",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "List[str]",
              "docstring": "Identify specific issues with the current docstring format and content.\n\nThis method performs detailed analysis to identify missing elements,\nformatting problems, and compliance gaps relative to the enterprise\ndocumentation standards for automated generation systems.\n\n:param docstring: The docstring text to analyze for issues.\n:param params: List of function parameters to check for documentation.\n:param return_annotation: Return type annotation to verify documentation.\n:return: List of specific issues found in the docstring.\n:raises TypeError: If parameters are not in expected format.",
              "quality_score": 0.9000000000000001,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Identify specific issues with the current docstring format and content.\\n\\nThis method performs detailed analysis to identify missing elements,\nformatting problems, and compliance gaps relative to the enterprise\ndocumentation standards for automated generation systems. This function implements  identify docstring issues functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param docstring: String value representing docstring data.\\n:param params: Parameter for params specification.\\n:param return_annotation: String value representing return annotation data.\\n:return: List of items matching the specified criteria.\\n:raises RuntimeError: If  identify docstring issues operation fails due to invalid parameters or system state."
            },
            {
              "name": "_generate_standard_docstring",
              "line_number": 290,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "func_name",
                  "annotation": "str"
                },
                {
                  "name": "params",
                  "annotation": "List[Dict]"
                },
                {
                  "name": "return_annotation",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "existing_docstring",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "str",
              "docstring": "Generate a standardized docstring following enterprise documentation format.\n\nThis method creates a comprehensive docstring that follows the specified\nenterprise format with proper parameter documentation, return value\ndescriptions, and exception handling information for automated documentation.\n\n:param func_name: Name of the function being documented.\n:param params: List of function parameters with type annotations.\n:param return_annotation: Return type annotation if available.\n:param existing_docstring: Current docstring content for reference.\n:return: Standardized docstring following enterprise format requirements.\n:raises ValueError: If required parameters are missing or invalid.",
              "quality_score": 0.9200000000000002,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate a standardized docstring following enterprise documentation format.\\n\\nThis method creates a comprehensive docstring that follows the specified\nenterprise format with proper parameter documentation, return value\ndescriptions, and exception handling information for automated documentation. This function implements  generate standard docstring functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param func_name: String value representing func name data.\\n:param params: Parameter for params specification.\\n:param return_annotation: String value representing return annotation data.\\n:param existing_docstring: String value representing existing docstring data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate standard docstring operation fails due to invalid parameters or system state."
            },
            {
              "name": "_generate_class_docstring",
              "line_number": 334,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "class_name",
                  "annotation": "str"
                },
                {
                  "name": "existing_docstring",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "str",
              "docstring": "Generate a standardized class docstring following enterprise documentation format.\n\nThis method creates comprehensive class documentation that describes the\nclass purpose, usage patterns, initialization requirements, and integration\npoints following enterprise standards for API documentation generation.\n\n:param class_name: Name of the class being documented.\n:param existing_docstring: Current class docstring for reference.\n:return: Standardized class docstring following enterprise format.\n:raises ValueError: If class_name is empty or invalid.",
              "quality_score": 0.8666666666666667,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate a standardized class docstring following enterprise documentation format.\\n\\nThis method creates comprehensive class documentation that describes the\nclass purpose, usage patterns, initialization requirements, and integration\npoints following enterprise standards for API documentation generation. This function implements  generate class docstring functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param class_name: String value representing class name data.\\n:param existing_docstring: String value representing existing docstring data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate class docstring operation fails due to invalid parameters or system state."
            },
            {
              "name": "generate_report",
              "line_number": 365,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Generate a comprehensive report of docstring analysis across the codebase.\n\nThis method analyzes all Python files in the project and generates a detailed\nreport showing current documentation quality, specific issues, and recommended\nimprovements for achieving enterprise-grade documentation standards.\n\n:param: None.\n:return: Comprehensive analysis report with statistics and recommendations.\n:raises FileNotFoundError: If project files cannot be accessed.",
              "quality_score": 0.6000000000000001,
              "issues": [
                "Missing parameter documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate a comprehensive report of docstring analysis across the codebase.\\n\\nThis method analyzes all Python files in the project and generates a detailed\nreport showing current documentation quality, specific issues, and recommended\nimprovements for achieving enterprise-grade documentation standards. This function implements generate report functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If generate report operation fails due to invalid parameters or system state."
            },
            {
              "name": "_generate_brief_description",
              "line_number": 424,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "func_name",
                  "annotation": "str"
                },
                {
                  "name": "existing",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "str",
              "docstring": "Generate a brief description for the function.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate a brief description for the function.\\n\\nThis function implements  generate brief description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param func_name: String value representing func name data.\\n:param existing: String value representing existing data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate brief description operation fails due to invalid parameters or system state."
            },
            {
              "name": "_generate_detailed_description",
              "line_number": 448,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "func_name",
                  "annotation": "str"
                },
                {
                  "name": "existing",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "str",
              "docstring": "Generate detailed description for the function.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate detailed description for the function.\\n\\nThis function implements  generate detailed description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param func_name: String value representing func name data.\\n:param existing: String value representing existing data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate detailed description operation fails due to invalid parameters or system state."
            },
            {
              "name": "_generate_param_description",
              "line_number": 460,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "param",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "str",
              "docstring": "Generate parameter description based on name and type.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate parameter description based on name and type.\\n\\nThis function implements  generate param description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param param: String value representing param data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate param description operation fails due to invalid parameters or system state."
            },
            {
              "name": "_generate_return_description",
              "line_number": 493,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "return_annotation",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "str",
              "docstring": "Generate return value description.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate return value description.\\n\\nThis function implements  generate return description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param return_annotation: String value representing return annotation data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate return description operation fails due to invalid parameters or system state."
            },
            {
              "name": "_get_common_exception",
              "line_number": 513,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "func_name",
                  "annotation": "str"
                }
              ],
              "return_annotation": "str",
              "docstring": "Determine most appropriate exception type for function.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Determine most appropriate exception type for function.\\n\\nThis function implements  get common exception functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param func_name: String value representing func name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get common exception operation fails due to invalid parameters or system state."
            },
            {
              "name": "_generate_exception_description",
              "line_number": 530,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "func_name",
                  "annotation": "str"
                }
              ],
              "return_annotation": "str",
              "docstring": "Generate exception description based on function purpose.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate exception description based on function purpose.\\n\\nThis function implements  generate exception description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param func_name: String value representing func name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  generate exception description operation fails due to invalid parameters or system state."
            },
            {
              "name": "_generate_recommendations",
              "line_number": 534,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "report",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "List[str]",
              "docstring": "Generate improvement recommendations based on analysis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate improvement recommendations based on analysis.\\n\\nThis function implements  generate recommendations functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param report: String value representing report data.\\n:return: List of items matching the specified criteria.\\n:raises RuntimeError: If  generate recommendations operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.4000000000000001,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a docstringanalyzer with comprehensive functionality.\n\nThis class provides docstringanalyzer operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized DocstringAnalyzer instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\utils\\azure_auth.py",
      "functions": [
        {
          "name": "_using_managed_identity",
          "line_number": 9,
          "is_async": false,
          "parameters": [],
          "return_annotation": "bool",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  using managed identity operation.\\n\\nThis function implements  using managed identity functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If  using managed identity operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_credential",
          "line_number": 19,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Retrieve credential from the system.\\n\\nThis function implements get credential functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If get credential operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\utils\\ml_logging.py",
      "functions": [
        {
          "name": "keyinfo",
          "line_number": 39,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": "logging.Logger"
            },
            {
              "name": "message",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute keyinfo operation.\\n\\nThis function implements keyinfo functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param message: Parameter for message specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If keyinfo operation fails due to invalid parameters or system state."
        },
        {
          "name": "configure_azure_monitor",
          "line_number": 158,
          "is_async": false,
          "parameters": [
            {
              "name": "logger_name",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": "Configure Azure Monitor for the specified logger or root logger.\nThis ensures logs are sent to Application Insights with proper trace correlation.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Configure Azure Monitor for the specified logger or root logger.\\n\\nThis ensures logs are sent to Application Insights with proper trace correlation. This function implements configure azure monitor functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param logger_name: String value representing logger name data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If configure azure monitor operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_span_correlation_attributes",
          "line_number": 194,
          "is_async": false,
          "parameters": [
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "agent_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "operation_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "custom_attributes",
              "annotation": "Optional[dict]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Set correlation attributes on the current span that will appear as customDimensions in Application Insights.\n\nArgs:\n    call_connection_id: ACS call connection ID for correlation\n    session_id: User session ID for correlation\n    agent_name: Name of the AI agent handling the request\n    operation_name: Name of the current operation\n    custom_attributes: Additional custom attributes to set",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set correlation attributes on the current span that will appear as customDimensions in Application Insights.\\n\\nArgs:\n    call_connection_id: ACS call connection ID for correlation\n    session_id: User session ID for correlation\n    agent_name: Name of the AI agent handling the request\n    operation_name: Name of the current operation\n    custom_attributes: Additional custom attributes to set. This function implements set span correlation attributes functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param agent_name: String value representing agent name data.\\n:param operation_name: String value representing operation name data.\\n:param custom_attributes: Parameter for custom attributes specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set span correlation attributes operation fails due to invalid parameters or system state."
        },
        {
          "name": "log_with_correlation",
          "line_number": 242,
          "is_async": false,
          "parameters": [
            {
              "name": "logger",
              "annotation": "logging.Logger"
            },
            {
              "name": "level",
              "annotation": "int"
            },
            {
              "name": "message",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "agent_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "operation_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "custom_attributes",
              "annotation": "Optional[dict]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Log a message with correlation attributes that will appear in Application Insights.\n\nArgs:\n    logger: Logger instance\n    level: Logging level (logging.INFO, logging.ERROR, etc.)\n    message: Log message\n    call_connection_id: ACS call connection ID\n    session_id: User session ID\n    agent_name: AI agent name\n    operation_name: Operation name\n    custom_attributes: Additional custom attributes",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Log a message with correlation attributes that will appear in Application Insights.\\n\\nArgs:\n    logger: Logger instance\n    level: Logging level (logging. This function implements log with correlation functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param logger: Parameter for logger specification.\\n:param level: Integer value for level specification.\\n:param message: String value representing message data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param agent_name: String value representing agent name data.\\n:param operation_name: String value representing operation name data.\\n:param custom_attributes: Parameter for custom attributes specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If log with correlation operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_logger",
          "line_number": 278,
          "is_async": false,
          "parameters": [
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "level",
              "annotation": "Optional[int]"
            },
            {
              "name": "include_stream_handler",
              "annotation": "bool"
            }
          ],
          "return_annotation": "logging.Logger",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Retrieve logger from the system.\\n\\nThis function implements get logger functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param name: String value representing name data.\\n:param level: Integer value for level specification.\\n:param include_stream_handler: Boolean flag indicating include stream handler status.\\n:return: Instance of logging.Logger with operation results.\\n:raises RuntimeError: If get logger operation fails due to invalid parameters or system state."
        },
        {
          "name": "log_function_call",
          "line_number": 323,
          "is_async": false,
          "parameters": [
            {
              "name": "logger_name",
              "annotation": "str"
            },
            {
              "name": "log_inputs",
              "annotation": "bool"
            },
            {
              "name": "log_output",
              "annotation": "bool"
            }
          ],
          "return_annotation": "Callable",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute log function call operation.\\n\\nThis function implements log function call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param logger_name: String value representing logger name data.\\n:param log_inputs: Boolean flag indicating log inputs status.\\n:param log_output: Boolean flag indicating log output status.\\n:return: Instance of Callable with operation results.\\n:raises RuntimeError: If log function call operation fails due to invalid parameters or system state."
        },
        {
          "name": "format",
          "line_number": 48,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "record",
              "annotation": "logging.LogRecord"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute format operation.\\n\\nThis function implements format functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param record: Parameter for record specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If format operation fails due to invalid parameters or system state."
        },
        {
          "name": "format",
          "line_number": 93,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "record",
              "annotation": "logging.LogRecord"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute format operation.\\n\\nThis function implements format functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param record: Parameter for record specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If format operation fails due to invalid parameters or system state."
        },
        {
          "name": "filter",
          "line_number": 104,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "record",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute filter operation.\\n\\nThis function implements filter functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param record: Parameter for record specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If filter operation fails due to invalid parameters or system state."
        },
        {
          "name": "decorator_log_function_call",
          "line_number": 326,
          "is_async": false,
          "parameters": [
            {
              "name": "func",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute decorator log function call operation.\\n\\nThis function implements decorator log function call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param func: Parameter for func specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If decorator log function call operation fails due to invalid parameters or system state."
        },
        {
          "name": "wrapper_log_function_call",
          "line_number": 328,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute wrapper log function call operation.\\n\\nThis function implements wrapper log function call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If wrapper log function call operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "JsonFormatter",
          "line_number": 47,
          "docstring": null,
          "methods": [
            {
              "name": "format",
              "line_number": 48,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "record",
                  "annotation": "logging.LogRecord"
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute format operation.\\n\\nThis function implements format functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param record: Parameter for record specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If format operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a jsonformatter with comprehensive functionality.\n\nThis class provides jsonformatter operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized JsonFormatter instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "PrettyFormatter",
          "line_number": 83,
          "docstring": null,
          "methods": [
            {
              "name": "format",
              "line_number": 93,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "record",
                  "annotation": "logging.LogRecord"
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute format operation.\\n\\nThis function implements format functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param record: Parameter for record specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If format operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a prettyformatter with comprehensive functionality.\n\nThis class provides prettyformatter operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized PrettyFormatter instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "TraceLogFilter",
          "line_number": 103,
          "docstring": null,
          "methods": [
            {
              "name": "filter",
              "line_number": 104,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "record",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute filter operation.\\n\\nThis function implements filter functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param record: Parameter for record specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If filter operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a tracelogfilter with comprehensive functionality.\n\nThis class provides tracelogfilter operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TraceLogFilter instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\utils\\telemetry_config.py",
      "functions": [
        {
          "name": "suppress_azure_credential_logs",
          "line_number": 30,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": "Suppress noisy Azure credential logs that occur during DefaultAzureCredential attempts.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Suppress noisy Azure credential logs that occur during DefaultAzureCredential attempts.\\n\\nThis function implements suppress azure credential logs functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If suppress azure credential logs operation fails due to invalid parameters or system state."
        },
        {
          "name": "setup_azure_monitor",
          "line_number": 48,
          "is_async": false,
          "parameters": [
            {
              "name": "logger_name",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Configure Azure Monitor / Application Insights if connection string is available.\nImplements fallback authentication and graceful degradation for live metrics.\n\nArgs:\n    logger_name (str, optional): Name for the Azure Monitor logger. Defaults to environment variable or 'default'.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Configure Azure Monitor / Application Insights if connection string is available.\\n\\nImplements fallback authentication and graceful degradation for live metrics. This function implements setup azure monitor functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param logger_name: String value representing logger name data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If setup azure monitor operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_azure_credential",
          "line_number": 166,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": "Get the appropriate Azure credential based on the environment.\nPrioritizes managed identity in Azure-hosted environments.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get the appropriate Azure credential based on the environment.\\n\\nPrioritizes managed identity in Azure-hosted environments. This function implements  get azure credential functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  get azure credential operation fails due to invalid parameters or system state."
        },
        {
          "name": "_should_enable_live_metrics",
          "line_number": 184,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": "Determine if live metrics should be enabled based on environment.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Determine if live metrics should be enabled based on environment.\\n\\nThis function implements  should enable live metrics functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  should enable live metrics operation fails due to invalid parameters or system state."
        },
        {
          "name": "_retry_without_live_metrics",
          "line_number": 200,
          "is_async": false,
          "parameters": [
            {
              "name": "logger_name",
              "annotation": "str"
            },
            {
              "name": "connection_string",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Retry Azure Monitor configuration without live metrics if permission errors occur.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Retry Azure Monitor configuration without live metrics if permission errors occur.\\n\\nThis function implements  retry without live metrics functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param logger_name: String value representing logger name data.\\n:param connection_string: String value representing connection string data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  retry without live metrics operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\utils\\trace_context.py",
      "functions": [
        {
          "name": "create_trace_context",
          "line_number": 215,
          "is_async": false,
          "parameters": [
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "metadata",
              "annotation": "Optional[dict]"
            },
            {
              "name": "high_frequency",
              "annotation": "bool"
            },
            {
              "name": "span_kind",
              "annotation": "SpanKind"
            }
          ],
          "return_annotation": "TraceContext",
          "docstring": "Factory function for creating appropriate trace context based on configuration.\n\nArgs:\n    name: Span name\n    call_connection_id: ACS call connection ID for correlation\n    session_id: Session ID for correlation\n    metadata: Additional span attributes\n    high_frequency: Whether this is a high-frequency operation (applies sampling)\n    span_kind: OpenTelemetry span kind for Application Insights correlation\n\nReturns:\n    TraceContext or NoOpTraceContext based on configuration",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Factory function for creating appropriate trace context based on configuration.\\n\\nArgs:\n    name: Span name\n    call_connection_id: ACS call connection ID for correlation\n    session_id: Session ID for correlation\n    metadata: Additional span attributes\n    high_frequency: Whether this is a high-frequency operation (applies sampling)\n    span_kind: OpenTelemetry span kind for Application Insights correlation\n\nReturns:\n    TraceContext or NoOpTraceContext based on configuration. This function implements create trace context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param name: String value representing name data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param metadata: Parameter for metadata specification.\\n:param high_frequency: Boolean flag indicating high frequency status.\\n:param span_kind: Parameter for span kind specification.\\n:return: Instance of TraceContext with operation results.\\n:raises RuntimeError: If create trace context operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 28,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "component",
              "annotation": "Optional[str]"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "test_case",
              "annotation": "Optional[str]"
            },
            {
              "name": "metadata",
              "annotation": "Optional[dict]"
            },
            {
              "name": "high_frequency",
              "annotation": "bool"
            },
            {
              "name": "sampling_rate",
              "annotation": "Optional[float]"
            },
            {
              "name": "span_kind",
              "annotation": "SpanKind"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:param component: String value representing component data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param test_case: String value representing test case data.\\n:param metadata: Parameter for metadata specification.\\n:param high_frequency: Boolean flag indicating high frequency status.\\n:param sampling_rate: Parameter for sampling rate specification.\\n:param span_kind: Parameter for span kind specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "_should_create_span",
          "line_number": 60,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Determine if span should be created based on configuration and sampling.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Determine if span should be created based on configuration and sampling.\\n\\nThis function implements  should create span functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If  should create span operation fails due to invalid parameters or system state."
        },
        {
          "name": "__enter__",
          "line_number": 71,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   enter   operation.\\n\\nThis function implements   enter   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   enter   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__exit__",
          "line_number": 106,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "exc_type",
              "annotation": null
            },
            {
              "name": "exc_val",
              "annotation": null
            },
            {
              "name": "exc_tb",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   exit   operation.\\n\\nThis function implements   exit   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param exc_type: Parameter for exc type specification.\\n:param exc_val: Parameter for exc val specification.\\n:param exc_tb: Parameter for exc tb specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   exit   operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_attribute",
          "line_number": 142,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "value",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Set an attribute on the span if tracing is enabled.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set an attribute on the span if tracing is enabled.\\n\\nThis function implements set attribute functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set attribute operation fails due to invalid parameters or system state."
        },
        {
          "name": "add_event",
          "line_number": 147,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "attributes",
              "annotation": "dict"
            }
          ],
          "return_annotation": "None",
          "docstring": "Add an event to the span if tracing is enabled.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Add an event to the span if tracing is enabled.\\n\\nThis function implements add event functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:param attributes: Parameter for attributes specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If add event operation fails due to invalid parameters or system state."
        },
        {
          "name": "_extract_component_from_span_name",
          "line_number": 153,
          "is_async": false,
          "parameters": [
            {
              "name": "span_name",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Extract component name from span name for consistent Application Insights labeling.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract component name from span name for consistent Application Insights labeling.\\n\\nThis function implements  extract component from span name functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param span_name: String value representing span name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract component from span name operation fails due to invalid parameters or system state."
        },
        {
          "name": "_bucket_latency",
          "line_number": 173,
          "is_async": false,
          "parameters": [
            {
              "name": "duration_ms",
              "annotation": "float"
            }
          ],
          "return_annotation": "str",
          "docstring": "Optimized latency bucketing for performance monitoring.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Optimized latency bucketing for performance monitoring.\\n\\nThis function implements  bucket latency functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param duration_ms: Parameter for duration ms specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  bucket latency operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 197,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__enter__",
          "line_number": 200,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   enter   operation.\\n\\nThis function implements   enter   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   enter   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__exit__",
          "line_number": 203,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "exc_type",
              "annotation": null
            },
            {
              "name": "exc_val",
              "annotation": null
            },
            {
              "name": "exc_tb",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   exit   operation.\\n\\nThis function implements   exit   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param exc_type: Parameter for exc type specification.\\n:param exc_val: Parameter for exc val specification.\\n:param exc_tb: Parameter for exc tb specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   exit   operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_attribute",
          "line_number": 206,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "value",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "No-op implementation of set_attribute.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "No-op implementation of set_attribute.\\n\\nThis function implements set attribute functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set attribute operation fails due to invalid parameters or system state."
        },
        {
          "name": "add_event",
          "line_number": 210,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "attributes",
              "annotation": "dict"
            }
          ],
          "return_annotation": "None",
          "docstring": "No-op implementation of add_event.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "No-op implementation of add_event.\\n\\nThis function implements add event functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:param attributes: Parameter for attributes specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If add event operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "TraceContext",
          "line_number": 20,
          "docstring": "High-performance context manager for tracing spans with configurable overhead.\nOptimized for real-time voice agent scenarios with minimal latency impact.\nCompatible with Azure Application Insights application map visualization.\nUses component-specific tracer names for proper Application Insights correlation.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 28,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "name",
                  "annotation": "str"
                },
                {
                  "name": "component",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "session_id",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "test_case",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "metadata",
                  "annotation": "Optional[dict]"
                },
                {
                  "name": "high_frequency",
                  "annotation": "bool"
                },
                {
                  "name": "sampling_rate",
                  "annotation": "Optional[float]"
                },
                {
                  "name": "span_kind",
                  "annotation": "SpanKind"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:param component: String value representing component data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param test_case: String value representing test case data.\\n:param metadata: Parameter for metadata specification.\\n:param high_frequency: Boolean flag indicating high frequency status.\\n:param sampling_rate: Parameter for sampling rate specification.\\n:param span_kind: Parameter for span kind specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "_should_create_span",
              "line_number": 60,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Determine if span should be created based on configuration and sampling.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Determine if span should be created based on configuration and sampling.\\n\\nThis function implements  should create span functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If  should create span operation fails due to invalid parameters or system state."
            },
            {
              "name": "__enter__",
              "line_number": 71,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   enter   operation.\\n\\nThis function implements   enter   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   enter   operation fails due to invalid parameters or system state."
            },
            {
              "name": "__exit__",
              "line_number": 106,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "exc_type",
                  "annotation": null
                },
                {
                  "name": "exc_val",
                  "annotation": null
                },
                {
                  "name": "exc_tb",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   exit   operation.\\n\\nThis function implements   exit   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param exc_type: Parameter for exc type specification.\\n:param exc_val: Parameter for exc val specification.\\n:param exc_tb: Parameter for exc tb specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   exit   operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_attribute",
              "line_number": 142,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Set an attribute on the span if tracing is enabled.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set an attribute on the span if tracing is enabled.\\n\\nThis function implements set attribute functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set attribute operation fails due to invalid parameters or system state."
            },
            {
              "name": "add_event",
              "line_number": 147,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "name",
                  "annotation": "str"
                },
                {
                  "name": "attributes",
                  "annotation": "dict"
                }
              ],
              "return_annotation": "None",
              "docstring": "Add an event to the span if tracing is enabled.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Add an event to the span if tracing is enabled.\\n\\nThis function implements add event functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:param attributes: Parameter for attributes specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If add event operation fails due to invalid parameters or system state."
            },
            {
              "name": "_extract_component_from_span_name",
              "line_number": 153,
              "is_async": false,
              "parameters": [
                {
                  "name": "span_name",
                  "annotation": "str"
                }
              ],
              "return_annotation": "str",
              "docstring": "Extract component name from span name for consistent Application Insights labeling.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Extract component name from span name for consistent Application Insights labeling.\\n\\nThis function implements  extract component from span name functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param span_name: String value representing span name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract component from span name operation fails due to invalid parameters or system state."
            },
            {
              "name": "_bucket_latency",
              "line_number": 173,
              "is_async": false,
              "parameters": [
                {
                  "name": "duration_ms",
                  "annotation": "float"
                }
              ],
              "return_annotation": "str",
              "docstring": "Optimized latency bucketing for performance monitoring.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Optimized latency bucketing for performance monitoring.\\n\\nThis function implements  bucket latency functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param duration_ms: Parameter for duration ms specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  bucket latency operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a tracecontext with comprehensive functionality.\n\nThis class provides tracecontext operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TraceContext instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "NoOpTraceContext",
          "line_number": 189,
          "docstring": "Ultra-lightweight no-operation context manager for optimal performance.\nUsed when tracing is disabled to minimize overhead.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 197,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "__enter__",
              "line_number": 200,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   enter   operation.\\n\\nThis function implements   enter   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   enter   operation fails due to invalid parameters or system state."
            },
            {
              "name": "__exit__",
              "line_number": 203,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "exc_type",
                  "annotation": null
                },
                {
                  "name": "exc_val",
                  "annotation": null
                },
                {
                  "name": "exc_tb",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   exit   operation.\\n\\nThis function implements   exit   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param exc_type: Parameter for exc type specification.\\n:param exc_val: Parameter for exc val specification.\\n:param exc_tb: Parameter for exc tb specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   exit   operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_attribute",
              "line_number": 206,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "No-op implementation of set_attribute.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "No-op implementation of set_attribute.\\n\\nThis function implements set attribute functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set attribute operation fails due to invalid parameters or system state."
            },
            {
              "name": "add_event",
              "line_number": 210,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "name",
                  "annotation": "str"
                },
                {
                  "name": "attributes",
                  "annotation": "dict"
                }
              ],
              "return_annotation": "None",
              "docstring": "No-op implementation of add_event.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "No-op implementation of add_event.\\n\\nThis function implements add event functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:param attributes: Parameter for attributes specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If add event operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a nooptracecontext with comprehensive functionality.\n\nThis class provides nooptracecontext operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized NoOpTraceContext instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\utils\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\main.py",
      "functions": [
        {
          "name": "create_app",
          "line_number": 190,
          "is_async": false,
          "parameters": [],
          "return_annotation": "FastAPI",
          "docstring": "Create FastAPI app with static documentation.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create FastAPI app with static documentation.\\n\\nThis function implements create app functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of FastAPI with operation results.\\n:raises RuntimeError: If create app operation fails due to invalid parameters or system state."
        },
        {
          "name": "setup_app_middleware_and_routes",
          "line_number": 214,
          "is_async": false,
          "parameters": [
            {
              "name": "app",
              "annotation": "FastAPI"
            }
          ],
          "return_annotation": null,
          "docstring": "Set up middleware and routes for the app.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set up middleware and routes for the app.\\n\\nThis function implements setup app middleware and routes functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param app: Parameter for app specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If setup app middleware and routes operation fails due to invalid parameters or system state."
        },
        {
          "name": "initialize_app",
          "line_number": 246,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": "Initialize app with static documentation.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize app with static documentation.\\n\\nThis function implements initialize app functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If initialize app operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\settings.py",
      "functions": [
        {
          "name": "get_agent_voice",
          "line_number": 161,
          "is_async": false,
          "parameters": [
            {
              "name": "agent_config_path",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Extract voice from agent YAML configuration. Cached to avoid repeated file reads.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract voice from agent YAML configuration.\\n\\nThis function implements get agent voice functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param agent_config_path: String value representing agent config path data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get agent voice operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\scripts\\start_backend.py",
      "functions": [
        {
          "name": "find_project_root",
          "line_number": 37,
          "is_async": false,
          "parameters": [],
          "return_annotation": "Path",
          "docstring": "Walk upward from this file until ``environment.yaml`` is found.\n\n:return: Path pointing to the project root.\n:raises RuntimeError: if the file cannot be located.",
          "quality_score": 0.6000000000000001,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Walk upward from this file until ``environment.\\n\\nyaml`` is found. This function implements find project root functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of Path with operation results.\\n:raises RuntimeError: If find project root operation fails due to invalid parameters or system state."
        },
        {
          "name": "conda_env_exists",
          "line_number": 56,
          "is_async": false,
          "parameters": [
            {
              "name": "env_name",
              "annotation": "str"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Return ``True`` if *env_name* exists in the local conda installation.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return ``True`` if *env_name* exists in the local conda installation.\\n\\nThis function implements conda env exists functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param env_name: String value representing env name data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If conda env exists operation fails due to invalid parameters or system state."
        },
        {
          "name": "create_conda_env",
          "line_number": 71,
          "is_async": false,
          "parameters": [
            {
              "name": "env_yaml",
              "annotation": "Path"
            }
          ],
          "return_annotation": "None",
          "docstring": "Create a conda environment from *env_yaml*.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create a conda environment from *env_yaml*.\\n\\nThis function implements create conda env functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param env_yaml: Parameter for env yaml specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If create conda env operation fails due to invalid parameters or system state."
        },
        {
          "name": "start_backend",
          "line_number": 85,
          "is_async": false,
          "parameters": [
            {
              "name": "env_name",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Launch the FastAPI backend using *env_name*.\n\nIf the current interpreter is already inside that environment,\nexecute the backend directly. Otherwise, print clear instructions.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Launch the FastAPI backend using *env_name*.\\n\\nIf the current interpreter is already inside that environment,\nexecute the backend directly. This function implements start backend functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param env_name: String value representing env name data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start backend operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\scripts\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\swagger_docs.py",
      "functions": [
        {
          "name": "get_tags",
          "line_number": 78,
          "is_async": false,
          "parameters": [],
          "return_annotation": "List[Dict[str, str]]",
          "docstring": "Get OpenAPI tags.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get OpenAPI tags.\\n\\nThis function implements get tags functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get tags operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_description",
          "line_number": 83,
          "is_async": false,
          "parameters": [],
          "return_annotation": "str",
          "docstring": "Get API description.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get API description.\\n\\nThis function implements get description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get description operation fails due to invalid parameters or system state."
        },
        {
          "name": "setup_app_documentation",
          "line_number": 88,
          "is_async": false,
          "parameters": [
            {
              "name": "app",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Setup the FastAPI app's documentation.\n\nArgs:\n    app: The FastAPI application instance\n\nReturns:\n    bool: True if setup was successful, False otherwise",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Setup the FastAPI app's documentation.\\n\\nArgs:\n    app: The FastAPI application instance\n\nReturns:\n    bool: True if setup was successful, False otherwise. This function implements setup app documentation functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param app: Parameter for app specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If setup app documentation operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 19,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "generate_tags",
          "line_number": 22,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "List[Dict[str, str]]",
          "docstring": "Generate OpenAPI tags.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate OpenAPI tags.\\n\\nThis function implements generate tags functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If generate tags operation fails due to invalid parameters or system state."
        },
        {
          "name": "generate_description",
          "line_number": 48,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "str",
          "docstring": "Generate a clean, readable API description for OpenAPI docs.\n\nReturns:\n    str: Markdown-formatted description.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate a clean, readable API description for OpenAPI docs.\\n\\nReturns:\n    str: Markdown-formatted description. This function implements generate description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If generate description operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "DynamicDocsManager",
          "line_number": 16,
          "docstring": "Simple documentation manager.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 19,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "generate_tags",
              "line_number": 22,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "List[Dict[str, str]]",
              "docstring": "Generate OpenAPI tags.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate OpenAPI tags.\\n\\nThis function implements generate tags functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If generate tags operation fails due to invalid parameters or system state."
            },
            {
              "name": "generate_description",
              "line_number": 48,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "str",
              "docstring": "Generate a clean, readable API description for OpenAPI docs.\n\nReturns:\n    str: Markdown-formatted description.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate a clean, readable API description for OpenAPI docs.\\n\\nReturns:\n    str: Markdown-formatted description. This function implements generate description functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If generate description operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a dynamicdocsmanager with comprehensive functionality.\n\nThis class provides dynamicdocsmanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized DynamicDocsManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\helpers.py",
      "error": "unexpected indent (<unknown>, line 7)",
      "functions": [],
      "classes": [],
      "issues": [
        "Failed to parse file: unexpected indent (<unknown>, line 7)"
      ]
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\shared_ws.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\router.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\dependencies\\orchestrator.py",
      "functions": [
        {
          "name": "get_orchestrator",
          "line_number": 90,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": "FastAPI dependency to get the orchestrator function.\n\nReturns the route_conversation_turn function for dependency injection.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "FastAPI dependency to get the orchestrator function.\\n\\nReturns the route_conversation_turn function for dependency injection. This function implements get orchestrator functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If get orchestrator operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\endpoints\\calls.py",
      "functions": [
        {
          "name": "create_call_event",
          "line_number": 41,
          "is_async": false,
          "parameters": [
            {
              "name": "event_type",
              "annotation": "str"
            },
            {
              "name": "call_id",
              "annotation": "str"
            },
            {
              "name": "data",
              "annotation": "dict"
            }
          ],
          "return_annotation": "CloudEvent",
          "docstring": "Create a CloudEvent for call-related operations using V1 event system.\n\nArgs:\n    event_type: Type of the call event\n    call_id: Call connection ID\n    data: Event data payload\n\nReturns:\n    CloudEvent: Properly formatted event for V1 processor\n\nNote:\n    When using with CallEventProcessor.process_events(), remember to pass\n    the request.app.state as the second argument for dependency injection.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create a CloudEvent for call-related operations using V1 event system.\\n\\nArgs:\n    event_type: Type of the call event\n    call_id: Call connection ID\n    data: Event data payload\n\nReturns:\n    CloudEvent: Properly formatted event for V1 processor\n\nNote:\n    When using with CallEventProcessor. This function implements create call event functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event_type: String value representing event type data.\\n:param call_id: Azure Communication Services call connection identifier.\\n:param data: Parameter for data specification.\\n:return: Instance of CloudEvent with operation results.\\n:raises RuntimeError: If create call event operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\endpoints\\health.py",
      "functions": [
        {
          "name": "_validate_phone_number",
          "line_number": 38,
          "is_async": false,
          "parameters": [
            {
              "name": "phone_number",
              "annotation": "str"
            }
          ],
          "return_annotation": "tuple[bool, str]",
          "docstring": "Validate ACS phone number format.\nReturns (is_valid, error_message_if_invalid)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validate ACS phone number format.\\n\\nThis function implements  validate phone number functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param phone_number: String value representing phone number data.\\n:return: String value containing the requested information.\\n:raises ValueError: If  validate phone number operation fails due to invalid parameters or system state."
        },
        {
          "name": "_validate_guid",
          "line_number": 61,
          "is_async": false,
          "parameters": [
            {
              "name": "guid_str",
              "annotation": "str"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Validate if a string is a valid GUID format.\nReturns True if valid GUID, False otherwise.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validate if a string is a valid GUID format.\\n\\nThis function implements  validate guid functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param guid_str: String value representing guid str data.\\n:return: Boolean value indicating operation success status.\\n:raises ValueError: If  validate guid operation fails due to invalid parameters or system state."
        },
        {
          "name": "_validate_auth_configuration",
          "line_number": 76,
          "is_async": false,
          "parameters": [],
          "return_annotation": "tuple[bool, str]",
          "docstring": "Validate authentication configuration when ENABLE_AUTH_VALIDATION is True.\nReturns (is_valid, error_message_if_invalid)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validate authentication configuration when ENABLE_AUTH_VALIDATION is True.\\n\\nReturns (is_valid, error_message_if_invalid). This function implements  validate auth configuration functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: String value containing the requested information.\\n:raises ValueError: If  validate auth configuration operation fails due to invalid parameters or system state."
        },
        {
          "name": "extract_agent_info",
          "line_number": 614,
          "is_async": false,
          "parameters": [
            {
              "name": "agent",
              "annotation": null
            },
            {
              "name": "config_path",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute extract agent info operation.\\n\\nThis function implements extract agent info functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param agent: Parameter for agent specification.\\n:param config_path: String value representing config path data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If extract agent info operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AgentModelUpdate",
          "line_number": 740,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a agentmodelupdate with comprehensive functionality.\n\nThis class provides agentmodelupdate operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AgentModelUpdate instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AgentVoiceUpdate",
          "line_number": 747,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a agentvoiceupdate with comprehensive functionality.\n\nThis class provides agentvoiceupdate operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AgentVoiceUpdate instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AgentConfigUpdate",
          "line_number": 752,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a agentconfigupdate with comprehensive functionality.\n\nThis class provides agentconfigupdate operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AgentConfigUpdate instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\endpoints\\media.py",
      "functions": [
        {
          "name": "_log_websocket_disconnect",
          "line_number": 465,
          "is_async": false,
          "parameters": [
            {
              "name": "e",
              "annotation": "WebSocketDisconnect"
            },
            {
              "name": "session_id",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Log WebSocket disconnection with appropriate level.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Log WebSocket disconnection with appropriate level.\\n\\nThis function implements  log websocket disconnect functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param e: Parameter for e specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If  log websocket disconnect operation fails due to invalid parameters or system state."
        },
        {
          "name": "_log_websocket_error",
          "line_number": 505,
          "is_async": false,
          "parameters": [
            {
              "name": "e",
              "annotation": "Exception"
            },
            {
              "name": "session_id",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Log WebSocket errors with full context.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Log WebSocket errors with full context.\\n\\nThis function implements  log websocket error functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param e: Parameter for e specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  log websocket error operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\endpoints\\realtime.py",
      "functions": [
        {
          "name": "_log_dashboard_disconnect",
          "line_number": 658,
          "is_async": false,
          "parameters": [
            {
              "name": "e",
              "annotation": "WebSocketDisconnect"
            },
            {
              "name": "client_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Log dashboard client disconnection.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Log dashboard client disconnection.\\n\\nThis function implements  log dashboard disconnect functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param e: Parameter for e specification.\\n:param client_id: Unique identifier for client entity.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If  log dashboard disconnect operation fails due to invalid parameters or system state."
        },
        {
          "name": "_log_dashboard_error",
          "line_number": 683,
          "is_async": false,
          "parameters": [
            {
              "name": "e",
              "annotation": "Exception"
            },
            {
              "name": "client_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Log dashboard client errors.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Log dashboard client errors.\\n\\nThis function implements  log dashboard error functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param e: Parameter for e specification.\\n:param client_id: Unique identifier for client entity.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  log dashboard error operation fails due to invalid parameters or system state."
        },
        {
          "name": "_log_conversation_disconnect",
          "line_number": 697,
          "is_async": false,
          "parameters": [
            {
              "name": "e",
              "annotation": "WebSocketDisconnect"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Log conversation session disconnection.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Log conversation session disconnection.\\n\\nThis function implements  log conversation disconnect functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param e: Parameter for e specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If  log conversation disconnect operation fails due to invalid parameters or system state."
        },
        {
          "name": "_log_conversation_error",
          "line_number": 724,
          "is_async": false,
          "parameters": [
            {
              "name": "e",
              "annotation": "Exception"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Log conversation session errors.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Log conversation session errors.\\n\\nThis function implements  log conversation error functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param e: Parameter for e specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  log conversation error operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_partial",
          "line_number": 532,
          "is_async": false,
          "parameters": [
            {
              "name": "txt",
              "annotation": "str"
            },
            {
              "name": "lang",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute on partial operation.\\n\\nThis function implements on partial functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param txt: String value representing txt data.\\n:param lang: String value representing lang data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on partial operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_final",
          "line_number": 549,
          "is_async": false,
          "parameters": [
            {
              "name": "txt",
              "annotation": "str"
            },
            {
              "name": "lang",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute on final operation.\\n\\nThis function implements on final functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param txt: String value representing txt data.\\n:param lang: String value representing lang data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on final operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\endpoints\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\events\\demo.py",
      "functions": [
        {
          "name": "create_webhook_handler_example",
          "line_number": 107,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": "Example of how to integrate V1 Event Processor with FastAPI webhook endpoint.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Example of how to integrate V1 Event Processor with FastAPI webhook endpoint.\\n\\nThis function implements create webhook handler example functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If create webhook handler example operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 81,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "MockRequestState",
          "line_number": 80,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 81,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a mockrequeststate with comprehensive functionality.\n\nThis class provides mockrequeststate operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MockRequestState instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\events\\handlers.py",
      "functions": [
        {
          "name": "_extract_caller_id",
          "line_number": 392,
          "is_async": false,
          "parameters": [
            {
              "name": "caller_info",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "str",
          "docstring": "Extract caller ID from caller information.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract caller ID from caller information.\\n\\nThis function implements  extract caller id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param caller_info: String value representing caller info data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract caller id operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_participant_phone",
          "line_number": 437,
          "is_async": false,
          "parameters": [
            {
              "name": "event",
              "annotation": "CloudEvent"
            },
            {
              "name": "memo_manager",
              "annotation": "Optional[Any]"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Extract participant phone number from event.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract participant phone number from event.\\n\\nThis function implements  get participant phone functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param memo_manager: Parameter for memo manager specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get participant phone operation fails due to invalid parameters or system state."
        },
        {
          "name": "_normalize_tone",
          "line_number": 511,
          "is_async": false,
          "parameters": [
            {
              "name": "tone",
              "annotation": "str"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Normalize DTMF tone to standard format.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Normalize DTMF tone to standard format.\\n\\nThis function implements  normalize tone functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param tone: String value representing tone data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  normalize tone operation fails due to invalid parameters or system state."
        },
        {
          "name": "_update_dtmf_sequence",
          "line_number": 556,
          "is_async": false,
          "parameters": [
            {
              "name": "context",
              "annotation": "CallEventContext"
            },
            {
              "name": "tone",
              "annotation": "str"
            },
            {
              "name": "sequence_id",
              "annotation": "Optional[int]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Update DTMF sequence in memory.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Update DTMF sequence in memory.\\n\\nThis function implements  update dtmf sequence functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:param tone: String value representing tone data.\\n:param sequence_id: Unique identifier for sequence entity.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  update dtmf sequence operation fails due to invalid parameters or system state."
        },
        {
          "name": "_validate_sequence",
          "line_number": 602,
          "is_async": false,
          "parameters": [
            {
              "name": "context",
              "annotation": "CallEventContext"
            },
            {
              "name": "sequence",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Validate DTMF sequence.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validate DTMF sequence.\\n\\nThis function implements  validate sequence functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:param sequence: String value representing sequence data.\\n:return: Instance of None with operation results.\\n:raises ValueError: If  validate sequence operation fails due to invalid parameters or system state."
        },
        {
          "name": "_safe_get_event_data",
          "line_number": 625,
          "is_async": false,
          "parameters": [
            {
              "name": "event",
              "annotation": "CloudEvent"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Safely extract event data as dictionary.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Safely extract event data as dictionary.\\n\\nThis function implements  safe get event data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  safe get event data operation fails due to invalid parameters or system state."
        },
        {
          "name": "digits_tail",
          "line_number": 445,
          "is_async": false,
          "parameters": [
            {
              "name": "s",
              "annotation": "Optional[str]"
            },
            {
              "name": "n",
              "annotation": "int"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute digits tail operation.\\n\\nThis function implements digits tail functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param s: String value representing s data.\\n:param n: Integer value for n specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If digits tail operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "CallEventHandlers",
          "line_number": 25,
          "docstring": "Event handlers for Azure Communication Services call events.\n\nCentralized handlers for ALL call lifecycle events including:\n- API-initiated operations (call initiation, answering)\n- ACS webhook events (connected, disconnected, etc.)\n- Media and recognition events",
          "methods": [
            {
              "name": "handle_call_initiated",
              "line_number": 36,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle call initiation events from API operations.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle call initiation events from API operations.\\n\\nThis function implements handle call initiated functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle call initiated operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_inbound_call_received",
              "line_number": 71,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle inbound call events from Event Grid webhooks.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle inbound call events from Event Grid webhooks.\\n\\nThis function implements handle inbound call received functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle inbound call received operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_call_answered",
              "line_number": 100,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle call answered events (both inbound and outbound).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle call answered events (both inbound and outbound).\\n\\nThis function implements handle call answered functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle call answered operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_webhook_events",
              "line_number": 127,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle all ACS webhook events that come through callbacks endpoint.\n\nThis is the central handler for events from /callbacks endpoint,\nrouting them to specific handlers based on event type.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle all ACS webhook events that come through callbacks endpoint.\\n\\nThis is the central handler for events from /callbacks endpoint,\nrouting them to specific handlers based on event type. This function implements handle webhook events functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle webhook events operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_call_connected",
              "line_number": 191,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle call connected event - broadcast status and play greeting.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle call connected event - broadcast status and play greeting.\\n\\nThis function implements handle call connected functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If handle call connected operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_call_disconnected",
              "line_number": 228,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle call disconnected event - log reason and cleanup.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle call disconnected event - log reason and cleanup.\\n\\nThis function implements handle call disconnected functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If handle call disconnected operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_create_call_failed",
              "line_number": 250,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle create call failed event - log error details.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle create call failed event - log error details.\\n\\nThis function implements handle create call failed functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle create call failed operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_answer_call_failed",
              "line_number": 280,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle answer call failed event - log error details.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle answer call failed event - log error details.\\n\\nThis function implements handle answer call failed functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle answer call failed operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_participants_updated",
              "line_number": 310,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle participant updates and start DTMF recognition.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle participant updates and start DTMF recognition.\\n\\nThis function implements handle participants updated functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle participants updated operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_dtmf_tone_received",
              "line_number": 339,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle DTMF tone with sequence validation.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle DTMF tone with sequence validation.\\n\\nThis function implements handle dtmf tone received functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle dtmf tone received operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_play_completed",
              "line_number": 362,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle play completed event.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle play completed event.\\n\\nThis function implements handle play completed functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle play completed operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_play_failed",
              "line_number": 367,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle play failed event.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle play failed event.\\n\\nThis function implements handle play failed functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle play failed operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_recognize_completed",
              "line_number": 375,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle recognize completed event.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle recognize completed event.\\n\\nThis function implements handle recognize completed functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle recognize completed operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_recognize_failed",
              "line_number": 380,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle recognize failed event.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle recognize failed event.\\n\\nThis function implements handle recognize failed functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle recognize failed operation fails due to invalid parameters or system state."
            },
            {
              "name": "_extract_caller_id",
              "line_number": 392,
              "is_async": false,
              "parameters": [
                {
                  "name": "caller_info",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "str",
              "docstring": "Extract caller ID from caller information.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Extract caller ID from caller information.\\n\\nThis function implements  extract caller id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param caller_info: String value representing caller info data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract caller id operation fails due to invalid parameters or system state."
            },
            {
              "name": "_play_greeting",
              "line_number": 399,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Play greeting to connected call.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Play greeting to connected call.\\n\\nThis function implements  play greeting functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  play greeting operation fails due to invalid parameters or system state."
            },
            {
              "name": "_cleanup_call_state",
              "line_number": 426,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Clean up call state when call disconnects.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Clean up call state when call disconnects.\\n\\nThis function implements  cleanup call state functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  cleanup call state operation fails due to invalid parameters or system state."
            },
            {
              "name": "_get_participant_phone",
              "line_number": 437,
              "is_async": false,
              "parameters": [
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "memo_manager",
                  "annotation": "Optional[Any]"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Extract participant phone number from event.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Extract participant phone number from event.\\n\\nThis function implements  get participant phone functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param memo_manager: Parameter for memo manager specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get participant phone operation fails due to invalid parameters or system state."
            },
            {
              "name": "_start_dtmf_recognition",
              "line_number": 488,
              "is_async": true,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                },
                {
                  "name": "target_phone",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Start DTMF recognition for participant.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Start DTMF recognition for participant.\\n\\nThis function implements  start dtmf recognition functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:param target_phone: String value representing target phone data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  start dtmf recognition operation fails due to invalid parameters or system state."
            },
            {
              "name": "_normalize_tone",
              "line_number": 511,
              "is_async": false,
              "parameters": [
                {
                  "name": "tone",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Normalize DTMF tone to standard format.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Normalize DTMF tone to standard format.\\n\\nThis function implements  normalize tone functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param tone: String value representing tone data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  normalize tone operation fails due to invalid parameters or system state."
            },
            {
              "name": "_update_dtmf_sequence",
              "line_number": 556,
              "is_async": false,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                },
                {
                  "name": "tone",
                  "annotation": "str"
                },
                {
                  "name": "sequence_id",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Update DTMF sequence in memory.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Update DTMF sequence in memory.\\n\\nThis function implements  update dtmf sequence functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:param tone: String value representing tone data.\\n:param sequence_id: Unique identifier for sequence entity.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  update dtmf sequence operation fails due to invalid parameters or system state."
            },
            {
              "name": "_validate_sequence",
              "line_number": 602,
              "is_async": false,
              "parameters": [
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                },
                {
                  "name": "sequence",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Validate DTMF sequence.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Validate DTMF sequence.\\n\\nThis function implements  validate sequence functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param context: Parameter for context specification.\\n:param sequence: String value representing sequence data.\\n:return: Instance of None with operation results.\\n:raises ValueError: If  validate sequence operation fails due to invalid parameters or system state."
            },
            {
              "name": "_safe_get_event_data",
              "line_number": 625,
              "is_async": false,
              "parameters": [
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Safely extract event data as dictionary.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Safely extract event data as dictionary.\\n\\nThis function implements  safe get event data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  safe get event data operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a calleventhandlers with comprehensive functionality.\n\nThis class provides calleventhandlers operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallEventHandlers instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\events\\processor.py",
      "functions": [
        {
          "name": "get_call_event_processor",
          "line_number": 244,
          "is_async": false,
          "parameters": [],
          "return_annotation": "CallEventProcessor",
          "docstring": "Get the global call event processor instance.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get the global call event processor instance.\\n\\nThis function implements get call event processor functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of CallEventProcessor with operation results.\\n:raises RuntimeError: If get call event processor operation fails due to invalid parameters or system state."
        },
        {
          "name": "reset_call_event_processor",
          "line_number": 252,
          "is_async": false,
          "parameters": [],
          "return_annotation": "None",
          "docstring": "Reset the global processor (primarily for testing).",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Reset the global processor (primarily for testing).\\n\\nThis function implements reset call event processor functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If reset call event processor operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 36,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "register_handler",
          "line_number": 50,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "event_type",
              "annotation": "str"
            },
            {
              "name": "handler",
              "annotation": "CallEventHandler"
            }
          ],
          "return_annotation": "None",
          "docstring": "Register a handler for a specific event type.\n\nArgs:\n    event_type: ACS event type (e.g., \"Microsoft.Communication.CallConnected\")\n    handler: Async function to handle the event",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Register a handler for a specific event type.\\n\\nArgs:\n    event_type: ACS event type (e. This function implements register handler functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event_type: String value representing event type data.\\n:param handler: Parameter for handler specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If register handler operation fails due to invalid parameters or system state."
        },
        {
          "name": "unregister_handler",
          "line_number": 64,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "event_type",
              "annotation": "str"
            },
            {
              "name": "handler",
              "annotation": "CallEventHandler"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Unregister a specific handler.\n\nArgs:\n    event_type: ACS event type\n    handler: Handler function to remove\n\nReturns:\n    True if handler was found and removed",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Unregister a specific handler.\\n\\nArgs:\n    event_type: ACS event type\n    handler: Handler function to remove\n\nReturns:\n    True if handler was found and removed. This function implements unregister handler functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event_type: String value representing event type data.\\n:param handler: Parameter for handler specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If unregister handler operation fails due to invalid parameters or system state."
        },
        {
          "name": "_extract_call_connection_id",
          "line_number": 155,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "event",
              "annotation": "CloudEvent"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Extract call connection ID from CloudEvent.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract call connection ID from CloudEvent.\\n\\nThis function implements  extract call connection id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event: Parameter for event specification.\\n:return: String value containing the requested information.\\n:raises ConnectionError: If  extract call connection id operation fails due to invalid parameters or system state."
        },
        {
          "name": "_create_event_context",
          "line_number": 169,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "event",
              "annotation": "CloudEvent"
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            },
            {
              "name": "request_state",
              "annotation": "Any"
            }
          ],
          "return_annotation": "CallEventContext",
          "docstring": "Create event context from CloudEvent and request state.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create event context from CloudEvent and request state.\\n\\nThis function implements  create event context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event: Parameter for event specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param request_state: Parameter for request state specification.\\n:return: Instance of CallEventContext with operation results.\\n:raises RuntimeError: If  create event context operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_stats",
          "line_number": 224,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Get processor statistics.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get processor statistics.\\n\\nThis function implements get stats functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get stats operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_active_calls",
          "line_number": 235,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Set[str]",
          "docstring": "Get set of currently active call connection IDs.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get set of currently active call connection IDs.\\n\\nThis function implements get active calls functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get active calls operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "CallEventProcessor",
          "line_number": 25,
          "docstring": "Simplified call event processor inspired by Azure's Event Processor pattern.\n\nKey features:\n- Call correlation by callConnectionId\n- Simple handler registration per event type\n- No complex middleware or retry logic\n- Direct integration with legacy handlers",
          "methods": [
            {
              "name": "__init__",
              "line_number": 36,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "register_handler",
              "line_number": 50,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event_type",
                  "annotation": "str"
                },
                {
                  "name": "handler",
                  "annotation": "CallEventHandler"
                }
              ],
              "return_annotation": "None",
              "docstring": "Register a handler for a specific event type.\n\nArgs:\n    event_type: ACS event type (e.g., \"Microsoft.Communication.CallConnected\")\n    handler: Async function to handle the event",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Register a handler for a specific event type.\\n\\nArgs:\n    event_type: ACS event type (e. This function implements register handler functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event_type: String value representing event type data.\\n:param handler: Parameter for handler specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If register handler operation fails due to invalid parameters or system state."
            },
            {
              "name": "unregister_handler",
              "line_number": 64,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event_type",
                  "annotation": "str"
                },
                {
                  "name": "handler",
                  "annotation": "CallEventHandler"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Unregister a specific handler.\n\nArgs:\n    event_type: ACS event type\n    handler: Handler function to remove\n\nReturns:\n    True if handler was found and removed",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Unregister a specific handler.\\n\\nArgs:\n    event_type: ACS event type\n    handler: Handler function to remove\n\nReturns:\n    True if handler was found and removed. This function implements unregister handler functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event_type: String value representing event type data.\\n:param handler: Parameter for handler specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If unregister handler operation fails due to invalid parameters or system state."
            },
            {
              "name": "process_events",
              "line_number": 84,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "events",
                  "annotation": "List[CloudEvent]"
                },
                {
                  "name": "request_state",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Process a list of CloudEvents from ACS webhook.\n\nArgs:\n    events: List of CloudEvent objects from webhook\n    request_state: FastAPI request app state for dependencies\n\nReturns:\n    Processing result summary",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process a list of CloudEvents from ACS webhook.\\n\\nArgs:\n    events: List of CloudEvent objects from webhook\n    request_state: FastAPI request app state for dependencies\n\nReturns:\n    Processing result summary. This function implements process events functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param events: Parameter for events specification.\\n:param request_state: Parameter for request state specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If process events operation fails due to invalid parameters or system state."
            },
            {
              "name": "_process_single_event",
              "line_number": 127,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "request_state",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "None",
              "docstring": "Process a single CloudEvent.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process a single CloudEvent.\\n\\nThis function implements  process single event functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event: Parameter for event specification.\\n:param request_state: Parameter for request state specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  process single event operation fails due to invalid parameters or system state."
            },
            {
              "name": "_extract_call_connection_id",
              "line_number": 155,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Extract call connection ID from CloudEvent.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Extract call connection ID from CloudEvent.\\n\\nThis function implements  extract call connection id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event: Parameter for event specification.\\n:return: String value containing the requested information.\\n:raises ConnectionError: If  extract call connection id operation fails due to invalid parameters or system state."
            },
            {
              "name": "_create_event_context",
              "line_number": 169,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                },
                {
                  "name": "request_state",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "CallEventContext",
              "docstring": "Create event context from CloudEvent and request state.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Create event context from CloudEvent and request state.\\n\\nThis function implements  create event context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event: Parameter for event specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param request_state: Parameter for request state specification.\\n:return: Instance of CallEventContext with operation results.\\n:raises RuntimeError: If  create event context operation fails due to invalid parameters or system state."
            },
            {
              "name": "_execute_handlers",
              "line_number": 196,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "handlers",
                  "annotation": "List[CallEventHandler]"
                },
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Execute all handlers for an event with error isolation.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Execute all handlers for an event with error isolation.\\n\\nThis function implements  execute handlers functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param handlers: Parameter for handlers specification.\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  execute handlers operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_stats",
              "line_number": 224,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Get processor statistics.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get processor statistics.\\n\\nThis function implements get stats functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get stats operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_active_calls",
              "line_number": 235,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Set[str]",
              "docstring": "Get set of currently active call connection IDs.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get set of currently active call connection IDs.\\n\\nThis function implements get active calls functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get active calls operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a calleventprocessor with comprehensive functionality.\n\nThis class provides calleventprocessor operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallEventProcessor instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\events\\registration.py",
      "functions": [
        {
          "name": "register_default_handlers",
          "line_number": 20,
          "is_async": false,
          "parameters": [],
          "return_annotation": "None",
          "docstring": "Register default call event handlers with the V1 Event Processor.\n\nThis function sets up the standard ACS event handlers adapted from\nthe legacy implementation, following Azure's Event Processor pattern.\n\nUses singleton pattern to avoid re-registering handlers on every request.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Register default call event handlers with the V1 Event Processor.\\n\\nThis function sets up the standard ACS event handlers adapted from\nthe legacy implementation, following Azure's Event Processor pattern. This function implements register default handlers functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If register default handlers operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_processor_stats",
          "line_number": 106,
          "is_async": false,
          "parameters": [],
          "return_annotation": "dict",
          "docstring": "Get current processor statistics.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get current processor statistics.\\n\\nThis function implements get processor stats functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of dict with operation results.\\n:raises RuntimeError: If get processor stats operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_active_calls",
          "line_number": 112,
          "is_async": false,
          "parameters": [],
          "return_annotation": "set",
          "docstring": "Get currently active call connection IDs.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get currently active call connection IDs.\\n\\nThis function implements get active calls functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of set with operation results.\\n:raises RuntimeError: If get active calls operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\events\\types.py",
      "functions": [
        {
          "name": "get_event_data",
          "line_number": 32,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Safely extract event data as dictionary.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Safely extract event data as dictionary.\\n\\nThis function implements get event data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get event data operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_event_field",
          "line_number": 53,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "field_name",
              "annotation": "str"
            },
            {
              "name": "default",
              "annotation": "Any"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Safely get a field from event data.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Safely get a field from event data.\\n\\nThis function implements get event field functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param field_name: String value representing field name data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get event field operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "CallEventContext",
          "line_number": 16,
          "docstring": "Simplified context for call event processing.\n\nInspired by Azure's Event Processor pattern but simplified for V1 needs.\nContains only essential data for call event handling.",
          "methods": [
            {
              "name": "get_event_data",
              "line_number": 32,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Safely extract event data as dictionary.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Safely extract event data as dictionary.\\n\\nThis function implements get event data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get event data operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_event_field",
              "line_number": 53,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "field_name",
                  "annotation": "str"
                },
                {
                  "name": "default",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "Any",
              "docstring": "Safely get a field from event data.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Safely get a field from event data.\\n\\nThis function implements get event field functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param field_name: String value representing field name data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get event field operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a calleventcontext with comprehensive functionality.\n\nThis class provides calleventcontext operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallEventContext instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CallEventHandler",
          "line_number": 59,
          "docstring": "Protocol for call event handlers following Azure Event Processor pattern.",
          "methods": [
            {
              "name": "__call__",
              "line_number": 62,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "context",
                  "annotation": "CallEventContext"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle a call event with the given context.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle a call event with the given context.\\n\\nThis function implements   call   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param context: Parameter for context specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   call   operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a calleventhandler with comprehensive functionality.\n\nThis class provides calleventhandler operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallEventHandler instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ACSEventTypes",
          "line_number": 68,
          "docstring": "Standard Azure Communication Services event types.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a acseventtypes with comprehensive functionality.\n\nThis class provides acseventtypes operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ACSEventTypes instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "V1EventTypes",
          "line_number": 99,
          "docstring": "Custom V1 API event types for call lifecycle management.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a v1eventtypes with comprehensive functionality.\n\nThis class provides v1eventtypes operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized V1EventTypes instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\events\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\handlers\\acs_call_lifecycle.py",
      "functions": [
        {
          "name": "safe_set_span_attributes",
          "line_number": 52,
          "is_async": false,
          "parameters": [
            {
              "name": "span",
              "annotation": null
            },
            {
              "name": "attributes",
              "annotation": "dict"
            }
          ],
          "return_annotation": null,
          "docstring": "Safely set span attributes without errors.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Safely set span attributes without errors.\\n\\nThis function implements safe set span attributes functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param span: Parameter for span specification.\\n:param attributes: Parameter for attributes specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If safe set span attributes operation fails due to invalid parameters or system state."
        },
        {
          "name": "_safe_get_event_data",
          "line_number": 61,
          "is_async": false,
          "parameters": [
            {
              "name": "event",
              "annotation": "CloudEvent"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Safely extract data from CloudEvent object as a dictionary.\n\nCloudEvent.data can be various types (dict, str, bytes, etc.).\nThis function ensures we always get a dictionary we can call .get() on.\n\nArgs:\n    event: CloudEvent object from Azure\n\nReturns:\n    Dictionary containing event data, empty dict if parsing fails",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Safely extract data from CloudEvent object as a dictionary.\\n\\nCloudEvent. This function implements  safe get event data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  safe get event data operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_event_field",
          "line_number": 106,
          "is_async": false,
          "parameters": [
            {
              "name": "event",
              "annotation": "CloudEvent"
            },
            {
              "name": "field_name",
              "annotation": "str"
            },
            {
              "name": "default",
              "annotation": "Any"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Safely get a field from CloudEvent data.\n\nArgs:\n    event: CloudEvent object\n    field_name: Name of field to extract\n    default: Default value if field not found\n\nReturns:\n    Field value or default",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Safely get a field from CloudEvent data.\\n\\nArgs:\n    event: CloudEvent object\n    field_name: Name of field to extract\n    default: Default value if field not found\n\nReturns:\n    Field value or default. This function implements  get event field functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param field_name: String value representing field name data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If  get event field operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_participant_phone",
          "line_number": 610,
          "is_async": false,
          "parameters": [
            {
              "name": "event",
              "annotation": "CloudEvent"
            },
            {
              "name": "cm",
              "annotation": "MemoManager"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Extract participant phone number from event.\n\nArgs:\n    event: CloudEvent containing participant information\n    cm: MemoManager for context access\n\nReturns:\n    Participant phone number or None if not found",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract participant phone number from event.\\n\\nArgs:\n    event: CloudEvent containing participant information\n    cm: MemoManager for context access\n\nReturns:\n    Participant phone number or None if not found. This function implements get participant phone functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get participant phone operation fails due to invalid parameters or system state."
        },
        {
          "name": "create_enterprise_media_handler",
          "line_number": 654,
          "is_async": false,
          "parameters": [
            {
              "name": "websocket",
              "annotation": null
            },
            {
              "name": "orchestrator",
              "annotation": "callable"
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            },
            {
              "name": "recognizer",
              "annotation": null
            },
            {
              "name": "cm",
              "annotation": "MemoManager"
            },
            {
              "name": "session_id",
              "annotation": "str"
            }
          ],
          "return_annotation": "ACSMediaHandler",
          "docstring": "Factory function for creating media handlers.\n\nArgs:\n    websocket: WebSocket connection\n    orchestrator: Conversation orchestrator\n    call_connection_id: ACS call connection ID\n    recognizer: Speech recognition client\n    cm: Conversation memory manager\n    session_id: Session identifier\n\nReturns:\n    Configured ACSMediaHandler instance",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Factory function for creating media handlers.\\n\\nArgs:\n    websocket: WebSocket connection\n    orchestrator: Conversation orchestrator\n    call_connection_id: ACS call connection ID\n    recognizer: Speech recognition client\n    cm: Conversation memory manager\n    session_id: Session identifier\n\nReturns:\n    Configured ACSMediaHandler instance. This function implements create enterprise media handler functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param orchestrator: Parameter for orchestrator specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param recognizer: Parameter for recognizer specification.\\n:param cm: Parameter for cm specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Instance of ACSMediaHandler with operation results.\\n:raises RuntimeError: If create enterprise media handler operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 133,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize ACS lifecycle handler.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize ACS lifecycle handler.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "_extract_caller_id",
          "line_number": 461,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "caller_info",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "str",
          "docstring": "Extract caller ID from caller information.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract caller ID from caller information.\\n\\nThis function implements  extract caller id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param caller_info: String value representing caller info data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract caller id operation fails due to invalid parameters or system state."
        },
        {
          "name": "digits_tail",
          "line_number": 622,
          "is_async": false,
          "parameters": [
            {
              "name": "s",
              "annotation": "Optional[str]"
            },
            {
              "name": "n",
              "annotation": "int"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute digits tail operation.\\n\\nThis function implements digits tail functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param s: String value representing s data.\\n:param n: Integer value for n specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If digits tail operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 159,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "redis_mgr",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "ACSLifecycleHandler",
          "line_number": 122,
          "docstring": "Azure Communication Services call lifecycle manager.\n\nProvides call lifecycle operations with:\n- Pluggable orchestrator support for different conversation engines\n- Clean tracing and observability\n- Outbound/inbound call management\n- Event processing with backward compatibility",
          "methods": [
            {
              "name": "__init__",
              "line_number": 133,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize ACS lifecycle handler.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize ACS lifecycle handler.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "_emit_call_event",
              "line_number": 137,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event_type",
                  "annotation": "str"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                },
                {
                  "name": "data",
                  "annotation": "Dict[str, Any]"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Emit a call event through the V1 event system.\n\nArgs:\n    event_type: Type of event to emit\n    call_connection_id: Call connection ID\n    data: Event data\n    redis_mgr: Redis manager for state access",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Emit a call event through the V1 event system.\\n\\nArgs:\n    event_type: Type of event to emit\n    call_connection_id: Call connection ID\n    data: Event data\n    redis_mgr: Redis manager for state access. This function implements  emit call event functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event_type: String value representing event type data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param data: String value representing data data.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  emit call event operation fails due to invalid parameters or system state."
            },
            {
              "name": "start_outbound_call",
              "line_number": 178,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                },
                {
                  "name": "target_number",
                  "annotation": "str"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "call_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Initiate an outbound call with orchestrator support.\n\nArgs:\n    acs_caller: The ACS caller instance\n    target_number: The phone number to call (E.164 format)\n    redis_mgr: Redis manager instance for state persistence\n    call_id: Optional call ID for tracking (auto-generated if None)\n\nReturns:\n    Dict containing call initiation result",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initiate an outbound call with orchestrator support.\\n\\nArgs:\n    acs_caller: The ACS caller instance\n    target_number: The phone number to call (E. This function implements start outbound call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param acs_caller: Parameter for acs caller specification.\\n:param target_number: String value representing target number data.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param call_id: Azure Communication Services call connection identifier.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If start outbound call operation fails due to invalid parameters or system state."
            },
            {
              "name": "accept_inbound_call",
              "line_number": 307,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "request_body",
                  "annotation": "Dict[str, Any]"
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                }
              ],
              "return_annotation": "JSONResponse",
              "docstring": "Accept and process inbound call events.\n\nHandles Event Grid subscription validation and incoming calls with\nsimplified logic and V1 API migration standards.\n\nArgs:\n    request_body: Event Grid request body containing events\n    acs_caller: The ACS caller instance for call operations\n\nReturns:\n    JSONResponse with validation response or call acceptance status",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Accept and process inbound call events.\\n\\nHandles Event Grid subscription validation and incoming calls with\nsimplified logic and V1 API migration standards. This function implements accept inbound call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param request_body: String value representing request body data.\\n:param acs_caller: Parameter for acs caller specification.\\n:return: Instance of JSONResponse with operation results.\\n:raises RuntimeError: If accept inbound call operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_subscription_validation",
              "line_number": 375,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event_data",
                  "annotation": "Dict[str, Any]"
                },
                {
                  "name": "span",
                  "annotation": null
                }
              ],
              "return_annotation": "JSONResponse",
              "docstring": "Handle Event Grid subscription validation.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle Event Grid subscription validation.\\n\\nThis function implements  handle subscription validation functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event_data: String value representing event data data.\\n:param span: Parameter for span specification.\\n:return: Instance of JSONResponse with operation results.\\n:raises RuntimeError: If  handle subscription validation operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_incoming_call",
              "line_number": 392,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event_data",
                  "annotation": "Dict[str, Any]"
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                },
                {
                  "name": "span",
                  "annotation": null
                }
              ],
              "return_annotation": "JSONResponse",
              "docstring": "Handle incoming call event.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle incoming call event.\\n\\nThis function implements  handle incoming call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event_data: String value representing event data data.\\n:param acs_caller: Parameter for acs caller specification.\\n:param span: Parameter for span specification.\\n:return: Instance of JSONResponse with operation results.\\n:raises RuntimeError: If  handle incoming call operation fails due to invalid parameters or system state."
            },
            {
              "name": "_extract_caller_id",
              "line_number": 461,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "caller_info",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "str",
              "docstring": "Extract caller ID from caller information.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Extract caller ID from caller information.\\n\\nThis function implements  extract caller id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param caller_info: String value representing caller info data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract caller id operation fails due to invalid parameters or system state."
            },
            {
              "name": "_initialize_call_state",
              "line_number": 467,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                },
                {
                  "name": "caller_id",
                  "annotation": "str"
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Initialize conversation state for the call.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize conversation state for the call.\\n\\nThis function implements  initialize call state functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param caller_id: Unique identifier for caller entity.\\n:param acs_caller: Parameter for acs caller specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  initialize call state operation fails due to invalid parameters or system state."
            },
            {
              "name": "process_call_events",
              "line_number": 492,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "events",
                  "annotation": "list"
                },
                {
                  "name": "request",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, str]",
              "docstring": "Process runtime call events through the V1 event system.\n\nThis method delegates ALL event processing to the events system for\nconsistent handling of all ACS webhook events.\n\nArgs:\n    events: List of ACS webhook events to process\n    request: FastAPI request object containing app state dependencies\n\nReturns:\n    Dict with processing status and metadata",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process runtime call events through the V1 event system.\\n\\nThis method delegates ALL event processing to the events system for\nconsistent handling of all ACS webhook events. This function implements process call events functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param events: Parameter for events specification.\\n:param request: HTTP request object containing client data and headers.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If process call events operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a acslifecyclehandler with comprehensive functionality.\n\nThis class provides acslifecyclehandler operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ACSLifecycleHandler instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "MockRequestState",
          "line_number": 158,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 159,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a mockrequeststate with comprehensive functionality.\n\nThis class provides mockrequeststate operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MockRequestState instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\handlers\\acs_media_lifecycle.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 95,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "main_loop",
              "annotation": "Optional[asyncio.AbstractEventLoop]"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param main_loop: String value representing main loop data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_main_loop",
          "line_number": 99,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "loop",
              "annotation": "asyncio.AbstractEventLoop"
            }
          ],
          "return_annotation": null,
          "docstring": "Set the main event loop reference for cross-thread communication.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set the main event loop reference for cross-thread communication.\\n\\nThis function implements set main loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param loop: String value representing loop data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If set main loop operation fails due to invalid parameters or system state."
        },
        {
          "name": "schedule_barge_in",
          "line_number": 104,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "handler_func",
              "annotation": "Callable"
            }
          ],
          "return_annotation": null,
          "docstring": "Schedule barge-in handler to run on main event loop ASAP.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Schedule barge-in handler to run on main event loop ASAP.\\n\\nThis function implements schedule barge in functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param handler_func: Parameter for handler func specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If schedule barge in operation fails due to invalid parameters or system state."
        },
        {
          "name": "queue_speech_result",
          "line_number": 136,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "speech_queue",
              "annotation": "asyncio.Queue"
            },
            {
              "name": "event",
              "annotation": "SpeechEvent"
            }
          ],
          "return_annotation": null,
          "docstring": "Queue final speech result for Route Turn Thread processing.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Queue final speech result for Route Turn Thread processing.\\n\\nThis function implements queue speech result functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param speech_queue: Parameter for speech queue specification.\\n:param event: Parameter for event specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If queue speech result operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 205,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "recognizer",
              "annotation": "StreamingSpeechRecognizerFromBytes"
            },
            {
              "name": "thread_bridge",
              "annotation": "ThreadBridge"
            },
            {
              "name": "barge_in_handler",
              "annotation": "Callable"
            },
            {
              "name": "speech_queue",
              "annotation": "asyncio.Queue"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param recognizer: Parameter for recognizer specification.\\n:param thread_bridge: Parameter for thread bridge specification.\\n:param barge_in_handler: Parameter for barge in handler specification.\\n:param speech_queue: Parameter for speech queue specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "_setup_callbacks",
          "line_number": 224,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Configure speech recognition callbacks for immediate response.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Configure speech recognition callbacks for immediate response.\\n\\nThis function implements  setup callbacks functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  setup callbacks operation fails due to invalid parameters or system state."
        },
        {
          "name": "prepare_thread",
          "line_number": 303,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Prepare the speech recognition thread but don't start recognizer yet.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Prepare the speech recognition thread but don't start recognizer yet.\\n\\nThis function implements prepare thread functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises FileNotFoundError: If prepare thread operation fails due to invalid parameters or system state."
        },
        {
          "name": "start_recognizer",
          "line_number": 330,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Start the actual speech recognizer (called on AudioMetadata).",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Start the actual speech recognizer (called on AudioMetadata).\\n\\nThis function implements start recognizer functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start recognizer operation fails due to invalid parameters or system state."
        },
        {
          "name": "stop",
          "line_number": 443,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Stop speech recognition and thread.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Stop speech recognition and thread.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 483,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "speech_queue",
              "annotation": "asyncio.Queue"
            },
            {
              "name": "orchestrator_func",
              "annotation": "Callable"
            },
            {
              "name": "memory_manager",
              "annotation": "Optional[MemoManager]"
            },
            {
              "name": "websocket",
              "annotation": "WebSocket"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param speech_queue: Parameter for speech queue specification.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:param memory_manager: Parameter for memory manager specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 761,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "websocket",
              "annotation": "WebSocket"
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            },
            {
              "name": "route_turn_thread",
              "annotation": "Optional['RouteTurnThread']"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param route_turn_thread: Parameter for route turn thread specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 1086,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "websocket",
              "annotation": "WebSocket"
            },
            {
              "name": "orchestrator_func",
              "annotation": "Callable"
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            },
            {
              "name": "recognizer",
              "annotation": "Optional[StreamingSpeechRecognizerFromBytes]"
            },
            {
              "name": "memory_manager",
              "annotation": "Optional[MemoManager]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "greeting_text",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize the three-thread architecture media handler.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize the three-thread architecture media handler.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param recognizer: Parameter for recognizer specification.\\n:param memory_manager: Parameter for memory manager specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param greeting_text: String value representing greeting text data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "is_running",
          "line_number": 1242,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Check if the handler is currently running.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if the handler is currently running.\\n\\nThis function implements is running functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is running operation fails due to invalid parameters or system state."
        },
        {
          "name": "queue_direct_text_playback",
          "line_number": 1246,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "playback_type",
              "annotation": "SpeechEventType"
            },
            {
              "name": "language",
              "annotation": "str"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Queue direct text for playback through the Route Turn Thread.\n\nThis is a convenience method for external code to send text directly to ACS\nfor TTS playback without going through the orchestrator.\n\nArgs:\n    text: Text to be played back\n    playback_type: Type of playback event (GREETING, ANNOUNCEMENT, STATUS_UPDATE, ERROR_MESSAGE)\n    language: Language for TTS (default: en-US)\n\nReturns:\n    bool: True if successfully queued, False otherwise",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Queue direct text for playback through the Route Turn Thread.\\n\\nThis is a convenience method for external code to send text directly to ACS\nfor TTS playback without going through the orchestrator. This function implements queue direct text playback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param playback_type: Parameter for playback type specification.\\n:param language: String value representing language data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If queue direct text playback operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_partial",
          "line_number": 227,
          "is_async": false,
          "parameters": [
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "lang",
              "annotation": "str"
            },
            {
              "name": "speaker_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": "\ud83d\udea8 IMMEDIATE: Trigger barge-in detection",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "\ud83d\udea8 IMMEDIATE: Trigger barge-in detection.\\n\\nThis function implements on partial functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param text: String value representing text data.\\n:param lang: String value representing lang data.\\n:param speaker_id: Unique identifier for speaker entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on partial operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_final",
          "line_number": 251,
          "is_async": false,
          "parameters": [
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "lang",
              "annotation": "str"
            },
            {
              "name": "speaker_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": "\ud83d\udccb QUEUED: Send to Route Turn Thread for AI processing.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "\ud83d\udccb QUEUED: Send to Route Turn Thread for AI processing.\\n\\nThis function implements on final functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param text: String value representing text data.\\n:param lang: String value representing lang data.\\n:param speaker_id: Unique identifier for speaker entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on final operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_error",
          "line_number": 266,
          "is_async": false,
          "parameters": [
            {
              "name": "error",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "\u274c ERROR: Log and queue error event.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "\u274c ERROR: Log and queue error event.\\n\\nThis function implements on error functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param error: String value representing error data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on error operation fails due to invalid parameters or system state."
        },
        {
          "name": "recognition_thread",
          "line_number": 309,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": "Background thread ready for speech recognition.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Background thread ready for speech recognition.\\n\\nThis function implements recognition thread functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises FileNotFoundError: If recognition thread operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "SpeechEventType",
          "line_number": 56,
          "docstring": "Types of speech recognition events.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a speecheventtype with comprehensive functionality.\n\nThis class provides speecheventtype operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized SpeechEventType instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "SpeechEvent",
          "line_number": 69,
          "docstring": "Speech recognition event with metadata.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a speechevent with comprehensive functionality.\n\nThis class provides speechevent operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized SpeechEvent instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ThreadBridge",
          "line_number": 87,
          "docstring": "\ud83d\udd17 Cross-Thread Communication Bridge\n\nProvides thread-safe communication between Speech SDK Thread and Main Event Loop.\nImplements the non-blocking patterns described in the documentation.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 95,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "main_loop",
                  "annotation": "Optional[asyncio.AbstractEventLoop]"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param main_loop: String value representing main loop data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_main_loop",
              "line_number": 99,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "loop",
                  "annotation": "asyncio.AbstractEventLoop"
                }
              ],
              "return_annotation": null,
              "docstring": "Set the main event loop reference for cross-thread communication.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set the main event loop reference for cross-thread communication.\\n\\nThis function implements set main loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param loop: String value representing loop data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If set main loop operation fails due to invalid parameters or system state."
            },
            {
              "name": "schedule_barge_in",
              "line_number": 104,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "handler_func",
                  "annotation": "Callable"
                }
              ],
              "return_annotation": null,
              "docstring": "Schedule barge-in handler to run on main event loop ASAP.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Schedule barge-in handler to run on main event loop ASAP.\\n\\nThis function implements schedule barge in functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param handler_func: Parameter for handler func specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If schedule barge in operation fails due to invalid parameters or system state."
            },
            {
              "name": "queue_speech_result",
              "line_number": 136,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "speech_queue",
                  "annotation": "asyncio.Queue"
                },
                {
                  "name": "event",
                  "annotation": "SpeechEvent"
                }
              ],
              "return_annotation": null,
              "docstring": "Queue final speech result for Route Turn Thread processing.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Queue final speech result for Route Turn Thread processing.\\n\\nThis function implements queue speech result functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param speech_queue: Parameter for speech queue specification.\\n:param event: Parameter for event specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If queue speech result operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a threadbridge with comprehensive functionality.\n\nThis class provides threadbridge operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ThreadBridge instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "SpeechSDKThread",
          "line_number": 191,
          "docstring": "\ud83c\udfa4 Speech SDK Thread Manager\n\nHandles continuous audio recognition in isolation. Never blocks on AI processing\nor network operations, ensuring immediate barge-in detection capability.\n\nKey Characteristics:\n- Runs in dedicated background thread\n- Immediate callback execution (< 10ms)\n- Cross-thread communication via ThreadBridge\n- Never blocks on queue operations",
          "methods": [
            {
              "name": "__init__",
              "line_number": 205,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "recognizer",
                  "annotation": "StreamingSpeechRecognizerFromBytes"
                },
                {
                  "name": "thread_bridge",
                  "annotation": "ThreadBridge"
                },
                {
                  "name": "barge_in_handler",
                  "annotation": "Callable"
                },
                {
                  "name": "speech_queue",
                  "annotation": "asyncio.Queue"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param recognizer: Parameter for recognizer specification.\\n:param thread_bridge: Parameter for thread bridge specification.\\n:param barge_in_handler: Parameter for barge in handler specification.\\n:param speech_queue: Parameter for speech queue specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "_setup_callbacks",
              "line_number": 224,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Configure speech recognition callbacks for immediate response.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Configure speech recognition callbacks for immediate response.\\n\\nThis function implements  setup callbacks functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  setup callbacks operation fails due to invalid parameters or system state."
            },
            {
              "name": "prepare_thread",
              "line_number": 303,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Prepare the speech recognition thread but don't start recognizer yet.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Prepare the speech recognition thread but don't start recognizer yet.\\n\\nThis function implements prepare thread functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises FileNotFoundError: If prepare thread operation fails due to invalid parameters or system state."
            },
            {
              "name": "start_recognizer",
              "line_number": 330,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Start the actual speech recognizer (called on AudioMetadata).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Start the actual speech recognizer (called on AudioMetadata).\\n\\nThis function implements start recognizer functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start recognizer operation fails due to invalid parameters or system state."
            },
            {
              "name": "_test_barge_in_after_delay",
              "line_number": 409,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Test method to manually trigger barge-in for verification.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Test method to manually trigger barge-in for verification.\\n\\nThis function implements  test barge in after delay functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  test barge in after delay operation fails due to invalid parameters or system state."
            },
            {
              "name": "_test_partial_callback_after_delay",
              "line_number": 422,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Test method to manually trigger partial callback for verification.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Test method to manually trigger partial callback for verification.\\n\\nThis function implements  test partial callback after delay functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  test partial callback after delay operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 443,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Stop speech recognition and thread.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Stop speech recognition and thread.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a speechsdkthread with comprehensive functionality.\n\nThis class provides speechsdkthread operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized SpeechSDKThread instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "RouteTurnThread",
          "line_number": 469,
          "docstring": "\ud83d\udd04 Route Turn Thread Manager\n\nDedicated thread for AI processing and response generation. Can safely block\non queue operations without affecting speech recognition or WebSocket handling.\n\nKey Characteristics:\n- Blocks only on queue.get() operations\n- Serializes conversation turns via queue\n- Delegates to orchestrator for response generation\n- Isolated from real-time operations",
          "methods": [
            {
              "name": "__init__",
              "line_number": 483,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "speech_queue",
                  "annotation": "asyncio.Queue"
                },
                {
                  "name": "orchestrator_func",
                  "annotation": "Callable"
                },
                {
                  "name": "memory_manager",
                  "annotation": "Optional[MemoManager]"
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param speech_queue: Parameter for speech queue specification.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:param memory_manager: Parameter for memory manager specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "start",
              "line_number": 501,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Start the route turn processing loop.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Start the route turn processing loop.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
            },
            {
              "name": "_processing_loop",
              "line_number": 512,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Main processing loop - blocks only on queue.get().\n\nThis is the ONLY thread that can safely block, as it's isolated\nfrom real-time speech recognition and WebSocket handling.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Main processing loop - blocks only on queue.\\n\\nget(). This function implements  processing loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  processing loop operation fails due to invalid parameters or system state."
            },
            {
              "name": "_process_final_speech",
              "line_number": 578,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event",
                  "annotation": "SpeechEvent"
                }
              ],
              "return_annotation": null,
              "docstring": "Process final speech through orchestrator.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process final speech through orchestrator.\\n\\nThis function implements  process final speech functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event: Parameter for event specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  process final speech operation fails due to invalid parameters or system state."
            },
            {
              "name": "_process_direct_text_playback",
              "line_number": 625,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event",
                  "annotation": "SpeechEvent"
                },
                {
                  "name": "playback_type",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Process direct text playback through send_response_to_acs (bypasses orchestrator).\n\nGeneric method for sending text directly to ACS for TTS playback. Can be used for:\n- Greeting messages\n- System announcements\n- Error messages\n- Status updates\n- Any direct text-to-speech scenarios\n\nArgs:\n    event: SpeechEvent containing the text to play\n    playback_type: Type of playback for logging/tracing (e.g., \"greeting\", \"announcement\", \"error\")",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process direct text playback through send_response_to_acs (bypasses orchestrator).\\n\\nGeneric method for sending text directly to ACS for TTS playback. This function implements  process direct text playback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event: Parameter for event specification.\\n:param playback_type: String value representing playback type data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  process direct text playback operation fails due to invalid parameters or system state."
            },
            {
              "name": "cancel_current_processing",
              "line_number": 697,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Cancel current Route Turn processing (for barge-in interruption).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Cancel current Route Turn processing (for barge-in interruption).\\n\\nThis function implements cancel current processing functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If cancel current processing operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 726,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Stop the route turn processing loop.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Stop the route turn processing loop.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a routeturnthread with comprehensive functionality.\n\nThis class provides routeturnthread operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized RouteTurnThread instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "MainEventLoop",
          "line_number": 747,
          "docstring": "\ud83c\udf10 Main Event Loop Manager\n\nHandles WebSocket operations, task cancellation, and real-time commands.\nNever blocks to ensure immediate responsiveness for barge-in scenarios.\n\nKey Characteristics:\n- Never blocks on any operations\n- Immediate task cancellation (< 1ms)\n- Real-time WebSocket handling\n- Coordinates with other threads via async patterns",
          "methods": [
            {
              "name": "__init__",
              "line_number": 761,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                },
                {
                  "name": "route_turn_thread",
                  "annotation": "Optional['RouteTurnThread']"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param route_turn_thread: Parameter for route turn thread specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_barge_in",
              "line_number": 783,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "\ud83d\udea8 Handle barge-in interruption with immediate response.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "\ud83d\udea8 Handle barge-in interruption with immediate response.\\n\\nThis function implements handle barge in functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If handle barge in operation fails due to invalid parameters or system state."
            },
            {
              "name": "_cancel_current_playback",
              "line_number": 825,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Cancel any current playback task immediately.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Cancel any current playback task immediately.\\n\\nThis function implements  cancel current playback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  cancel current playback operation fails due to invalid parameters or system state."
            },
            {
              "name": "_send_stop_audio_command",
              "line_number": 834,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Send immediate stop audio command to ACS.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Send immediate stop audio command to ACS.\\n\\nThis function implements  send stop audio command functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  send stop audio command operation fails due to invalid parameters or system state."
            },
            {
              "name": "_reset_barge_in_state",
              "line_number": 848,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Reset barge-in state after brief delay.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Reset barge-in state after brief delay.\\n\\nThis function implements  reset barge in state functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  reset barge in state operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_media_message",
              "line_number": 854,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "stream_data",
                  "annotation": "str"
                },
                {
                  "name": "recognizer",
                  "annotation": null
                },
                {
                  "name": "acs_handler",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "\ud83c\udf10 Handle incoming media messages (Main Event Loop responsibility).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "\ud83c\udf10 Handle incoming media messages (Main Event Loop responsibility).\\n\\nThis function implements handle media message functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stream_data: String value representing stream data data.\\n:param recognizer: Parameter for recognizer specification.\\n:param acs_handler: Parameter for acs handler specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If handle media message operation fails due to invalid parameters or system state."
            },
            {
              "name": "_process_audio_chunk_async",
              "line_number": 952,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "audio_bytes",
                  "annotation": "Union[str, bytes]"
                },
                {
                  "name": "recognizer",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Process audio chunk asynchronously to prevent blocking the main event loop.\n\nArgs:\n    audio_bytes: Base64 string or raw bytes of audio data\n    recognizer: Speech recognizer instance",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process audio chunk asynchronously to prevent blocking the main event loop.\\n\\nArgs:\n    audio_bytes: Base64 string or raw bytes of audio data\n    recognizer: Speech recognizer instance. This function implements  process audio chunk async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_bytes: String value representing audio bytes data.\\n:param recognizer: Parameter for recognizer specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  process audio chunk async operation fails due to invalid parameters or system state."
            },
            {
              "name": "_play_greeting_when_ready",
              "line_number": 1025,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "acs_handler",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Queue greeting for playback through Route Turn Thread (maintains architecture consistency).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Queue greeting for playback through Route Turn Thread (maintains architecture consistency).\\n\\nThis function implements  play greeting when ready functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param acs_handler: Parameter for acs handler specification.\\n:return: None upon successful completion of the operation.\\n:raises FileNotFoundError: If  play greeting when ready operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a maineventloop with comprehensive functionality.\n\nThis class provides maineventloop operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MainEventLoop instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ACSMediaHandler",
          "line_number": 1072,
          "docstring": "\ud83c\udfaf V1 ACS Media Handler - Three-Thread Architecture Implementation\n\nCoordinates the documented three-thread architecture for low-latency voice interactions:\n\n\ud83e\uddf5 Speech SDK Thread: Isolated audio recognition, never blocks\n\ud83e\uddf5 Route Turn Thread: AI processing queue, blocks only on queue operations\n\ud83e\uddf5 Main Event Loop: WebSocket & task management, never blocks\n\nThis design ensures sub-50ms barge-in response time while maintaining\nclean separation of concerns and thread-safe communication patterns.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 1086,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                },
                {
                  "name": "orchestrator_func",
                  "annotation": "Callable"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                },
                {
                  "name": "recognizer",
                  "annotation": "Optional[StreamingSpeechRecognizerFromBytes]"
                },
                {
                  "name": "memory_manager",
                  "annotation": "Optional[MemoManager]"
                },
                {
                  "name": "session_id",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "greeting_text",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize the three-thread architecture media handler.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize the three-thread architecture media handler.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param recognizer: Parameter for recognizer specification.\\n:param memory_manager: Parameter for memory manager specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param greeting_text: String value representing greeting text data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "start",
              "line_number": 1142,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "\ud83d\ude80 Start all three threads in coordinated fashion.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "\ud83d\ude80 Start all three threads in coordinated fashion.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_media_message",
              "line_number": 1196,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "stream_data",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "\ud83c\udf10 Handle incoming media messages (Main Event Loop responsibility).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "\ud83c\udf10 Handle incoming media messages (Main Event Loop responsibility).\\n\\nThis function implements handle media message functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stream_data: String value representing stream data data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If handle media message operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 1207,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "\ud83d\uded1 Stop all threads in reverse dependency order.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "\ud83d\uded1 Stop all threads in reverse dependency order.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            },
            {
              "name": "is_running",
              "line_number": 1242,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if the handler is currently running.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if the handler is currently running.\\n\\nThis function implements is running functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is running operation fails due to invalid parameters or system state."
            },
            {
              "name": "queue_direct_text_playback",
              "line_number": 1246,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "playback_type",
                  "annotation": "SpeechEventType"
                },
                {
                  "name": "language",
                  "annotation": "str"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Queue direct text for playback through the Route Turn Thread.\n\nThis is a convenience method for external code to send text directly to ACS\nfor TTS playback without going through the orchestrator.\n\nArgs:\n    text: Text to be played back\n    playback_type: Type of playback event (GREETING, ANNOUNCEMENT, STATUS_UPDATE, ERROR_MESSAGE)\n    language: Language for TTS (default: en-US)\n\nReturns:\n    bool: True if successfully queued, False otherwise",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Queue direct text for playback through the Route Turn Thread.\\n\\nThis is a convenience method for external code to send text directly to ACS\nfor TTS playback without going through the orchestrator. This function implements queue direct text playback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param playback_type: Parameter for playback type specification.\\n:param language: String value representing language data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If queue direct text playback operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a acsmediahandler with comprehensive functionality.\n\nThis class provides acsmediahandler operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ACSMediaHandler instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\handlers\\realtime.py",
      "functions": [
        {
          "name": "create_v1_realtime_handler",
          "line_number": 403,
          "is_async": false,
          "parameters": [
            {
              "name": "orchestrator",
              "annotation": "Optional[callable]"
            }
          ],
          "return_annotation": "V1RealtimeHandler",
          "docstring": "Factory function for creating V1 realtime handlers.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Factory function for creating V1 realtime handlers.\\n\\nThis function implements create v1 realtime handler functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param orchestrator: Parameter for orchestrator specification.\\n:return: Instance of V1RealtimeHandler with operation results.\\n:raises RuntimeError: If create v1 realtime handler operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 51,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "orchestrator",
              "annotation": "Optional[callable]"
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize V1 realtime handler.\n\nArgs:\n    orchestrator: Optional orchestrator for conversation processing.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize V1 realtime handler.\\n\\nArgs:\n    orchestrator: Optional orchestrator for conversation processing. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param orchestrator: Parameter for orchestrator specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_partial",
          "line_number": 222,
          "is_async": false,
          "parameters": [
            {
              "name": "txt",
              "annotation": "str"
            },
            {
              "name": "lang",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute on partial operation.\\n\\nThis function implements on partial functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param txt: String value representing txt data.\\n:param lang: String value representing lang data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on partial operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_final",
          "line_number": 257,
          "is_async": false,
          "parameters": [
            {
              "name": "txt",
              "annotation": "str"
            },
            {
              "name": "lang",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute on final operation.\\n\\nThis function implements on final functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param txt: String value representing txt data.\\n:param lang: String value representing lang data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on final operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "V1RealtimeHandler",
          "line_number": 40,
          "docstring": "Real-time communication handler for V1 API.\n\nFeatures:\n- Dashboard relay broadcasting\n- Browser conversation handling with orchestrator support\n- Audio streaming with latency optimization\n- Clean tracing and simplified logging",
          "methods": [
            {
              "name": "__init__",
              "line_number": 51,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "orchestrator",
                  "annotation": "Optional[callable]"
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize V1 realtime handler.\n\nArgs:\n    orchestrator: Optional orchestrator for conversation processing.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize V1 realtime handler.\\n\\nArgs:\n    orchestrator: Optional orchestrator for conversation processing. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param orchestrator: Parameter for orchestrator specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_dashboard_relay",
              "line_number": 61,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle dashboard relay WebSocket connections.\n\nArgs:\n    websocket: WebSocket connection from dashboard client",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle dashboard relay WebSocket connections.\\n\\nArgs:\n    websocket: WebSocket connection from dashboard client. This function implements handle dashboard relay functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle dashboard relay operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_browser_conversation",
              "line_number": 120,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                },
                {
                  "name": "orchestrator",
                  "annotation": "Optional[callable]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle browser conversation WebSocket with orchestrator support.\n\nArgs:\n    websocket: WebSocket connection from browser client\n    orchestrator: Optional orchestrator for conversation processing",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle browser conversation WebSocket with orchestrator support.\\n\\nArgs:\n    websocket: WebSocket connection from browser client\n    orchestrator: Optional orchestrator for conversation processing. This function implements handle browser conversation functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param orchestrator: Parameter for orchestrator specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle browser conversation operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a v1realtimehandler with comprehensive functionality.\n\nThis class provides v1realtimehandler operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized V1RealtimeHandler instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\models\\base.py",
      "functions": [
        {
          "name": "update_timestamp",
          "line_number": 62,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Update the updated_at timestamp to current time.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Update the updated_at timestamp to current time.\\n\\nThis function implements update timestamp functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If update timestamp operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "BaseModel",
          "line_number": 17,
          "docstring": "Base model for all database entities.\n\nProvides:\n- Unique ID generation\n- Standard configuration",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a basemodel with comprehensive functionality.\n\nThis class provides basemodel operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized BaseModel instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "TimestampedModel",
          "line_number": 44,
          "docstring": "Base model with timestamp tracking.\n\nExtends BaseModel with:\n- Creation timestamp\n- Last update timestamp",
          "methods": [
            {
              "name": "update_timestamp",
              "line_number": 62,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Update the updated_at timestamp to current time.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Update the updated_at timestamp to current time.\\n\\nThis function implements update timestamp functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If update timestamp operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a timestampedmodel with comprehensive functionality.\n\nThis class provides timestampedmodel operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TimestampedModel instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 28,
          "docstring": "Pydantic configuration for database models.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\models\\call.py",
      "functions": [],
      "classes": [
        {
          "name": "CallStatus",
          "line_number": 17,
          "docstring": "Call status enumeration.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a callstatus with comprehensive functionality.\n\nThis class provides callstatus operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallStatus instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CallType",
          "line_number": 30,
          "docstring": "Call type enumeration.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a calltype with comprehensive functionality.\n\nThis class provides calltype operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallType instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Call",
          "line_number": 38,
          "docstring": "Database model for call records.\n\nTracks the complete lifecycle of a call session including:\n- Call metadata and configuration\n- Participant information\n- Status transitions\n- Duration and timing",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a call with comprehensive functionality.\n\nThis class provides call operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Call instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CallParticipant",
          "line_number": 110,
          "docstring": "Database model for call participants.\n\nTracks individual participants in a call including:\n- Participant identification\n- Join/leave timestamps\n- Media capabilities",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a callparticipant with comprehensive functionality.\n\nThis class provides callparticipant operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallParticipant instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\models\\event.py",
      "functions": [],
      "classes": [
        {
          "name": "EventStatus",
          "line_number": 17,
          "docstring": "Event processing status enumeration.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a eventstatus with comprehensive functionality.\n\nThis class provides eventstatus operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EventStatus instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "EventSeverity",
          "line_number": 28,
          "docstring": "Event severity levels.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a eventseverity with comprehensive functionality.\n\nThis class provides eventseverity operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EventSeverity instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Event",
          "line_number": 38,
          "docstring": "Database model for system events.\n\nTracks events throughout the system including:\n- Event metadata and classification\n- Processing status and results\n- Relationships to calls and other entities",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a event with comprehensive functionality.\n\nThis class provides event operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Event instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "EventHistory",
          "line_number": 115,
          "docstring": "Database model for event processing history.\n\nMaintains an audit trail of event processing attempts including:\n- Processing attempts and outcomes\n- Performance metrics\n- Error details and debugging information",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a eventhistory with comprehensive functionality.\n\nThis class provides eventhistory operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EventHistory instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\models\\participant.py",
      "functions": [],
      "classes": [
        {
          "name": "ParticipantRole",
          "line_number": 17,
          "docstring": "Participant role enumeration.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a participantrole with comprehensive functionality.\n\nThis class provides participantrole operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ParticipantRole instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ParticipantStatus",
          "line_number": 26,
          "docstring": "Participant status enumeration.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a participantstatus with comprehensive functionality.\n\nThis class provides participantstatus operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ParticipantStatus instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Participant",
          "line_number": 37,
          "docstring": "Database model for call participants.\n\nExtended participant information beyond the basic CallParticipant model,\nincluding role-based permissions and detailed interaction tracking.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a participant with comprehensive functionality.\n\nThis class provides participant operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Participant instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\models\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\schemas\\call.py",
      "functions": [],
      "classes": [
        {
          "name": "CallInitiateRequest",
          "line_number": 11,
          "docstring": "Request model for initiating a call.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a callinitiaterequest with comprehensive functionality.\n\nThis class provides callinitiaterequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallInitiateRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CallInitiateResponse",
          "line_number": 46,
          "docstring": "Response model for call initiation.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a callinitiateresponse with comprehensive functionality.\n\nThis class provides callinitiateresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallInitiateResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CallStatusResponse",
          "line_number": 73,
          "docstring": "Response model for call status.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a callstatusresponse with comprehensive functionality.\n\nThis class provides callstatusresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallStatusResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CallUpdateRequest",
          "line_number": 146,
          "docstring": "Request model for updating call properties.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a callupdaterequest with comprehensive functionality.\n\nThis class provides callupdaterequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallUpdateRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CallHangupResponse",
          "line_number": 170,
          "docstring": "Response model for call hangup.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a callhangupresponse with comprehensive functionality.\n\nThis class provides callhangupresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallHangupResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CallListResponse",
          "line_number": 193,
          "docstring": "Response model for listing calls.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a calllistresponse with comprehensive functionality.\n\nThis class provides calllistresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallListResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 36,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 62,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 121,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 158,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 183,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 203,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\schemas\\event.py",
      "functions": [],
      "classes": [
        {
          "name": "EventMetricsResponse",
          "line_number": 11,
          "docstring": "Response model for event metrics.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a eventmetricsresponse with comprehensive functionality.\n\nThis class provides eventmetricsresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EventMetricsResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "EventHandlerInfo",
          "line_number": 51,
          "docstring": "Information about an event handler.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a eventhandlerinfo with comprehensive functionality.\n\nThis class provides eventhandlerinfo operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EventHandlerInfo instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "EventSystemStatus",
          "line_number": 83,
          "docstring": "Event system status response.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a eventsystemstatus with comprehensive functionality.\n\nThis class provides eventsystemstatus operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EventSystemStatus instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ProcessEventRequest",
          "line_number": 120,
          "docstring": "Request model for processing events.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a processeventrequest with comprehensive functionality.\n\nThis class provides processeventrequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ProcessEventRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ProcessEventResponse",
          "line_number": 163,
          "docstring": "Response model for event processing.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a processeventresponse with comprehensive functionality.\n\nThis class provides processeventresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ProcessEventResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "EventListRequest",
          "line_number": 198,
          "docstring": "Request model for listing events with filters.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a eventlistrequest with comprehensive functionality.\n\nThis class provides eventlistrequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EventListRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "EventDetail",
          "line_number": 226,
          "docstring": "Detailed event information.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a eventdetail with comprehensive functionality.\n\nThis class provides eventdetail operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EventDetail instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "EventListResponse",
          "line_number": 241,
          "docstring": "Response model for listing events.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a eventlistresponse with comprehensive functionality.\n\nThis class provides eventlistresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EventListResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 36,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 71,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 95,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 142,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 182,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 248,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\schemas\\health.py",
      "functions": [],
      "classes": [
        {
          "name": "HealthResponse",
          "line_number": 11,
          "docstring": "Health check response model.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a healthresponse with comprehensive functionality.\n\nThis class provides healthresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized HealthResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ServiceCheck",
          "line_number": 54,
          "docstring": "Individual service check result.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a servicecheck with comprehensive functionality.\n\nThis class provides servicecheck operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ServiceCheck instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ReadinessResponse",
          "line_number": 89,
          "docstring": "Comprehensive readiness check response model.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a readinessresponse with comprehensive functionality.\n\nThis class provides readinessresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ReadinessResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 40,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 78,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 113,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\schemas\\media.py",
      "functions": [],
      "classes": [
        {
          "name": "MediaSessionRequest",
          "line_number": 13,
          "docstring": "Request schema for starting a media session.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a mediasessionrequest with comprehensive functionality.\n\nThis class provides mediasessionrequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MediaSessionRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "MediaSessionResponse",
          "line_number": 54,
          "docstring": "Response schema for media session creation.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a mediasessionresponse with comprehensive functionality.\n\nThis class provides mediasessionresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MediaSessionResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "TranscriptionRequest",
          "line_number": 99,
          "docstring": "Request schema for starting transcription.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a transcriptionrequest with comprehensive functionality.\n\nThis class provides transcriptionrequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TranscriptionRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "TranscriptionResponse",
          "line_number": 134,
          "docstring": "Response schema for transcription service.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a transcriptionresponse with comprehensive functionality.\n\nThis class provides transcriptionresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TranscriptionResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AudioStreamStatus",
          "line_number": 171,
          "docstring": "Schema for audio stream status information.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a audiostreamstatus with comprehensive functionality.\n\nThis class provides audiostreamstatus operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AudioStreamStatus instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "VoiceActivityResponse",
          "line_number": 228,
          "docstring": "Schema for voice activity detection results.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a voiceactivityresponse with comprehensive functionality.\n\nThis class provides voiceactivityresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized VoiceActivityResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "MediaMetricsResponse",
          "line_number": 265,
          "docstring": "Schema for media processing metrics.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a mediametricsresponse with comprehensive functionality.\n\nThis class provides mediametricsresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MediaMetricsResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AudioConfigRequest",
          "line_number": 314,
          "docstring": "Request schema for audio configuration updates.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a audioconfigrequest with comprehensive functionality.\n\nThis class provides audioconfigrequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AudioConfigRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AudioConfigResponse",
          "line_number": 351,
          "docstring": "Response schema for audio configuration updates.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a audioconfigresponse with comprehensive functionality.\n\nThis class provides audioconfigresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AudioConfigResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 40,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 82,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 122,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 158,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 211,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 252,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 299,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 337,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 379,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\schemas\\participant.py",
      "functions": [],
      "classes": [
        {
          "name": "ParticipantResponse",
          "line_number": 11,
          "docstring": "Response model for participant information.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a participantresponse with comprehensive functionality.\n\nThis class provides participantresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ParticipantResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ParticipantUpdateRequest",
          "line_number": 117,
          "docstring": "Request model for updating participant properties.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a participantupdaterequest with comprehensive functionality.\n\nThis class provides participantupdaterequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ParticipantUpdateRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ParticipantInviteRequest",
          "line_number": 165,
          "docstring": "Request model for inviting participants to a call.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a participantinviterequest with comprehensive functionality.\n\nThis class provides participantinviterequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ParticipantInviteRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ParticipantInviteResponse",
          "line_number": 217,
          "docstring": "Response model for participant invitation.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a participantinviteresponse with comprehensive functionality.\n\nThis class provides participantinviteresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ParticipantInviteResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ParticipantListResponse",
          "line_number": 259,
          "docstring": "Response model for listing participants.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a participantlistresponse with comprehensive functionality.\n\nThis class provides participantlistresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ParticipantListResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 81,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 152,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 199,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 244,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 273,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\schemas\\realtime.py",
      "functions": [],
      "classes": [
        {
          "name": "RealtimeStatusResponse",
          "line_number": 25,
          "docstring": "Response schema for realtime service status endpoint.\n\nProvides comprehensive information about the realtime communication\nservice including availability, features, and active connections.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a realtimestatusresponse with comprehensive functionality.\n\nThis class provides realtimestatusresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized RealtimeStatusResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "DashboardConnectionResponse",
          "line_number": 75,
          "docstring": "Response schema for dashboard connection events.\n\nProvides information about dashboard client connections including\nclient tracking, session details, and connection metadata.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a dashboardconnectionresponse with comprehensive functionality.\n\nThis class provides dashboardconnectionresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized DashboardConnectionResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ConversationSessionResponse",
          "line_number": 112,
          "docstring": "Response schema for conversation session events.\n\nProvides comprehensive information about conversation sessions including\nsession management, orchestrator details, and session state.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a conversationsessionresponse with comprehensive functionality.\n\nThis class provides conversationsessionresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ConversationSessionResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "WebSocketMessageBase",
          "line_number": 165,
          "docstring": "Base schema for WebSocket messages.\n\nProvides common fields for all WebSocket message types including\nmessage identification, typing, and metadata.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a websocketmessagebase with comprehensive functionality.\n\nThis class provides websocketmessagebase operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized WebSocketMessageBase instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "StatusMessage",
          "line_number": 184,
          "docstring": "WebSocket status message schema.\n\nUsed for sending status updates and system messages\nto connected WebSocket clients.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a statusmessage with comprehensive functionality.\n\nThis class provides statusmessage operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized StatusMessage instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ConversationMessage",
          "line_number": 212,
          "docstring": "WebSocket conversation message schema.\n\nUsed for sending conversation messages between users and assistants\nincluding proper sender identification and content.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a conversationmessage with comprehensive functionality.\n\nThis class provides conversationmessage operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ConversationMessage instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "StreamingMessage",
          "line_number": 244,
          "docstring": "WebSocket streaming message schema.\n\nUsed for real-time streaming content including partial transcriptions,\nassistant responses, and other streaming data.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a streamingmessage with comprehensive functionality.\n\nThis class provides streamingmessage operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized StreamingMessage instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ErrorMessage",
          "line_number": 278,
          "docstring": "WebSocket error message schema.\n\nUsed for communicating errors and exceptions to WebSocket clients\nwith proper error classification and recovery information.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a errormessage with comprehensive functionality.\n\nThis class provides errormessage operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ErrorMessage instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AudioMetadata",
          "line_number": 328,
          "docstring": "Audio processing metadata schema.\n\nProvides information about audio stream configuration,\nprocessing parameters, and quality metrics.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a audiometadata with comprehensive functionality.\n\nThis class provides audiometadata operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AudioMetadata instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "SessionMetrics",
          "line_number": 360,
          "docstring": "Session performance metrics schema.\n\nProvides performance and quality metrics for conversation sessions\nincluding latency, accuracy, and processing statistics.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a sessionmetrics with comprehensive functionality.\n\nThis class provides sessionmetrics operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized SessionMetrics instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\schemas\\webhook.py",
      "functions": [],
      "classes": [
        {
          "name": "WebhookEvent",
          "line_number": 11,
          "docstring": "Base webhook event model following CloudEvents specification.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a webhookevent with comprehensive functionality.\n\nThis class provides webhookevent operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized WebhookEvent instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ACSWebhookEvent",
          "line_number": 61,
          "docstring": "Azure Communication Services specific webhook event.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a acswebhookevent with comprehensive functionality.\n\nThis class provides acswebhookevent operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ACSWebhookEvent instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "MediaWebhookEvent",
          "line_number": 115,
          "docstring": "Media streaming webhook event.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a mediawebhookevent with comprehensive functionality.\n\nThis class provides mediawebhookevent operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MediaWebhookEvent instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "WebhookResponse",
          "line_number": 168,
          "docstring": "Standard webhook response model.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a webhookresponse with comprehensive functionality.\n\nThis class provides webhookresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized WebhookResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "WebhookBatchRequest",
          "line_number": 212,
          "docstring": "Request model for batch webhook processing.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a webhookbatchrequest with comprehensive functionality.\n\nThis class provides webhookbatchrequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized WebhookBatchRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "WebhookBatchResponse",
          "line_number": 250,
          "docstring": "Response model for batch webhook processing.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a webhookbatchresponse with comprehensive functionality.\n\nThis class provides webhookbatchresponse operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized WebhookBatchResponse instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 47,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 97,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 148,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 197,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 231,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Config",
          "line_number": 270,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a config with comprehensive functionality.\n\nThis class provides config operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Config instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\schemas\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\utils\\simple_events.py",
      "functions": [
        {
          "name": "get_simple_health_status",
          "line_number": 40,
          "is_async": false,
          "parameters": [],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Simple health status without complex event registry overhead.\n\nReturns:\n    Basic health information for monitoring",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Simple health status without complex event registry overhead.\\n\\nReturns:\n    Basic health information for monitoring. This function implements get simple health status functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get simple health status operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_system_metrics",
          "line_number": 55,
          "is_async": false,
          "parameters": [],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Simple system metrics without event registry complexity.\n\nReturns:\n    Basic system metrics for monitoring",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Simple system metrics without event registry complexity.\\n\\nReturns:\n    Basic system metrics for monitoring. This function implements get system metrics functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get system metrics operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\handlers\\back\\acs_media_handler.back.py",
      "functions": [
        {
          "name": "get_current_time",
          "line_number": 42,
          "is_async": false,
          "parameters": [],
          "return_annotation": "float",
          "docstring": "Get current time for consistent timing measurements.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get current time for consistent timing measurements.\\n\\nThis function implements get current time functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of float with operation results.\\n:raises RuntimeError: If get current time operation fails due to invalid parameters or system state."
        },
        {
          "name": "safe_set_span_attributes",
          "line_number": 47,
          "is_async": false,
          "parameters": [
            {
              "name": "span_context",
              "annotation": null
            },
            {
              "name": "attributes",
              "annotation": "dict"
            }
          ],
          "return_annotation": null,
          "docstring": "Safely set span attributes without accessing private attributes.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Safely set span attributes without accessing private attributes.\\n\\nThis function implements safe set span attributes functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param span_context: Parameter for span context specification.\\n:param attributes: Parameter for attributes specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If safe set span attributes operation fails due to invalid parameters or system state."
        },
        {
          "name": "__post_init__",
          "line_number": 63,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   post init   operation.\\n\\nThis function implements   post init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   post init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "trigger",
          "line_number": 66,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Trigger barge-in if not already active. Returns True if newly triggered.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Trigger barge-in if not already active.\\n\\nThis function implements trigger functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If trigger operation fails due to invalid parameters or system state."
        },
        {
          "name": "clear",
          "line_number": 73,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Clear barge-in state for new speech processing.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Clear barge-in state for new speech processing.\\n\\nThis function implements clear functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If clear operation fails due to invalid parameters or system state."
        },
        {
          "name": "is_active",
          "line_number": 77,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Check if barge-in is currently active.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if barge-in is currently active.\\n\\nThis function implements is active functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is active operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 90,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "main_loop",
              "annotation": "asyncio.AbstractEventLoop"
            },
            {
              "name": "barge_in_state",
              "annotation": "BargeInState"
            },
            {
              "name": "speech_queue",
              "annotation": "asyncio.Queue"
            },
            {
              "name": "stop_playback_callback",
              "annotation": "Callable"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param main_loop: String value representing main loop data.\\n:param barge_in_state: Parameter for barge in state specification.\\n:param speech_queue: Parameter for speech queue specification.\\n:param stop_playback_callback: Parameter for stop playback callback specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_partial",
          "line_number": 102,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "lang",
              "annotation": "str"
            },
            {
              "name": "speaker_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": "Handle partial speech recognition - IMMEDIATE barge-in trigger.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Handle partial speech recognition - IMMEDIATE barge-in trigger.\\n\\nThis function implements on partial functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param lang: String value representing lang data.\\n:param speaker_id: Unique identifier for speaker entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on partial operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_final",
          "line_number": 132,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "lang",
              "annotation": "str"
            },
            {
              "name": "speaker_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": "Handle final speech recognition - queue for AI processing.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Handle final speech recognition - queue for AI processing.\\n\\nThis function implements on final functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param lang: String value representing lang data.\\n:param speaker_id: Unique identifier for speaker entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on final operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_cancel",
          "line_number": 161,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "event",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Handle speech recognition cancellation.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Handle speech recognition cancellation.\\n\\nThis function implements on cancel functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event: Parameter for event specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on cancel operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 174,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "orchestrator_func",
              "annotation": "Callable"
            },
            {
              "name": "websocket",
              "annotation": "WebSocket"
            },
            {
              "name": "memory_manager",
              "annotation": "MemoManager"
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            },
            {
              "name": "session_id",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param memory_manager: Parameter for memory manager specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 359,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "recognizer",
              "annotation": "StreamingSpeechRecognizerFromBytes"
            },
            {
              "name": "websocket",
              "annotation": "WebSocket"
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param recognizer: Parameter for recognizer specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 473,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "ws",
              "annotation": "WebSocket"
            },
            {
              "name": "orchestrator_func",
              "annotation": "Callable"
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            },
            {
              "name": "recognizer",
              "annotation": "Optional[StreamingSpeechRecognizerFromBytes]"
            },
            {
              "name": "cm",
              "annotation": "Optional[MemoManager]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "greeting_text",
              "annotation": "str"
            },
            {
              "name": "enable_tracing",
              "annotation": "bool"
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize the simplified ACS media handler.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize the simplified ACS media handler.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param ws: Active WebSocket connection for real-time communication.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param recognizer: Parameter for recognizer specification.\\n:param cm: Parameter for cm specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param greeting_text: String value representing greeting text data.\\n:param enable_tracing: Boolean flag indicating enable tracing status.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "BargeInState",
          "line_number": 58,
          "docstring": "Simple state management for barge-in detection.",
          "methods": [
            {
              "name": "__post_init__",
              "line_number": 63,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   post init   operation.\\n\\nThis function implements   post init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   post init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "trigger",
              "line_number": 66,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Trigger barge-in if not already active. Returns True if newly triggered.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Trigger barge-in if not already active.\\n\\nThis function implements trigger functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If trigger operation fails due to invalid parameters or system state."
            },
            {
              "name": "clear",
              "line_number": 73,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Clear barge-in state for new speech processing.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Clear barge-in state for new speech processing.\\n\\nThis function implements clear functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If clear operation fails due to invalid parameters or system state."
            },
            {
              "name": "is_active",
              "line_number": 77,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if barge-in is currently active.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if barge-in is currently active.\\n\\nThis function implements is active functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is active operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a bargeinstate with comprehensive functionality.\n\nThis class provides bargeinstate operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized BargeInState instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "SpeechCallbacks",
          "line_number": 82,
          "docstring": "Speech recognition callbacks that bridge to the main event loop.\n\nThis class encapsulates the critical cross-thread communication\nrequired for real-time barge-in detection and speech processing.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 90,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "main_loop",
                  "annotation": "asyncio.AbstractEventLoop"
                },
                {
                  "name": "barge_in_state",
                  "annotation": "BargeInState"
                },
                {
                  "name": "speech_queue",
                  "annotation": "asyncio.Queue"
                },
                {
                  "name": "stop_playback_callback",
                  "annotation": "Callable"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param main_loop: String value representing main loop data.\\n:param barge_in_state: Parameter for barge in state specification.\\n:param speech_queue: Parameter for speech queue specification.\\n:param stop_playback_callback: Parameter for stop playback callback specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "on_partial",
              "line_number": 102,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "lang",
                  "annotation": "str"
                },
                {
                  "name": "speaker_id",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": null,
              "docstring": "Handle partial speech recognition - IMMEDIATE barge-in trigger.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle partial speech recognition - IMMEDIATE barge-in trigger.\\n\\nThis function implements on partial functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param lang: String value representing lang data.\\n:param speaker_id: Unique identifier for speaker entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on partial operation fails due to invalid parameters or system state."
            },
            {
              "name": "on_final",
              "line_number": 132,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "lang",
                  "annotation": "str"
                },
                {
                  "name": "speaker_id",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": null,
              "docstring": "Handle final speech recognition - queue for AI processing.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle final speech recognition - queue for AI processing.\\n\\nThis function implements on final functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param lang: String value representing lang data.\\n:param speaker_id: Unique identifier for speaker entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on final operation fails due to invalid parameters or system state."
            },
            {
              "name": "on_cancel",
              "line_number": 161,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Handle speech recognition cancellation.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle speech recognition cancellation.\\n\\nThis function implements on cancel functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event: Parameter for event specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on cancel operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a speechcallbacks with comprehensive functionality.\n\nThis class provides speechcallbacks operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized SpeechCallbacks instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "TurnProcessor",
          "line_number": 166,
          "docstring": "Handles the conversation turn processing loop.\n\nThis class manages the route_turn_loop that processes final speech\nresults and coordinates with the AI orchestrator.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 174,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "orchestrator_func",
                  "annotation": "Callable"
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                },
                {
                  "name": "memory_manager",
                  "annotation": "MemoManager"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param memory_manager: Parameter for memory manager specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "start_processing_loop",
              "line_number": 193,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Start the main conversation turn processing loop.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Start the main conversation turn processing loop.\\n\\nThis function implements start processing loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start processing loop operation fails due to invalid parameters or system state."
            },
            {
              "name": "_processing_loop",
              "line_number": 198,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Main processing loop for conversation turns.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Main processing loop for conversation turns.\\n\\nThis function implements  processing loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  processing loop operation fails due to invalid parameters or system state."
            },
            {
              "name": "_cancel_current_playback",
              "line_number": 246,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Cancel any currently running playback task.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Cancel any currently running playback task.\\n\\nThis function implements  cancel current playback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  cancel current playback operation fails due to invalid parameters or system state."
            },
            {
              "name": "_route_and_playback",
              "line_number": 258,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "kind",
                  "annotation": "str"
                },
                {
                  "name": "text",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Route conversation turn to orchestrator and handle playback.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Route conversation turn to orchestrator and handle playback.\\n\\nThis function implements  route and playback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param kind: String value representing kind data.\\n:param text: String value representing text data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  route and playback operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop_playback_immediately",
              "line_number": 321,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Immediately stop current playback (called by barge-in).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Immediately stop current playback (called by barge-in).\\n\\nThis function implements stop playback immediately functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop playback immediately operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 335,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Stop the turn processor and clean up.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Stop the turn processor and clean up.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a turnprocessor with comprehensive functionality.\n\nThis class provides turnprocessor operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TurnProcessor instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "MediaProcessor",
          "line_number": 351,
          "docstring": "Handles WebSocket media message processing and audio streaming.\n\nThis class focuses specifically on ACS media protocol handling\nand audio data flow to the speech recognizer.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 359,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "recognizer",
                  "annotation": "StreamingSpeechRecognizerFromBytes"
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param recognizer: Parameter for recognizer specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_media_message",
              "line_number": 370,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "stream_data",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Process incoming WebSocket message from ACS.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process incoming WebSocket message from ACS.\\n\\nThis function implements handle media message functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stream_data: String value representing stream data data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If handle media message operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_audio_metadata",
              "line_number": 405,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Handle AudioMetadata message - ACS is ready for streaming.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle AudioMetadata message - ACS is ready for streaming.\\n\\nThis function implements  handle audio metadata functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  handle audio metadata operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_audio_data",
              "line_number": 421,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "data",
                  "annotation": "dict"
                }
              ],
              "return_annotation": null,
              "docstring": "Handle AudioData message - process incoming audio.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle AudioData message - process incoming audio.\\n\\nThis function implements  handle audio data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param data: Parameter for data specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  handle audio data operation fails due to invalid parameters or system state."
            },
            {
              "name": "send_stop_audio_command",
              "line_number": 440,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Send stop audio command to ACS.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Send stop audio command to ACS.\\n\\nThis function implements send stop audio command functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If send stop audio command operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a mediaprocessor with comprehensive functionality.\n\nThis class provides mediaprocessor operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MediaProcessor instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ACSMediaHandler",
          "line_number": 454,
          "docstring": "Simplified ACS Media Handler with clean separation of concerns.\n\nThis handler maintains the critical three-thread architecture while\nbreaking down responsibilities into focused, maintainable components:\n\n- SpeechCallbacks: Cross-thread communication for barge-in\n- TurnProcessor: Conversation turn processing and AI orchestration\n- MediaProcessor: WebSocket media protocol and audio streaming\n- BargeInState: Simple state management for interruptions\n\nKey preserved features:\n- Sub-50ms barge-in response time\n- Clean async task lifecycle management\n- Thread-safe speech processing queue\n- Comprehensive tracing and logging",
          "methods": [
            {
              "name": "__init__",
              "line_number": 473,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "ws",
                  "annotation": "WebSocket"
                },
                {
                  "name": "orchestrator_func",
                  "annotation": "Callable"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                },
                {
                  "name": "recognizer",
                  "annotation": "Optional[StreamingSpeechRecognizerFromBytes]"
                },
                {
                  "name": "cm",
                  "annotation": "Optional[MemoManager]"
                },
                {
                  "name": "session_id",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "greeting_text",
                  "annotation": "str"
                },
                {
                  "name": "enable_tracing",
                  "annotation": "bool"
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize the simplified ACS media handler.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize the simplified ACS media handler.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param ws: Active WebSocket connection for real-time communication.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param recognizer: Parameter for recognizer specification.\\n:param cm: Parameter for cm specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param greeting_text: String value representing greeting text data.\\n:param enable_tracing: Boolean flag indicating enable tracing status.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "start_recognizer",
              "line_number": 530,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Start the media handler and all its components.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Start the media handler and all its components.\\n\\nThis function implements start recognizer functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start recognizer operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_media_message",
              "line_number": 593,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "stream_data",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Handle incoming WebSocket media messages.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle incoming WebSocket media messages.\\n\\nThis function implements handle media message functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stream_data: String value representing stream data data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If handle media message operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_barge_in",
              "line_number": 597,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Handle barge-in events - stop current playback immediately.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle barge-in events - stop current playback immediately.\\n\\nThis function implements  handle barge in functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  handle barge in operation fails due to invalid parameters or system state."
            },
            {
              "name": "_play_greeting",
              "line_number": 626,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Play the initial greeting message.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Play the initial greeting message.\\n\\nThis function implements  play greeting functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  play greeting operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 668,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Stop the handler and clean up all resources.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Stop the handler and clean up all resources.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a acsmediahandler with comprehensive functionality.\n\nThis class provides acsmediahandler operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ACSMediaHandler instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\api\\v1\\handlers\\back\\legacy_acs_lifecycle.py",
      "functions": [
        {
          "name": "get_current_time",
          "line_number": 50,
          "is_async": false,
          "parameters": [],
          "return_annotation": "float",
          "docstring": "Get current time for consistent timing measurements.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get current time for consistent timing measurements.\\n\\nThis function implements get current time functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of float with operation results.\\n:raises RuntimeError: If get current time operation fails due to invalid parameters or system state."
        },
        {
          "name": "safe_set_span_attributes",
          "line_number": 55,
          "is_async": false,
          "parameters": [
            {
              "name": "span",
              "annotation": null
            },
            {
              "name": "attributes",
              "annotation": "dict"
            }
          ],
          "return_annotation": null,
          "docstring": "Safely set span attributes without errors.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Safely set span attributes without errors.\\n\\nThis function implements safe set span attributes functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param span: Parameter for span specification.\\n:param attributes: Parameter for attributes specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If safe set span attributes operation fails due to invalid parameters or system state."
        },
        {
          "name": "_safe_get_event_data",
          "line_number": 64,
          "is_async": false,
          "parameters": [
            {
              "name": "event",
              "annotation": "CloudEvent"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Safely extract data from CloudEvent object as a dictionary.\n\nCloudEvent.data can be various types (dict, str, bytes, etc.).\nThis function ensures we always get a dictionary we can call .get() on.\n\nArgs:\n    event: CloudEvent object from Azure\n\nReturns:\n    Dictionary containing event data, empty dict if parsing fails",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Safely extract data from CloudEvent object as a dictionary.\\n\\nCloudEvent. This function implements  safe get event data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  safe get event data operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_event_field",
          "line_number": 109,
          "is_async": false,
          "parameters": [
            {
              "name": "event",
              "annotation": "CloudEvent"
            },
            {
              "name": "field_name",
              "annotation": "str"
            },
            {
              "name": "default",
              "annotation": "Any"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Safely get a field from CloudEvent data.\n\nArgs:\n    event: CloudEvent object\n    field_name: Name of field to extract\n    default: Default value if field not found\n\nReturns:\n    Field value or default",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Safely get a field from CloudEvent data.\\n\\nArgs:\n    event: CloudEvent object\n    field_name: Name of field to extract\n    default: Default value if field not found\n\nReturns:\n    Field value or default. This function implements  get event field functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param field_name: String value representing field name data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If  get event field operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_participant_phone",
          "line_number": 549,
          "is_async": false,
          "parameters": [
            {
              "name": "event",
              "annotation": "CloudEvent"
            },
            {
              "name": "cm",
              "annotation": "MemoManager"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Extract participant phone number from event.\n\nArgs:\n    event: CloudEvent containing participant information\n    cm: MemoManager for context access\n\nReturns:\n    Participant phone number or None if not found",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract participant phone number from event.\\n\\nArgs:\n    event: CloudEvent containing participant information\n    cm: MemoManager for context access\n\nReturns:\n    Participant phone number or None if not found. This function implements get participant phone functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get participant phone operation fails due to invalid parameters or system state."
        },
        {
          "name": "create_enterprise_media_handler",
          "line_number": 593,
          "is_async": false,
          "parameters": [
            {
              "name": "websocket",
              "annotation": null
            },
            {
              "name": "orchestrator",
              "annotation": "callable"
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            },
            {
              "name": "recognizer",
              "annotation": null
            },
            {
              "name": "cm",
              "annotation": "MemoManager"
            },
            {
              "name": "session_id",
              "annotation": "str"
            }
          ],
          "return_annotation": "ACSMediaHandler",
          "docstring": "Factory function for creating media handlers.\n\nArgs:\n    websocket: WebSocket connection\n    orchestrator: Conversation orchestrator\n    call_connection_id: ACS call connection ID\n    recognizer: Speech recognition client\n    cm: Conversation memory manager\n    session_id: Session identifier\n\nReturns:\n    Configured ACSMediaHandler instance",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Factory function for creating media handlers.\\n\\nArgs:\n    websocket: WebSocket connection\n    orchestrator: Conversation orchestrator\n    call_connection_id: ACS call connection ID\n    recognizer: Speech recognition client\n    cm: Conversation memory manager\n    session_id: Session identifier\n\nReturns:\n    Configured ACSMediaHandler instance. This function implements create enterprise media handler functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param orchestrator: Parameter for orchestrator specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param recognizer: Parameter for recognizer specification.\\n:param cm: Parameter for cm specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Instance of ACSMediaHandler with operation results.\\n:raises RuntimeError: If create enterprise media handler operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 136,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "orchestrator_func",
              "annotation": "Optional[callable]"
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize ACS lifecycle handler.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize ACS lifecycle handler.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "digits_tail",
          "line_number": 561,
          "is_async": false,
          "parameters": [
            {
              "name": "s",
              "annotation": "Optional[str]"
            },
            {
              "name": "n",
              "annotation": "int"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute digits tail operation.\\n\\nThis function implements digits tail functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param s: String value representing s data.\\n:param n: Integer value for n specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If digits tail operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "ACSLifecycleHandler",
          "line_number": 125,
          "docstring": "Azure Communication Services call lifecycle manager.\n\nProvides call lifecycle operations with:\n- Pluggable orchestrator support for different conversation engines\n- Clean tracing and observability\n- Outbound/inbound call management\n- Event processing with backward compatibility",
          "methods": [
            {
              "name": "__init__",
              "line_number": 136,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "orchestrator_func",
                  "annotation": "Optional[callable]"
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize ACS lifecycle handler.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize ACS lifecycle handler.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "start_outbound_call",
              "line_number": 141,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                },
                {
                  "name": "target_number",
                  "annotation": "str"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "call_id",
                  "annotation": "str"
                },
                {
                  "name": "orchestrator_func",
                  "annotation": "Optional[callable]"
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Initiate an outbound call with orchestrator support.\n\nArgs:\n    acs_caller: The ACS caller instance\n    target_number: The phone number to call (E.164 format)\n    redis_mgr: Redis manager instance for state persistence\n    call_id: Optional call ID for tracking (auto-generated if None)\n    orchestrator_func: Optional orchestrator for this specific call\n\nReturns:\n    Dict containing call initiation result",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initiate an outbound call with orchestrator support.\\n\\nArgs:\n    acs_caller: The ACS caller instance\n    target_number: The phone number to call (E. This function implements start outbound call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param acs_caller: Parameter for acs caller specification.\\n:param target_number: String value representing target number data.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param call_id: Azure Communication Services call connection identifier.\\n:param orchestrator_func: Parameter for orchestrator func specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If start outbound call operation fails due to invalid parameters or system state."
            },
            {
              "name": "accept_inbound_call",
              "line_number": 277,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "request_body",
                  "annotation": "Dict[str, Any]"
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                },
                {
                  "name": "orchestrator",
                  "annotation": "Optional[callable]"
                }
              ],
              "return_annotation": "JSONResponse",
              "docstring": "Accept and process inbound call events with orchestrator support.\n\nArgs:\n    request_body: Event Grid request body containing events\n    acs_caller: The ACS caller instance for call operations\n    orchestrator: Optional orchestrator for conversation handling\n\nReturns:\n    JSONResponse with validation response or call acceptance status",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Accept and process inbound call events with orchestrator support.\\n\\nArgs:\n    request_body: Event Grid request body containing events\n    acs_caller: The ACS caller instance for call operations\n    orchestrator: Optional orchestrator for conversation handling\n\nReturns:\n    JSONResponse with validation response or call acceptance status. This function implements accept inbound call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param request_body: String value representing request body data.\\n:param acs_caller: Parameter for acs caller specification.\\n:param orchestrator: Parameter for orchestrator specification.\\n:return: Instance of JSONResponse with operation results.\\n:raises RuntimeError: If accept inbound call operation fails due to invalid parameters or system state."
            },
            {
              "name": "process_call_events",
              "line_number": 461,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "events",
                  "annotation": "list"
                },
                {
                  "name": "request",
                  "annotation": null
                },
                {
                  "name": "orchestrator",
                  "annotation": "Optional[callable]"
                }
              ],
              "return_annotation": "Dict[str, str]",
              "docstring": "Process runtime call events with orchestrator integration.\n\nArgs:\n    events: List of ACS webhook events to process\n    request: FastAPI request object containing app state dependencies\n    orchestrator: Optional orchestrator for event processing\n\nReturns:\n    Dict with processing status and metadata",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process runtime call events with orchestrator integration.\\n\\nArgs:\n    events: List of ACS webhook events to process\n    request: FastAPI request object containing app state dependencies\n    orchestrator: Optional orchestrator for event processing\n\nReturns:\n    Dict with processing status and metadata. This function implements process call events functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param events: Parameter for events specification.\\n:param request: HTTP request object containing client data and headers.\\n:param orchestrator: Parameter for orchestrator specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If process call events operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a acslifecyclehandler with comprehensive functionality.\n\nThis class provides acslifecyclehandler operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ACSLifecycleHandler instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\base.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 26,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "_load_yaml",
          "line_number": 110,
          "is_async": false,
          "parameters": [
            {
              "name": "path",
              "annotation": "Path"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  load yaml operation.\\n\\nThis function implements  load yaml functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param path: Parameter for path specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  load yaml operation fails due to invalid parameters or system state."
        },
        {
          "name": "_validate_cfg",
          "line_number": 114,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  validate cfg operation.\\n\\nThis function implements  validate cfg functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises ValueError: If  validate cfg operation fails due to invalid parameters or system state."
        },
        {
          "name": "_log_loaded_summary",
          "line_number": 125,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  log loaded summary operation.\\n\\nThis function implements  log loaded summary functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  log loaded summary operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "ARTAgent",
          "line_number": 23,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 26,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "respond",
              "line_number": 78,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "cm",
                  "annotation": null
                },
                {
                  "name": "user_prompt",
                  "annotation": "str"
                },
                {
                  "name": "ws",
                  "annotation": "WebSocket"
                }
              ],
              "return_annotation": "Any",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute respond operation.\\n\\nThis function implements respond functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param cm: Parameter for cm specification.\\n:param user_prompt: String value representing user prompt data.\\n:param ws: Active WebSocket connection for real-time communication.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If respond operation fails due to invalid parameters or system state."
            },
            {
              "name": "_load_yaml",
              "line_number": 110,
              "is_async": false,
              "parameters": [
                {
                  "name": "path",
                  "annotation": "Path"
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  load yaml operation.\\n\\nThis function implements  load yaml functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param path: Parameter for path specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  load yaml operation fails due to invalid parameters or system state."
            },
            {
              "name": "_validate_cfg",
              "line_number": 114,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  validate cfg operation.\\n\\nThis function implements  validate cfg functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises ValueError: If  validate cfg operation fails due to invalid parameters or system state."
            },
            {
              "name": "_log_loaded_summary",
              "line_number": 125,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  log loaded summary operation.\\n\\nThis function implements  log loaded summary functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  log loaded summary operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a artagent with comprehensive functionality.\n\nThis class provides artagent operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ARTAgent instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\factories\\stt_factory.py",
      "functions": [
        {
          "name": "create_stt_recognizer",
          "line_number": 16,
          "is_async": false,
          "parameters": [],
          "return_annotation": "StreamingSpeechRecognizerFromBytes",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Create new stt recognizer instance.\\n\\nThis function implements create stt recognizer functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of StreamingSpeechRecognizerFromBytes with operation results.\\n:raises RuntimeError: If create stt recognizer operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\handlers\\acs_handler.py",
      "functions": [
        {
          "name": "_get_participant_phone",
          "line_number": 523,
          "is_async": false,
          "parameters": [
            {
              "name": "event",
              "annotation": "CloudEvent"
            },
            {
              "name": "cm",
              "annotation": "MemoManager"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Try to resolve the PSTN participant phone number to listen for DTMF.\nPriority:\n  1) From event.data.participants where kind == 'phoneNumber' (AWS Connect leg)\n  2) Fallback to memo 'target_number' (for outbound calls)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Try to resolve the PSTN participant phone number to listen for DTMF.\\n\\nPriority:\n  1) From event. This function implements  get participant phone functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get participant phone operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_participant_phone",
          "line_number": 563,
          "is_async": false,
          "parameters": [
            {
              "name": "event",
              "annotation": "CloudEvent"
            },
            {
              "name": "cm",
              "annotation": "MemoManager"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Return the PSTN phone (E.164) from participants, preferring a match to target_number.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return the PSTN phone (E.\\n\\nThis function implements  get participant phone functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get participant phone operation fails due to invalid parameters or system state."
        },
        {
          "name": "digits_tail",
          "line_number": 566,
          "is_async": false,
          "parameters": [
            {
              "name": "s",
              "annotation": "Optional[str]"
            },
            {
              "name": "n",
              "annotation": "int"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute digits tail operation.\\n\\nThis function implements digits tail functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param s: String value representing s data.\\n:param n: Integer value for n specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If digits tail operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "ACSHandler",
          "line_number": 44,
          "docstring": "Handles Azure Communication Services business logic operations.\n\nThis class encapsulates the core business logic for:\n- Call initiation and management\n- Event processing from ACS callbacks\n- WebSocket transcription handling\n- Media event processing",
          "methods": [
            {
              "name": "initiate_call",
              "line_number": 56,
              "is_async": true,
              "parameters": [
                {
                  "name": "acs_caller",
                  "annotation": null
                },
                {
                  "name": "target_number",
                  "annotation": "str"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "call_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Initiate an outbound call through Azure Communication Services.\n\nArgs:\n    acs_caller: The ACS caller instance\n    target_number: The phone number to call\n    redis_mgr: Redis manager instance\n    call_id: Optional call ID for tracking\n\nReturns:\n    Dict containing call initiation result\n\nRaises:\n    HTTPException: If call initiation fails",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initiate an outbound call through Azure Communication Services.\\n\\nArgs:\n    acs_caller: The ACS caller instance\n    target_number: The phone number to call\n    redis_mgr: Redis manager instance\n    call_id: Optional call ID for tracking\n\nReturns:\n    Dict containing call initiation result\n\nRaises:\n    HTTPException: If call initiation fails. This function implements initiate call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param acs_caller: Parameter for acs caller specification.\\n:param target_number: String value representing target number data.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param call_id: Azure Communication Services call connection identifier.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If initiate call operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_inbound_call",
              "line_number": 237,
              "is_async": true,
              "parameters": [
                {
                  "name": "request_body",
                  "annotation": "Dict[str, Any]"
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                }
              ],
              "return_annotation": "JSONResponse",
              "docstring": "Handle inbound call events and subscription validation.\n\nArgs:\n    request_body: The request body containing events\n    acs_caller: The ACS caller instance\n\nReturns:\n    JSONResponse with appropriate status",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle inbound call events and subscription validation.\\n\\nArgs:\n    request_body: The request body containing events\n    acs_caller: The ACS caller instance\n\nReturns:\n    JSONResponse with appropriate status. This function implements handle inbound call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param request_body: String value representing request body data.\\n:param acs_caller: Parameter for acs caller specification.\\n:return: Instance of JSONResponse with operation results.\\n:raises RuntimeError: If handle inbound call operation fails due to invalid parameters or system state."
            },
            {
              "name": "process_callback_events",
              "line_number": 429,
              "is_async": true,
              "parameters": [
                {
                  "name": "events",
                  "annotation": "list"
                },
                {
                  "name": "request",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, str]",
              "docstring": "Process callback events from Azure Communication Services.\n\nArgs:\n    events: List of ACS events to process\n    request: FastAPI request object containing app state\n\nReturns:\n    Dict with processing status",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process callback events from Azure Communication Services.\\n\\nArgs:\n    events: List of ACS events to process\n    request: FastAPI request object containing app state\n\nReturns:\n    Dict with processing status. This function implements process callback events functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param events: Parameter for events specification.\\n:param request: HTTP request object containing client data and headers.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If process callback events operation fails due to invalid parameters or system state."
            },
            {
              "name": "_get_participant_phone",
              "line_number": 523,
              "is_async": false,
              "parameters": [
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Try to resolve the PSTN participant phone number to listen for DTMF.\nPriority:\n  1) From event.data.participants where kind == 'phoneNumber' (AWS Connect leg)\n  2) Fallback to memo 'target_number' (for outbound calls)",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Try to resolve the PSTN participant phone number to listen for DTMF.\\n\\nPriority:\n  1) From event. This function implements  get participant phone functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get participant phone operation fails due to invalid parameters or system state."
            },
            {
              "name": "_get_participant_phone",
              "line_number": 563,
              "is_async": false,
              "parameters": [
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Return the PSTN phone (E.164) from participants, preferring a match to target_number.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Return the PSTN phone (E.\\n\\nThis function implements  get participant phone functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get participant phone operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_participants_updated",
              "line_number": 598,
              "is_async": true,
              "parameters": [
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "clients",
                  "annotation": "list"
                },
                {
                  "name": "cid",
                  "annotation": "str"
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Enable DTMF when the PSTN participant is present.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Enable DTMF when the PSTN participant is present.\\n\\nThis function implements  handle participants updated functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param clients: Parameter for clients specification.\\n:param cid: String value representing cid data.\\n:param acs_caller: Parameter for acs caller specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  handle participants updated operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_call_connected",
              "line_number": 668,
              "is_async": true,
              "parameters": [
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "clients",
                  "annotation": "list"
                },
                {
                  "name": "cid",
                  "annotation": "str"
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                },
                {
                  "name": "stt_client",
                  "annotation": null
                },
                {
                  "name": "stream_mode",
                  "annotation": "StreamMode"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle call connected event and prepare for media streaming or transcription.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle call connected event and prepare for media streaming or transcription.\\n\\nThis function implements  handle call connected functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param clients: Parameter for clients specification.\\n:param cid: String value representing cid data.\\n:param acs_caller: Parameter for acs caller specification.\\n:param stt_client: Parameter for stt client specification.\\n:param stream_mode: Parameter for stream mode specification.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If  handle call connected operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_dtmf_started",
              "line_number": 696,
              "is_async": true,
              "parameters": [
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "cid",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle DTMF recognition started event.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle DTMF recognition started event.\\n\\nThis function implements  handle dtmf started functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param cid: String value representing cid data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  handle dtmf started operation fails due to invalid parameters or system state."
            },
            {
              "name": "_play_greeting",
              "line_number": 746,
              "is_async": true,
              "parameters": [
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "cid",
                  "annotation": "str"
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                },
                {
                  "name": "stream_mode",
                  "annotation": "StreamMode"
                },
                {
                  "name": "delay_seconds",
                  "annotation": "float"
                }
              ],
              "return_annotation": "None",
              "docstring": "Play greeting with optional delay to ensure media connection is ready.\n\nArgs:\n    cm: MemoManager instance\n    redis_mgr: Redis manager\n    cid: Call connection ID\n    acs_caller: ACS caller instance\n    stream_mode: Current streaming mode\n    delay_seconds: Delay before playing greeting (for media mode stability)",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Play greeting with optional delay to ensure media connection is ready.\\n\\nArgs:\n    cm: MemoManager instance\n    redis_mgr: Redis manager\n    cid: Call connection ID\n    acs_caller: ACS caller instance\n    stream_mode: Current streaming mode\n    delay_seconds: Delay before playing greeting (for media mode stability). This function implements  play greeting functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cm: Parameter for cm specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param cid: String value representing cid data.\\n:param acs_caller: Parameter for acs caller specification.\\n:param stream_mode: Parameter for stream mode specification.\\n:param delay_seconds: Parameter for delay seconds specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  play greeting operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_media_streaming_started",
              "line_number": 808,
              "is_async": true,
              "parameters": [
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "cid",
                  "annotation": "str"
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle media streaming started event.\nThis indicates the WebSocket connection is ready for media streaming.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle media streaming started event.\\n\\nThis indicates the WebSocket connection is ready for media streaming. This function implements  handle media streaming started functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param cid: String value representing cid data.\\n:param acs_caller: Parameter for acs caller specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  handle media streaming started operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_dtmf_tone_received",
              "line_number": 845,
              "is_async": true,
              "parameters": [
                {
                  "name": "event",
                  "annotation": null
                },
                {
                  "name": "cm",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "cid",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Handle DTMF tone received events.\nAccumulate tones in app memory and validate against a sample value.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle DTMF tone received events.\\n\\nAccumulate tones in app memory and validate against a sample value. This function implements  handle dtmf tone received functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param cid: Parameter for cid specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  handle dtmf tone received operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_transcription_failed",
              "line_number": 981,
              "is_async": true,
              "parameters": [
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "cid",
                  "annotation": "str"
                },
                {
                  "name": "acs_caller",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle transcription failure events.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle transcription failure events.\\n\\nThis function implements  handle transcription failed functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param cid: String value representing cid data.\\n:param acs_caller: Parameter for acs caller specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  handle transcription failed operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_call_disconnected",
              "line_number": 1033,
              "is_async": true,
              "parameters": [
                {
                  "name": "event",
                  "annotation": "CloudEvent"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "cid",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle call disconnection events.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle call disconnection events.\\n\\nThis function implements  handle call disconnected functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event: Parameter for event specification.\\n:param cm: Parameter for cm specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param cid: String value representing cid data.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If  handle call disconnected operation fails due to invalid parameters or system state."
            },
            {
              "name": "process_media_callbacks",
              "line_number": 1096,
              "is_async": true,
              "parameters": [
                {
                  "name": "events",
                  "annotation": "list"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, str]",
              "docstring": "Process media callback events.\n\nArgs:\n    events: List of media events to process\n    cm: MemoManager instance\n    redis_mgr: Redis manager instance\n\nReturns:\n    Dict with processing status",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process media callback events.\\n\\nArgs:\n    events: List of media events to process\n    cm: MemoManager instance\n    redis_mgr: Redis manager instance\n\nReturns:\n    Dict with processing status. This function implements process media callbacks functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param events: Parameter for events specification.\\n:param cm: Parameter for cm specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If process media callbacks operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a acshandler with comprehensive functionality.\n\nThis class provides acshandler operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ACSHandler instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\handlers\\acs_media_handler.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 32,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "ws",
              "annotation": "WebSocket"
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            },
            {
              "name": "recognizer",
              "annotation": "StreamingSpeechRecognizerFromBytes"
            },
            {
              "name": "cm",
              "annotation": "MemoManager"
            },
            {
              "name": "session_id",
              "annotation": "str"
            },
            {
              "name": "enable_tracing",
              "annotation": "bool"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param ws: Active WebSocket connection for real-time communication.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param recognizer: Parameter for recognizer specification.\\n:param cm: Parameter for cm specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param enable_tracing: Boolean flag indicating enable tracing status.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_trace_metadata",
          "line_number": 84,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "operation",
              "annotation": "str"
            }
          ],
          "return_annotation": "dict",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  get trace metadata operation.\\n\\nThis function implements  get trace metadata functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param operation: String value representing operation data.\\n:return: Instance of dict with operation results.\\n:raises RuntimeError: If  get trace metadata operation fails due to invalid parameters or system state."
        },
        {
          "name": "play_greeting",
          "line_number": 269,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "greeting_text",
              "annotation": "str"
            },
            {
              "name": "voice_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "voice_style",
              "annotation": "Optional[str]"
            },
            {
              "name": "voice_rate",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": "Send a greeting message to ACS using TTS (CLIENT).\n\nArgs:\n    greeting_text: Text to speak\n    voice_name: Optional agent-specific voice name\n    voice_style: Optional agent-specific voice style",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Send a greeting message to ACS using TTS (CLIENT).\\n\\nArgs:\n    greeting_text: Text to speak\n    voice_name: Optional agent-specific voice name\n    voice_style: Optional agent-specific voice style. This function implements play greeting functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param greeting_text: String value representing greeting text data.\\n:param voice_name: String value representing voice name data.\\n:param voice_style: String value representing voice style data.\\n:param voice_rate: String value representing voice rate data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If play greeting operation fails due to invalid parameters or system state."
        },
        {
          "name": "_play_greeting_internal",
          "line_number": 302,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "greeting_text",
              "annotation": "str"
            },
            {
              "name": "voice_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "voice_style",
              "annotation": "Optional[str]"
            },
            {
              "name": "voice_rate",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  play greeting internal operation.\\n\\nThis function implements  play greeting internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param greeting_text: String value representing greeting text data.\\n:param voice_name: String value representing voice name data.\\n:param voice_style: String value representing voice style data.\\n:param voice_rate: String value representing voice rate data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  play greeting internal operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_partial",
          "line_number": 369,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": null
            },
            {
              "name": "lang",
              "annotation": null
            },
            {
              "name": "speaker_id",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute on partial operation.\\n\\nThis function implements on partial functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: Parameter for text specification.\\n:param lang: Parameter for lang specification.\\n:param speaker_id: Unique identifier for speaker entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on partial operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_final",
          "line_number": 392,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": null
            },
            {
              "name": "lang",
              "annotation": null
            },
            {
              "name": "speaker_id",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute on final operation.\\n\\nThis function implements on final functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: Parameter for text specification.\\n:param lang: Parameter for lang specification.\\n:param speaker_id: Unique identifier for speaker entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on final operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_cancel",
          "line_number": 408,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "evt",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute on cancel operation.\\n\\nThis function implements on cancel functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on cancel operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "ACSMediaHandler",
          "line_number": 31,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 32,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "ws",
                  "annotation": "WebSocket"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                },
                {
                  "name": "recognizer",
                  "annotation": "StreamingSpeechRecognizerFromBytes"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "enable_tracing",
                  "annotation": "bool"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param ws: Active WebSocket connection for real-time communication.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param recognizer: Parameter for recognizer specification.\\n:param cm: Parameter for cm specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param enable_tracing: Boolean flag indicating enable tracing status.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "_get_trace_metadata",
              "line_number": 84,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "operation",
                  "annotation": "str"
                }
              ],
              "return_annotation": "dict",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  get trace metadata operation.\\n\\nThis function implements  get trace metadata functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param operation: String value representing operation data.\\n:return: Instance of dict with operation results.\\n:raises RuntimeError: If  get trace metadata operation fails due to invalid parameters or system state."
            },
            {
              "name": "start_recognizer",
              "line_number": 96,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize and start the speech recognizer with proper event loop handling.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize and start the speech recognizer with proper event loop handling.\\n\\nThis function implements start recognizer functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start recognizer operation fails due to invalid parameters or system state."
            },
            {
              "name": "_start_recognizer_internal",
              "line_number": 124,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  start recognizer internal operation.\\n\\nThis function implements  start recognizer internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  start recognizer internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_media_message",
              "line_number": 170,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "stream_data",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Process incoming WebSocket message from ACS (AudioMetadata/AudioData).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Process incoming WebSocket message from ACS (AudioMetadata/AudioData).\\n\\nThis function implements handle media message functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stream_data: Parameter for stream data specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If handle media message operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_media_message_internal",
              "line_number": 187,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "stream_data",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  handle media message internal operation.\\n\\nThis function implements  handle media message internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stream_data: Parameter for stream data specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  handle media message internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "play_greeting",
              "line_number": 269,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "greeting_text",
                  "annotation": "str"
                },
                {
                  "name": "voice_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "voice_style",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "voice_rate",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": null,
              "docstring": "Send a greeting message to ACS using TTS (CLIENT).\n\nArgs:\n    greeting_text: Text to speak\n    voice_name: Optional agent-specific voice name\n    voice_style: Optional agent-specific voice style",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Send a greeting message to ACS using TTS (CLIENT).\\n\\nArgs:\n    greeting_text: Text to speak\n    voice_name: Optional agent-specific voice name\n    voice_style: Optional agent-specific voice style. This function implements play greeting functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param greeting_text: String value representing greeting text data.\\n:param voice_name: String value representing voice name data.\\n:param voice_style: String value representing voice style data.\\n:param voice_rate: String value representing voice rate data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If play greeting operation fails due to invalid parameters or system state."
            },
            {
              "name": "_play_greeting_internal",
              "line_number": 302,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "greeting_text",
                  "annotation": "str"
                },
                {
                  "name": "voice_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "voice_style",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "voice_rate",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  play greeting internal operation.\\n\\nThis function implements  play greeting internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param greeting_text: String value representing greeting text data.\\n:param voice_name: String value representing voice name data.\\n:param voice_style: String value representing voice style data.\\n:param voice_rate: String value representing voice rate data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  play greeting internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "on_partial",
              "line_number": 369,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": null
                },
                {
                  "name": "lang",
                  "annotation": null
                },
                {
                  "name": "speaker_id",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute on partial operation.\\n\\nThis function implements on partial functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: Parameter for text specification.\\n:param lang: Parameter for lang specification.\\n:param speaker_id: Unique identifier for speaker entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on partial operation fails due to invalid parameters or system state."
            },
            {
              "name": "on_final",
              "line_number": 392,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": null
                },
                {
                  "name": "lang",
                  "annotation": null
                },
                {
                  "name": "speaker_id",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute on final operation.\\n\\nThis function implements on final functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: Parameter for text specification.\\n:param lang: Parameter for lang specification.\\n:param speaker_id: Unique identifier for speaker entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on final operation fails due to invalid parameters or system state."
            },
            {
              "name": "on_cancel",
              "line_number": 408,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "evt",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute on cancel operation.\\n\\nThis function implements on cancel functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on cancel operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_barge_in_async",
              "line_number": 412,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  handle barge in async operation.\\n\\nThis function implements  handle barge in async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  handle barge in async operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_barge_in_internal",
              "line_number": 423,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  handle barge in internal operation.\\n\\nThis function implements  handle barge in internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  handle barge in internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_final_async",
              "line_number": 486,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  handle final async operation.\\n\\nThis function implements  handle final async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  handle final async operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_final_internal",
              "line_number": 499,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  handle final internal operation.\\n\\nThis function implements  handle final internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  handle final internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "route_turn_loop",
              "line_number": 521,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute route turn loop operation.\\n\\nThis function implements route turn loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If route turn loop operation fails due to invalid parameters or system state."
            },
            {
              "name": "_route_turn_loop_internal",
              "line_number": 532,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  route turn loop internal operation.\\n\\nThis function implements  route turn loop internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  route turn loop internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "route_and_playback",
              "line_number": 618,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "kind",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute route and playback operation.\\n\\nThis function implements route and playback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param kind: Parameter for kind specification.\\n:param text: Parameter for text specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If route and playback operation fails due to invalid parameters or system state."
            },
            {
              "name": "_route_and_playback_internal",
              "line_number": 646,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "kind",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  route and playback internal operation.\\n\\nThis function implements  route and playback internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param kind: Parameter for kind specification.\\n:param text: Parameter for text specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  route and playback internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "send_stop_audio",
              "line_number": 712,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Send a stop-audio event to ACS to interrupt current playback (CLIENT).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Send a stop-audio event to ACS to interrupt current playback (CLIENT).\\n\\nThis function implements send stop audio functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If send stop audio operation fails due to invalid parameters or system state."
            },
            {
              "name": "_send_stop_audio_internal",
              "line_number": 724,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  send stop audio internal operation.\\n\\nThis function implements  send stop audio internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  send stop audio internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 748,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute stop operation.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            },
            {
              "name": "_stop_internal",
              "line_number": 759,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  stop internal operation.\\n\\nThis function implements  stop internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  stop internal operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a acsmediahandler with comprehensive functionality.\n\nThis class provides acsmediahandler operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ACSMediaHandler instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\handlers\\acs_transcript_handler.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 20,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "websocket",
              "annotation": "WebSocket"
            },
            {
              "name": "cm",
              "annotation": "MemoManager"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param cm: Parameter for cm specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_transcription_stats",
          "line_number": 122,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Get transcription statistics for monitoring",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get transcription statistics for monitoring.\\n\\nThis function implements get transcription stats functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get transcription stats operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "TranscriptionHandler",
          "line_number": 14,
          "docstring": "Simple transcription handler for ACS WebSocket messages.\nHandles intermediate (barge-in) and final transcription processing.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 20,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                },
                {
                  "name": "cm",
                  "annotation": "MemoManager"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:param cm: Parameter for cm specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "_ensure_clients",
              "line_number": 30,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Lazy initialization of clients to avoid async call in __init__",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Lazy initialization of clients to avoid async call in __init__.\\n\\nThis function implements  ensure clients functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  ensure clients operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_transcription_message",
              "line_number": 35,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "message",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle WebSocket transcription messages from ACS.\n\nArgs:\n    message: Transcription message from ACS WebSocket",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle WebSocket transcription messages from ACS.\\n\\nArgs:\n    message: Transcription message from ACS WebSocket. This function implements handle transcription message functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param message: String value representing message data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If handle transcription message operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_intermediate_transcription",
              "line_number": 78,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "bot_speaking",
                  "annotation": "bool"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle intermediate transcription (barge-in detection)",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle intermediate transcription (barge-in detection).\\n\\nThis function implements  handle intermediate transcription functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param bot_speaking: Boolean flag indicating bot speaking status.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  handle intermediate transcription operation fails due to invalid parameters or system state."
            },
            {
              "name": "_handle_final_transcription",
              "line_number": 104,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle final transcription (user finished speaking)",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle final transcription (user finished speaking).\\n\\nThis function implements  handle final transcription functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  handle final transcription operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_transcription_stats",
              "line_number": 122,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Get transcription statistics for monitoring",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get transcription statistics for monitoring.\\n\\nThis function implements get transcription stats functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get transcription stats operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a transcriptionhandler with comprehensive functionality.\n\nThis class provides transcriptionhandler operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TranscriptionHandler instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\handlers\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\latency\\latency_tool.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 11,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "cm",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param cm: Parameter for cm specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "start",
          "line_number": 16,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "stage",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Mark the beginning of *stage*.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Mark the beginning of *stage*.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stage: String value representing stage data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
        },
        {
          "name": "stop",
          "line_number": 20,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "stage",
              "annotation": "str"
            },
            {
              "name": "redis_mgr",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Mark the end of *stage* and immediately push the sample\ninto Redis for real-time monitoring.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Mark the end of *stage* and immediately push the sample\ninto Redis for real-time monitoring.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stage: String value representing stage data.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
        },
        {
          "name": "summary",
          "line_number": 38,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute summary operation.\\n\\nThis function implements summary functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If summary operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "LatencyTool",
          "line_number": 10,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 11,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "cm",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param cm: Parameter for cm specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "start",
              "line_number": 16,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "stage",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Mark the beginning of *stage*.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Mark the beginning of *stage*.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stage: String value representing stage data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 20,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "stage",
                  "annotation": "str"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Mark the end of *stage* and immediately push the sample\ninto Redis for real-time monitoring.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Mark the end of *stage* and immediately push the sample\ninto Redis for real-time monitoring.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stage: String value representing stage data.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            },
            {
              "name": "summary",
              "line_number": 38,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute summary operation.\\n\\nThis function implements summary functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If summary operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a latencytool with comprehensive functionality.\n\nThis class provides latencytool operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized LatencyTool instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\latency\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\orchestration\\gpt_flow.py",
      "functions": [
        {
          "name": "_get_agent_voice_config",
          "line_number": 66,
          "is_async": false,
          "parameters": [
            {
              "name": "cm",
              "annotation": "'MemoManager'"
            }
          ],
          "return_annotation": "Tuple[Optional[str], Optional[str], Optional[str]]",
          "docstring": "Extract agent voice configuration from memory manager.\n\n:param cm: The active MemoManager instance.\n:return: Tuple of (voice_name, voice_style, voice_rate) or (None, None, None).",
          "quality_score": 0.9,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract agent voice configuration from memory manager.\\n\\n:param cm: The active MemoManager instance. This function implements  get agent voice config functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cm: Parameter for cm specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get agent voice config operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_agent_sender_name",
          "line_number": 86,
          "is_async": false,
          "parameters": [
            {
              "name": "cm",
              "annotation": "'MemoManager'"
            }
          ],
          "return_annotation": "str",
          "docstring": "Resolve the visible sender name for dashboard / UI.\n\nThis is centralized to keep mapping consistent across streaming, final\nmessages, and tool broadcasts. To preserve existing behavior, callers can\ncontrol whether the \"AutoAuth\" label maps to the Auth Agent explicitly.\n\n:param cm: MemoManager instance for reading context.\n:param include_autoauth: When True, map active_agent==\"AutoAuth\" to\n    \"Auth Agent\" (matches existing streaming path behavior). When False,\n    keep legacy behavior for final/tool broadcast sites.\n:return: Human-friendly speaker label.",
          "quality_score": 1.3000000000000003,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Resolve the visible sender name for dashboard / UI.\\n\\nThis is centralized to keep mapping consistent across streaming, final\nmessages, and tool broadcasts. This function implements  get agent sender name functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cm: Parameter for cm specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get agent sender name operation fails due to invalid parameters or system state."
        },
        {
          "name": "_build_chat_kwargs",
          "line_number": 245,
          "is_async": false,
          "parameters": [],
          "return_annotation": "JSONDict",
          "docstring": "Build Azure OpenAI chat-completions kwargs.\n\n:return: Dict suitable for az_openai_client.chat.completions.create(**kwargs)",
          "quality_score": 0.5000000000000001,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Build Azure OpenAI chat-completions kwargs.\\n\\n:return: Dict suitable for az_openai_client. This function implements  build chat kwargs functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If  build chat kwargs operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 272,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "_ToolCallState",
          "line_number": 269,
          "docstring": "Minimal state carrier for a single tool call parsed from stream deltas.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 272,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a _toolcallstate with comprehensive functionality.\n\nThis class provides _toolcallstate operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized _ToolCallState instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\orchestration\\orchestrator.py",
      "functions": [
        {
          "name": "configure_entry_and_specialists",
          "line_number": 64,
          "is_async": false,
          "parameters": [],
          "return_annotation": "None",
          "docstring": "Configure the entry agent and ordered list of specialists.\n\nThe entry agent is **forced to 'AutoAuth'** to keep a consistent flow as requested.\nSpecialists are stored (case-sensitive names) and used for generic handoffs.\n\nExample:\n    configure_entry_and_specialists(entry_agent=\"AutoAuth\", specialists=[\"General\", \"Claims\", \"Billing\"]) ",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Configure the entry agent and ordered list of specialists.\\n\\nThe entry agent is **forced to 'AutoAuth'** to keep a consistent flow as requested. This function implements configure entry and specialists functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If configure entry and specialists operation fails due to invalid parameters or system state."
        },
        {
          "name": "register_specialist",
          "line_number": 119,
          "is_async": false,
          "parameters": [
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "handler",
              "annotation": "AgentHandler"
            }
          ],
          "return_annotation": "None",
          "docstring": "Register a specialist/entry agent handler.\n\nThe name should match ``active_agent`` values stored in CoreMemory.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Register a specialist/entry agent handler.\\n\\nThe name should match ``active_agent`` values stored in CoreMemory. This function implements register specialist functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param name: String value representing name data.\\n:param handler: Parameter for handler specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If register specialist operation fails due to invalid parameters or system state."
        },
        {
          "name": "register_specialists",
          "line_number": 127,
          "is_async": false,
          "parameters": [
            {
              "name": "handlers",
              "annotation": "Dict[str, AgentHandler]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Bulk-register multiple agents in one call.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Bulk-register multiple agents in one call.\\n\\nThis function implements register specialists functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param handlers: String value representing handlers data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If register specialists operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_specialist",
          "line_number": 133,
          "is_async": false,
          "parameters": [
            {
              "name": "name",
              "annotation": "str"
            }
          ],
          "return_annotation": "Optional[AgentHandler]",
          "docstring": "Return a handler for the given agent name, if registered.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return a handler for the given agent name, if registered.\\n\\nThis function implements get specialist functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param name: String value representing name data.\\n:return: Value if operation succeeds, None if no data available.\\n:raises RuntimeError: If get specialist operation fails due to invalid parameters or system state."
        },
        {
          "name": "list_specialists",
          "line_number": 138,
          "is_async": false,
          "parameters": [],
          "return_annotation": "Iterable[str]",
          "docstring": "List the registered agent names.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "List the registered agent names.\\n\\nThis function implements list specialists functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: String value containing the requested information.\\n:raises RuntimeError: If list specialists operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_correlation_context",
          "line_number": 148,
          "is_async": false,
          "parameters": [
            {
              "name": "ws",
              "annotation": "WebSocket"
            },
            {
              "name": "cm",
              "annotation": "'MemoManager'"
            }
          ],
          "return_annotation": "Tuple[str, str]",
          "docstring": "Extract correlation context from *WebSocket* and *MemoManager*.\n\n:returns: ``(call_connection_id, session_id)``",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract correlation context from *WebSocket* and *MemoManager*.\\n\\n:returns: ``(call_connection_id, session_id)``. This function implements  get correlation context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param ws: Active WebSocket connection for real-time communication.\\n:param cm: Parameter for cm specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get correlation context operation fails due to invalid parameters or system state."
        },
        {
          "name": "_cm_get",
          "line_number": 182,
          "is_async": false,
          "parameters": [
            {
              "name": "cm",
              "annotation": "'MemoManager'"
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "default",
              "annotation": "Any"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Shorthand for ``cm.get_value_from_corememory`` with a default.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Shorthand for ``cm.\\n\\nThis function implements  cm get functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cm: Parameter for cm specification.\\n:param key: String value representing key data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If  cm get operation fails due to invalid parameters or system state."
        },
        {
          "name": "_cm_set",
          "line_number": 194,
          "is_async": false,
          "parameters": [
            {
              "name": "cm",
              "annotation": "'MemoManager'"
            }
          ],
          "return_annotation": "None",
          "docstring": "Bulk update core\u2011memory with ``key=value`` pairs.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Bulk update core\u2011memory with ``key=value`` pairs.\\n\\nThis function implements  cm set functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cm: Parameter for cm specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  cm set operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_agent_instance",
          "line_number": 203,
          "is_async": false,
          "parameters": [
            {
              "name": "ws",
              "annotation": "WebSocket"
            },
            {
              "name": "agent_name",
              "annotation": "str"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Return the agent instance for ``agent_name``.\n\nFirst uses known bindings (auth/claims/general). If not found, tries\n``ws.app.state.agent_instances[agent_name]`` when present.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return the agent instance for ``agent_name``.\\n\\nFirst uses known bindings (auth/claims/general). This function implements  get agent instance functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param ws: Active WebSocket connection for real-time communication.\\n:param agent_name: String value representing agent name data.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If  get agent instance operation fails due to invalid parameters or system state."
        },
        {
          "name": "_sync_voice_from_agent",
          "line_number": 219,
          "is_async": false,
          "parameters": [
            {
              "name": "cm",
              "annotation": "'MemoManager'"
            },
            {
              "name": "ws",
              "annotation": "WebSocket"
            },
            {
              "name": "agent_name",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Update CoreMemory voice based on the agent instance (if available).",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Update CoreMemory voice based on the agent instance (if available).\\n\\nThis function implements  sync voice from agent functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cm: Parameter for cm specification.\\n:param ws: Active WebSocket connection for real-time communication.\\n:param agent_name: String value representing agent name data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  sync voice from agent operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_field",
          "line_number": 542,
          "is_async": false,
          "parameters": [
            {
              "name": "resp",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "key",
              "annotation": "str"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Return ``resp[key]`` or ``resp['data'][key]`` if nested.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return ``resp[key]`` or ``resp['data'][key]`` if nested.\\n\\nThis function implements  get field functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param resp: HTTP response object for client communication.\\n:param key: String value representing key data.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If  get field operation fails due to invalid parameters or system state."
        },
        {
          "name": "_bind_default_handlers",
          "line_number": 717,
          "is_async": false,
          "parameters": [],
          "return_annotation": "None",
          "docstring": "Register default agent handlers.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Register default agent handlers.\\n\\nThis function implements  bind default handlers functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  bind default handlers operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AgentHandler",
          "line_number": 83,
          "docstring": "Protocol for agent handler functions.",
          "methods": [
            {
              "name": "__call__",
              "line_number": 85,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "cm",
                  "annotation": "'MemoManager'"
                },
                {
                  "name": "utterance",
                  "annotation": "str"
                },
                {
                  "name": "ws",
                  "annotation": "WebSocket"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   call   operation.\\n\\nThis function implements   call   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param cm: Parameter for cm specification.\\n:param utterance: String value representing utterance data.\\n:param ws: Active WebSocket connection for real-time communication.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   call   operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a agenthandler with comprehensive functionality.\n\nThis class provides agenthandler operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AgentHandler instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "_AgentBinding",
          "line_number": 95,
          "docstring": "Binding information for known agents.\n\nThe orchestrator historically accessed concrete agent instances via\n``ws.app.state`` attributes. We keep that behavior but centralize the\nmapping here and support a fallback dictionary ``agent_instances`` for\nfuture agent names.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a _agentbinding with comprehensive functionality.\n\nThis class provides _agentbinding operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized _AgentBinding instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\orchestration\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\routers\\acs.py",
      "functions": [],
      "classes": [
        {
          "name": "CallRequest",
          "line_number": 70,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a callrequest with comprehensive functionality.\n\nThis class provides callrequest operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallRequest instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\routers\\health.py",
      "functions": [
        {
          "name": "_validate_phone_number",
          "line_number": 24,
          "is_async": false,
          "parameters": [
            {
              "name": "phone_number",
              "annotation": "str"
            }
          ],
          "return_annotation": "tuple[bool, str]",
          "docstring": "Validate ACS phone number format.\nReturns (is_valid, error_message_if_invalid)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validate ACS phone number format.\\n\\nThis function implements  validate phone number functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param phone_number: String value representing phone number data.\\n:return: String value containing the requested information.\\n:raises ValueError: If  validate phone number operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\routers\\realtime.py",
      "functions": [
        {
          "name": "on_partial",
          "line_number": 104,
          "is_async": false,
          "parameters": [
            {
              "name": "txt",
              "annotation": "str"
            },
            {
              "name": "lang",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute on partial operation.\\n\\nThis function implements on partial functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param txt: String value representing txt data.\\n:param lang: String value representing lang data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on partial operation fails due to invalid parameters or system state."
        },
        {
          "name": "on_final",
          "line_number": 125,
          "is_async": false,
          "parameters": [
            {
              "name": "txt",
              "annotation": "str"
            },
            {
              "name": "lang",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute on final operation.\\n\\nThis function implements on final functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param txt: String value representing txt data.\\n:param lang: String value representing lang data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If on final operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\routers\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\services\\cosmosdb_services.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\services\\openai_services.py",
      "functions": [
        {
          "name": "create_azure_openai_client",
          "line_number": 28,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": "Create Azure OpenAI client with proper authentication for APIM.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create Azure OpenAI client with proper authentication for APIM.\\n\\nThis function implements create azure openai client functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If create azure openai client operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\services\\redis_services.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\services\\speech_services.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\services\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\utils\\auth.py",
      "functions": [
        {
          "name": "get_jwks",
          "line_number": 36,
          "is_async": false,
          "parameters": [
            {
              "name": "jwks_url",
              "annotation": "str"
            }
          ],
          "return_annotation": "list[dict]",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Retrieve jwks from the system.\\n\\nThis function implements get jwks functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param jwks_url: URL endpoint for jwks service.\\n:return: Instance of list[dict] with operation results.\\n:raises RuntimeError: If get jwks operation fails due to invalid parameters or system state."
        },
        {
          "name": "validate_jwt_token",
          "line_number": 41,
          "is_async": false,
          "parameters": [
            {
              "name": "token",
              "annotation": "str"
            },
            {
              "name": "jwks_url",
              "annotation": "str"
            },
            {
              "name": "issuer",
              "annotation": "str"
            },
            {
              "name": "audience",
              "annotation": "str"
            }
          ],
          "return_annotation": "dict",
          "docstring": "Validates JWT using provided JWKS, issuer, and audience.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validates JWT using provided JWKS, issuer, and audience.\\n\\nThis function implements validate jwt token functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param token: String value representing token data.\\n:param jwks_url: URL endpoint for jwks service.\\n:param issuer: String value representing issuer data.\\n:param audience: String value representing audience data.\\n:return: Instance of dict with operation results.\\n:raises ValueError: If validate jwt token operation fails due to invalid parameters or system state."
        },
        {
          "name": "extract_bearer_token",
          "line_number": 59,
          "is_async": false,
          "parameters": [
            {
              "name": "authorization_header",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute extract bearer token operation.\\n\\nThis function implements extract bearer token functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param authorization_header: String value representing authorization header data.\\n:return: String value containing the requested information.\\n:raises AuthenticationError: If extract bearer token operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_easyauth_identity",
          "line_number": 67,
          "is_async": false,
          "parameters": [
            {
              "name": "request",
              "annotation": "Request"
            }
          ],
          "return_annotation": "dict",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Retrieve easyauth identity from the system.\\n\\nThis function implements get easyauth identity functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param request: HTTP request object containing client data and headers.\\n:return: Instance of dict with operation results.\\n:raises AuthenticationError: If get easyauth identity operation fails due to invalid parameters or system state."
        },
        {
          "name": "validate_acs_http_auth",
          "line_number": 97,
          "is_async": false,
          "parameters": [
            {
              "name": "request",
              "annotation": "Request"
            }
          ],
          "return_annotation": "dict",
          "docstring": "Validates bearer token for ACS HTTP callbacks.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validates bearer token for ACS HTTP callbacks.\\n\\nThis function implements validate acs http auth functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param request: HTTP request object containing client data and headers.\\n:return: Instance of dict with operation results.\\n:raises ValueError: If validate acs http auth operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AuthError",
          "line_number": 29,
          "docstring": "Generic authentication error.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a autherror with comprehensive functionality.\n\nThis class provides autherror operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AuthError instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\utils\\auth_utils.py",
      "functions": [
        {
          "name": "decode_jwt_payload",
          "line_number": 18,
          "is_async": false,
          "parameters": [
            {
              "name": "token",
              "annotation": "str"
            }
          ],
          "return_annotation": "Optional[Dict]",
          "docstring": "Decode JWT token payload for debugging purposes.\nNote: This only decodes the payload, it doesn't verify the signature.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Decode JWT token payload for debugging purposes.\\n\\nNote: This only decodes the payload, it doesn't verify the signature. This function implements decode jwt payload functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param token: String value representing token data.\\n:return: Dictionary containing operation results and status information.\\n:raises JSONDecodeError: If decode jwt payload operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_token_info_for_debugging",
          "line_number": 48,
          "is_async": false,
          "parameters": [
            {
              "name": "credential",
              "annotation": null
            }
          ],
          "return_annotation": "Dict",
          "docstring": "Get token information for debugging APIM policy issues.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get token information for debugging APIM policy issues.\\n\\nThis function implements get token info for debugging functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param credential: Parameter for credential specification.\\n:return: Dictionary containing operation results and status information.\\n:raises AuthenticationError: If get token info for debugging operation fails due to invalid parameters or system state."
        },
        {
          "name": "validate_azure_openai_auth_setup",
          "line_number": 89,
          "is_async": false,
          "parameters": [],
          "return_annotation": "Dict",
          "docstring": "Validate Azure OpenAI authentication setup for APIM compatibility.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validate Azure OpenAI authentication setup for APIM compatibility.\\n\\nThis function implements validate azure openai auth setup functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Dictionary containing operation results and status information.\\n:raises ValueError: If validate azure openai auth setup operation fails due to invalid parameters or system state."
        },
        {
          "name": "create_apim_debug_headers",
          "line_number": 206,
          "is_async": false,
          "parameters": [],
          "return_annotation": "Dict[str, str]",
          "docstring": "Create headers that can help debug APIM policy evaluation.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create headers that can help debug APIM policy evaluation.\\n\\nThis function implements create apim debug headers functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If create apim debug headers operation fails due to invalid parameters or system state."
        },
        {
          "name": "validate_token_for_apim",
          "line_number": 229,
          "is_async": false,
          "parameters": [
            {
              "name": "credential",
              "annotation": null
            }
          ],
          "return_annotation": "Dict",
          "docstring": "Validate token for APIM policy compatibility.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validate token for APIM policy compatibility.\\n\\nThis function implements validate token for apim functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param credential: Parameter for credential specification.\\n:return: Dictionary containing operation results and status information.\\n:raises ValueError: If validate token for apim operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\utils\\tracing.py",
      "functions": [
        {
          "name": "create_span_attrs",
          "line_number": 46,
          "is_async": false,
          "parameters": [
            {
              "name": "component",
              "annotation": "str"
            },
            {
              "name": "service",
              "annotation": "str"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Create generic span attributes with common fields.\n\nNOTE: We intentionally DO NOT set `service.name` or `span.kind` here.\nSet `service.name` on the Resource, and pass `kind=SpanKind.*` when\ncreating spans.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create generic span attributes with common fields.\\n\\nNOTE: We intentionally DO NOT set `service. This function implements create span attrs functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param component: String value representing component data.\\n:param service: String value representing service data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If create span attrs operation fails due to invalid parameters or system state."
        },
        {
          "name": "create_service_dependency_attrs",
          "line_number": 66,
          "is_async": false,
          "parameters": [
            {
              "name": "source_service",
              "annotation": "str"
            },
            {
              "name": "target_service",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Create attributes for CLIENT spans that represent dependencies.\n\nUses semantic keys to help App Map draw edges correctly.\n- peer.service: logical target\n- net.peer.name: target name/host (same logical value if not DNS based)\n- network.protocol.name: \"websocket\" for WS edges when ws=True",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create attributes for CLIENT spans that represent dependencies.\\n\\nUses semantic keys to help App Map draw edges correctly. This function implements create service dependency attrs functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param source_service: String value representing source service data.\\n:param target_service: String value representing target service data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If create service dependency attrs operation fails due to invalid parameters or system state."
        },
        {
          "name": "create_service_handler_attrs",
          "line_number": 101,
          "is_async": false,
          "parameters": [
            {
              "name": "service_name",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Create attributes for SERVER spans that represent handlers.\n\nThese identify the component and include stable correlation keys.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create attributes for SERVER spans that represent handlers.\\n\\nThese identify the component and include stable correlation keys. This function implements create service handler attrs functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param service_name: String value representing service name data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If create service handler attrs operation fails due to invalid parameters or system state."
        },
        {
          "name": "log_with_context",
          "line_number": 123,
          "is_async": false,
          "parameters": [
            {
              "name": "logger",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": "str"
            },
            {
              "name": "message",
              "annotation": "str"
            },
            {
              "name": "operation",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Structured logging with consistent context.\n\nFilters None values to keep logs clean.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Structured logging with consistent context.\\n\\nThis function implements log with context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param logger: Parameter for logger specification.\\n:param level: String value representing level data.\\n:param message: String value representing message data.\\n:param operation: String value representing operation data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If log with context operation fails due to invalid parameters or system state."
        },
        {
          "name": "trace_acs_operation",
          "line_number": 255,
          "is_async": false,
          "parameters": [
            {
              "name": "tracer",
              "annotation": null
            },
            {
              "name": "logger",
              "annotation": null
            },
            {
              "name": "operation",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "span_kind",
              "annotation": "Any"
            }
          ],
          "return_annotation": "TracedOperation",
          "docstring": "Create a traced ACS operation with consistent naming and attributes.\n\nUsage:\n    with trace_acs_operation(tracer, logger, \"handle_call_connected\", call_id) as op:\n        op.log_info(\"Processing call connected event\")\n        # ... do work ...",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create a traced ACS operation with consistent naming and attributes.\\n\\nUsage:\n    with trace_acs_operation(tracer, logger, \"handle_call_connected\", call_id) as op:\n        op. This function implements trace acs operation functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param tracer: Parameter for tracer specification.\\n:param logger: Parameter for logger specification.\\n:param operation: String value representing operation data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param span_kind: Parameter for span kind specification.\\n:return: Instance of TracedOperation with operation results.\\n:raises RuntimeError: If trace acs operation operation fails due to invalid parameters or system state."
        },
        {
          "name": "trace_acs_dependency",
          "line_number": 285,
          "is_async": false,
          "parameters": [
            {
              "name": "tracer",
              "annotation": null
            },
            {
              "name": "logger",
              "annotation": null
            },
            {
              "name": "target_service",
              "annotation": "str"
            },
            {
              "name": "operation",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "TracedOperation",
          "docstring": "Create a traced dependency call with consistent naming and attributes.\n\nUsage:\n    with trace_acs_dependency(tracer, logger, \"azure_openai\", \"generate\", call_id) as op:\n        op.log_info(\"Calling Azure OpenAI\")\n        result = await openai_client.generate(...)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create a traced dependency call with consistent naming and attributes.\\n\\nUsage:\n    with trace_acs_dependency(tracer, logger, \"azure_openai\", \"generate\", call_id) as op:\n        op. This function implements trace acs dependency functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param tracer: Parameter for tracer specification.\\n:param logger: Parameter for logger specification.\\n:param target_service: String value representing target service data.\\n:param operation: String value representing operation data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Instance of TracedOperation with operation results.\\n:raises RuntimeError: If trace acs dependency operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_acs_context_keys",
          "line_number": 323,
          "is_async": false,
          "parameters": [
            {
              "name": "event_context",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, Optional[str]]",
          "docstring": "Extract consistent context keys from an ACS event context.\n\nReturns a dict with standardized keys that can be used across\nall ACS operations for consistent correlation.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Extract consistent context keys from an ACS event context.\\n\\nReturns a dict with standardized keys that can be used across\nall ACS operations for consistent correlation. This function implements get acs context keys functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param event_context: Parameter for event context specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get acs context keys operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 153,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "tracer",
              "annotation": null
            },
            {
              "name": "logger",
              "annotation": null
            },
            {
              "name": "span_name",
              "annotation": "str"
            },
            {
              "name": "service_name",
              "annotation": "str"
            },
            {
              "name": "operation",
              "annotation": "str"
            },
            {
              "name": "span_kind",
              "annotation": "Any"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param tracer: Parameter for tracer specification.\\n:param logger: Parameter for logger specification.\\n:param span_name: String value representing span name data.\\n:param service_name: String value representing service name data.\\n:param operation: String value representing operation data.\\n:param span_kind: Parameter for span kind specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__enter__",
          "line_number": 176,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   enter   operation.\\n\\nThis function implements   enter   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   enter   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__exit__",
          "line_number": 190,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "exc_type",
              "annotation": null
            },
            {
              "name": "exc_val",
              "annotation": null
            },
            {
              "name": "exc_tb",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   exit   operation.\\n\\nThis function implements   exit   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param exc_type: Parameter for exc type specification.\\n:param exc_val: Parameter for exc val specification.\\n:param exc_tb: Parameter for exc tb specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   exit   operation fails due to invalid parameters or system state."
        },
        {
          "name": "log_info",
          "line_number": 209,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Log info with consistent context.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Log info with consistent context.\\n\\nThis function implements log info functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param message: String value representing message data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If log info operation fails due to invalid parameters or system state."
        },
        {
          "name": "log_error",
          "line_number": 221,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Log error with consistent context.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Log error with consistent context.\\n\\nThis function implements log error functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param message: String value representing message data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If log error operation fails due to invalid parameters or system state."
        },
        {
          "name": "log_debug",
          "line_number": 233,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Log debug with consistent context.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Log debug with consistent context.\\n\\nThis function implements log debug functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param message: String value representing message data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If log debug operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_error",
          "line_number": 245,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "error_message",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Mark span as error with message.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Mark span as error with message.\\n\\nThis function implements set error functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param error_message: String value representing error message data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If set error operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "TracedOperation",
          "line_number": 150,
          "docstring": "Context manager for traced operations that handles all the boilerplate.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 153,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "tracer",
                  "annotation": null
                },
                {
                  "name": "logger",
                  "annotation": null
                },
                {
                  "name": "span_name",
                  "annotation": "str"
                },
                {
                  "name": "service_name",
                  "annotation": "str"
                },
                {
                  "name": "operation",
                  "annotation": "str"
                },
                {
                  "name": "span_kind",
                  "annotation": "Any"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "session_id",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param tracer: Parameter for tracer specification.\\n:param logger: Parameter for logger specification.\\n:param span_name: String value representing span name data.\\n:param service_name: String value representing service name data.\\n:param operation: String value representing operation data.\\n:param span_kind: Parameter for span kind specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "__enter__",
              "line_number": 176,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   enter   operation.\\n\\nThis function implements   enter   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   enter   operation fails due to invalid parameters or system state."
            },
            {
              "name": "__exit__",
              "line_number": 190,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "exc_type",
                  "annotation": null
                },
                {
                  "name": "exc_val",
                  "annotation": null
                },
                {
                  "name": "exc_tb",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   exit   operation.\\n\\nThis function implements   exit   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param exc_type: Parameter for exc type specification.\\n:param exc_val: Parameter for exc val specification.\\n:param exc_tb: Parameter for exc tb specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   exit   operation fails due to invalid parameters or system state."
            },
            {
              "name": "log_info",
              "line_number": 209,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "message",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Log info with consistent context.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Log info with consistent context.\\n\\nThis function implements log info functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param message: String value representing message data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If log info operation fails due to invalid parameters or system state."
            },
            {
              "name": "log_error",
              "line_number": 221,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "message",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Log error with consistent context.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Log error with consistent context.\\n\\nThis function implements log error functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param message: String value representing message data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If log error operation fails due to invalid parameters or system state."
            },
            {
              "name": "log_debug",
              "line_number": 233,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "message",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Log debug with consistent context.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Log debug with consistent context.\\n\\nThis function implements log debug functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param message: String value representing message data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If log debug operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_error",
              "line_number": 245,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "error_message",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Mark span as error with message.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Mark span as error with message.\\n\\nThis function implements set error functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param error_message: String value representing error message data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If set error operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a tracedoperation with comprehensive functionality.\n\nThis class provides tracedoperation operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TracedOperation instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\utils\\tracing_utils.py",
      "functions": [
        {
          "name": "create_span_attrs",
          "line_number": 45,
          "is_async": false,
          "parameters": [
            {
              "name": "component",
              "annotation": "str"
            },
            {
              "name": "service",
              "annotation": "str"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Create generic span attributes with common fields.\n\nNOTE: We intentionally DO NOT set `service.name` or `span.kind` here.\nSet `service.name` on the Resource, and pass `kind=SpanKind.*` when\ncreating spans.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create generic span attributes with common fields.\\n\\nNOTE: We intentionally DO NOT set `service. This function implements create span attrs functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param component: String value representing component data.\\n:param service: String value representing service data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If create span attrs operation fails due to invalid parameters or system state."
        },
        {
          "name": "create_service_dependency_attrs",
          "line_number": 65,
          "is_async": false,
          "parameters": [
            {
              "name": "source_service",
              "annotation": "str"
            },
            {
              "name": "target_service",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Create attributes for CLIENT spans that represent dependencies.\n\nUses semantic keys to help App Map draw edges correctly.\n- peer.service: logical target\n- net.peer.name: target name/host (same logical value if not DNS based)\n- network.protocol.name: \"websocket\" for WS edges when ws=True",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create attributes for CLIENT spans that represent dependencies.\\n\\nUses semantic keys to help App Map draw edges correctly. This function implements create service dependency attrs functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param source_service: String value representing source service data.\\n:param target_service: String value representing target service data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If create service dependency attrs operation fails due to invalid parameters or system state."
        },
        {
          "name": "create_service_handler_attrs",
          "line_number": 100,
          "is_async": false,
          "parameters": [
            {
              "name": "service_name",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": "Create attributes for SERVER spans that represent handlers.\n\nThese identify the component and include stable correlation keys.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create attributes for SERVER spans that represent handlers.\\n\\nThese identify the component and include stable correlation keys. This function implements create service handler attrs functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param service_name: String value representing service name data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If create service handler attrs operation fails due to invalid parameters or system state."
        },
        {
          "name": "log_with_context",
          "line_number": 122,
          "is_async": false,
          "parameters": [
            {
              "name": "logger",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": "str"
            },
            {
              "name": "message",
              "annotation": "str"
            },
            {
              "name": "operation",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Structured logging with consistent context.\n\nFilters None values to keep logs clean.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Structured logging with consistent context.\\n\\nThis function implements log with context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param logger: Parameter for logger specification.\\n:param level: String value representing level data.\\n:param message: String value representing message data.\\n:param operation: String value representing operation data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If log with context operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\prompt_store\\prompt_manager.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 21,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "template_dir",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize the PromptManager with the given template directory.\n\nArgs:\n    template_dir (str): The directory containing the Jinja2 templates.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize the PromptManager with the given template directory.\\n\\nArgs:\n    template_dir (str): The directory containing the Jinja2 templates. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param template_dir: String value representing template dir data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_prompt",
          "line_number": 38,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "template_name",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Render a template with the given context.\n\nArgs:\n    template_name (str): The name of the template file.\n    **kwargs: The context variables to render the template with.\n\nReturns:\n    str: The rendered template as a string.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Render a template with the given context.\\n\\nArgs:\n    template_name (str): The name of the template file. This function implements get prompt functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param template_name: String value representing template name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get prompt operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "PromptManager",
          "line_number": 20,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 21,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "template_dir",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize the PromptManager with the given template directory.\n\nArgs:\n    template_dir (str): The directory containing the Jinja2 templates.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize the PromptManager with the given template directory.\\n\\nArgs:\n    template_dir (str): The directory containing the Jinja2 templates. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param template_dir: String value representing template dir data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_prompt",
              "line_number": 38,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "template_name",
                  "annotation": "str"
                }
              ],
              "return_annotation": "str",
              "docstring": "Render a template with the given context.\n\nArgs:\n    template_name (str): The name of the template file.\n    **kwargs: The context variables to render the template with.\n\nReturns:\n    str: The rendered template as a string.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Render a template with the given context.\\n\\nArgs:\n    template_name (str): The name of the template file. This function implements get prompt functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param template_name: String value representing template name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get prompt operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a promptmanager with comprehensive functionality.\n\nThis class provides promptmanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized PromptManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\prompt_store\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\tool_store\\auth.py",
      "functions": [],
      "classes": [
        {
          "name": "AuthenticateArgs",
          "line_number": 80,
          "docstring": "Payload expected by :pyfunc:`authenticate_caller`.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a authenticateargs with comprehensive functionality.\n\nThis class provides authenticateargs operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AuthenticateArgs instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AuthenticateResult",
          "line_number": 91,
          "docstring": "Return schema from :pyfunc:`authenticate_caller`.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a authenticateresult with comprehensive functionality.\n\nThis class provides authenticateresult operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AuthenticateResult instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\tool_store\\emergency.py",
      "functions": [],
      "classes": [
        {
          "name": "EscalateEmergencyArgs",
          "line_number": 9,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a escalateemergencyargs with comprehensive functionality.\n\nThis class provides escalateemergencyargs operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EscalateEmergencyArgs instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\tool_store\\fnol.py",
      "functions": [
        {
          "name": "_new_claim_id",
          "line_number": 79,
          "is_async": false,
          "parameters": [],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  new claim id operation.\\n\\nThis function implements  new claim id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  new claim id operation fails due to invalid parameters or system state."
        },
        {
          "name": "_validate",
          "line_number": 107,
          "is_async": false,
          "parameters": [
            {
              "name": "data",
              "annotation": "ClaimIntakeFull"
            }
          ],
          "return_annotation": "tuple[bool, str]",
          "docstring": "Return (ok, message).  Message lists missing fields if any.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return (ok, message).\\n\\nThis function implements  validate functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param data: Parameter for data specification.\\n:return: String value containing the requested information.\\n:raises ValueError: If  validate operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "LossLocation",
          "line_number": 28,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a losslocation with comprehensive functionality.\n\nThis class provides losslocation operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized LossLocation instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "PassengerInfo",
          "line_number": 35,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a passengerinfo with comprehensive functionality.\n\nThis class provides passengerinfo operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized PassengerInfo instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "InjuryAssessment",
          "line_number": 40,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a injuryassessment with comprehensive functionality.\n\nThis class provides injuryassessment operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized InjuryAssessment instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "VehicleDetails",
          "line_number": 45,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a vehicledetails with comprehensive functionality.\n\nThis class provides vehicledetails operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized VehicleDetails instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ClaimIntakeFull",
          "line_number": 52,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a claimintakefull with comprehensive functionality.\n\nThis class provides claimintakefull operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ClaimIntakeFull instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "EscalateArgs",
          "line_number": 70,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a escalateargs with comprehensive functionality.\n\nThis class provides escalateargs operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EscalateArgs instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\tool_store\\functions_helper.py",
      "functions": [
        {
          "name": "_json",
          "line_number": 4,
          "is_async": false,
          "parameters": [
            {
              "name": "ok",
              "annotation": "bool"
            },
            {
              "name": "msg",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  json operation.\\n\\nThis function implements  json functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param ok: Boolean flag indicating ok status.\\n:param msg: String value representing msg data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  json operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\tool_store\\handoffs.py",
      "functions": [],
      "classes": [
        {
          "name": "HandoffGeneralArgs",
          "line_number": 33,
          "docstring": "Input schema for :pyfunc:`handoff_general_agent`.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a handoffgeneralargs with comprehensive functionality.\n\nThis class provides handoffgeneralargs operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized HandoffGeneralArgs instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "HandoffClaimArgs",
          "line_number": 65,
          "docstring": "Input schema for :pyfunc:`handoff_claim_agent`.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a handoffclaimargs with comprehensive functionality.\n\nThis class provides handoffclaimargs operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized HandoffClaimArgs instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "EscalateHumanArgs",
          "line_number": 112,
          "docstring": "Input schema for :pyfunc:`escalate_human`.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a escalatehumanargs with comprehensive functionality.\n\nThis class provides escalatehumanargs operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EscalateHumanArgs instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\tool_store\\policies.py",
      "functions": [
        {
          "name": "_best_attr",
          "line_number": 111,
          "is_async": false,
          "parameters": [
            {
              "name": "question",
              "annotation": "str"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  best attr operation.\\n\\nThis function implements  best attr functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param question: String value representing question data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  best attr operation fails due to invalid parameters or system state."
        },
        {
          "name": "_render",
          "line_number": 122,
          "is_async": false,
          "parameters": [
            {
              "name": "rec",
              "annotation": "Dict[str, str | int | bool]"
            },
            {
              "name": "key",
              "annotation": "str"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  render operation.\\n\\nThis function implements  render functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param rec: String value representing rec data.\\n:param key: String value representing key data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  render operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "PolicyQueryArgs",
          "line_number": 95,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a policyqueryargs with comprehensive functionality.\n\nThis class provides policyqueryargs operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized PolicyQueryArgs instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "PolicyQueryResult",
          "line_number": 100,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a policyqueryresult with comprehensive functionality.\n\nThis class provides policyqueryresult operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized PolicyQueryResult instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\tool_store\\schemas.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\tool_store\\tools_helper.py",
      "functions": [
        {
          "name": "_frame",
          "line_number": 57,
          "is_async": false,
          "parameters": [
            {
              "name": "_type",
              "annotation": "str"
            },
            {
              "name": "call_id",
              "annotation": "str"
            },
            {
              "name": "name",
              "annotation": "str"
            }
          ],
          "return_annotation": "dict",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  frame operation.\\n\\nThis function implements  frame functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param _type: String value representing  type data.\\n:param call_id: Azure Communication Services call connection identifier.\\n:param name: String value representing name data.\\n:return: Instance of dict with operation results.\\n:raises RuntimeError: If  frame operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\tool_store\\tool_registry.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\agents\\tool_store\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\services\\acs\\acs_caller.py",
      "functions": [
        {
          "name": "initialize_acs_caller_instance",
          "line_number": 33,
          "is_async": false,
          "parameters": [],
          "return_annotation": "Optional[AcsCaller]",
          "docstring": "Create and cache an `AcsCaller` if env vars are set; otherwise return None.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create and cache an `AcsCaller` if env vars are set; otherwise return None.\\n\\nThis function implements initialize acs caller instance functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Value if operation succeeds, None if no data available.\\n:raises RuntimeError: If initialize acs caller instance operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\services\\acs\\acs_helpers.py",
      "functions": [
        {
          "name": "construct_websocket_url",
          "line_number": 44,
          "is_async": false,
          "parameters": [
            {
              "name": "base_url",
              "annotation": "str"
            },
            {
              "name": "path",
              "annotation": "str"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Constructs a WebSocket URL from a base URL and path.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Constructs a WebSocket URL from a base URL and path.\\n\\nThis function implements construct websocket url functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param base_url: URL endpoint for base service.\\n:param path: String value representing path data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If construct websocket url operation fails due to invalid parameters or system state."
        },
        {
          "name": "initialize_acs_caller_instance",
          "line_number": 80,
          "is_async": false,
          "parameters": [],
          "return_annotation": "Optional[AcsCaller]",
          "docstring": "Initializes and returns the ACS Caller instance if configured, otherwise None.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initializes and returns the ACS Caller instance if configured, otherwise None.\\n\\nThis function implements initialize acs caller instance functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Value if operation succeeds, None if no data available.\\n:raises RuntimeError: If initialize acs caller instance operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "MediaCancelledException",
          "line_number": 14,
          "docstring": "Exception raised when media playback is cancelled due to interrupt.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a mediacancelledexception with comprehensive functionality.\n\nThis class provides mediacancelledexception operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MediaCancelledException instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\services\\acs\\session_terminator.py",
      "functions": [
        {
          "name": "_get_disconnect_event",
          "line_number": 121,
          "is_async": false,
          "parameters": [
            {
              "name": "ws",
              "annotation": "WebSocket"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "Optional[asyncio.Event]",
          "docstring": "Retrieve (or create) an asyncio.Event that will be set when ACS disconnects.\nYour ACS webhook should set this event on 'CallDisconnected'.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Retrieve (or create) an asyncio.\\n\\nEvent that will be set when ACS disconnects. This function implements  get disconnect event functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param ws: Active WebSocket connection for real-time communication.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: Value if operation succeeds, None if no data available.\\n:raises ConnectionError: If  get disconnect event operation fails due to invalid parameters or system state."
        },
        {
          "name": "_cleanup_disconnect_event",
          "line_number": 149,
          "is_async": false,
          "parameters": [
            {
              "name": "ws",
              "annotation": "WebSocket"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Clean up the disconnect event after use to prevent memory leaks.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Clean up the disconnect event after use to prevent memory leaks.\\n\\nThis function implements  cleanup disconnect event functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param ws: Active WebSocket connection for real-time communication.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If  cleanup disconnect event operation fails due to invalid parameters or system state."
        },
        {
          "name": "_get_goodbye_message",
          "line_number": 259,
          "is_async": false,
          "parameters": [
            {
              "name": "reason",
              "annotation": "TerminationReason"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Generate appropriate goodbye message based on termination reason.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generate appropriate goodbye message based on termination reason.\\n\\nThis function implements  get goodbye message functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param reason: Parameter for reason specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  get goodbye message operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "TerminationReason",
          "line_number": 18,
          "docstring": "Reasons for intentionally ending a session.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a terminationreason with comprehensive functionality.\n\nThis class provides terminationreason operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TerminationReason instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "TerminationResult",
          "line_number": 28,
          "docstring": "Outcome of a terminate_session attempt.\n\n:param acs_hangup_attempted: Whether we attempted to hang up ACS.\n:param acs_hangup_succeeded: Whether ACS hangup completed without error.\n:param websocket_closed: Whether the WebSocket was closed successfully.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a terminationresult with comprehensive functionality.\n\nThis class provides terminationresult operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TerminationResult instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\apps\\rtagent\\backend\\src\\services\\acs\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\devops\\security\\bandit_to_sarif.py",
      "functions": [
        {
          "name": "bandit_to_sarif",
          "line_number": 12,
          "is_async": false,
          "parameters": [
            {
              "name": "bandit_json_path",
              "annotation": "str"
            },
            {
              "name": "sarif_output_path",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Convert Bandit JSON report to SARIF format.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Convert Bandit JSON report to SARIF format.\\n\\nThis function implements bandit to sarif functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param bandit_json_path: String value representing bandit json path data.\\n:param sarif_output_path: String value representing sarif output path data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If bandit to sarif operation fails due to invalid parameters or system state."
        },
        {
          "name": "main",
          "line_number": 113,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute main operation.\\n\\nThis function implements main functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If main operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\devops\\security\\run_bandit.py",
      "functions": [
        {
          "name": "utc_stamp",
          "line_number": 23,
          "is_async": false,
          "parameters": [],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute utc stamp operation.\\n\\nThis function implements utc stamp functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: String value containing the requested information.\\n:raises RuntimeError: If utc stamp operation fails due to invalid parameters or system state."
        },
        {
          "name": "run_bandit",
          "line_number": 27,
          "is_async": false,
          "parameters": [
            {
              "name": "target",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute run bandit operation.\\n\\nThis function implements run bandit functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param target: String value representing target data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If run bandit operation fails due to invalid parameters or system state."
        },
        {
          "name": "main",
          "line_number": 111,
          "is_async": false,
          "parameters": [],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute main operation.\\n\\nThis function implements main functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If main operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\devops\\scripts\\azd\\helpers\\acs_phone_number_manager.py",
      "functions": [
        {
          "name": "get_azd_env_value",
          "line_number": 44,
          "is_async": false,
          "parameters": [
            {
              "name": "key",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Retrieve environment value using azd env get-value command.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Retrieve environment value using azd env get-value command.\\n\\nThis function implements get azd env value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param key: String value representing key data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get azd env value operation fails due to invalid parameters or system state."
        },
        {
          "name": "purchase_phone_number",
          "line_number": 55,
          "is_async": false,
          "parameters": [
            {
              "name": "phone_numbers_client",
              "annotation": null
            },
            {
              "name": "args",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Purchase a new phone number.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Purchase a new phone number.\\n\\nThis function implements purchase phone number functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param phone_numbers_client: Parameter for phone numbers client specification.\\n:param args: Parameter for args specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If purchase phone number operation fails due to invalid parameters or system state."
        },
        {
          "name": "release_phone_number",
          "line_number": 91,
          "is_async": false,
          "parameters": [
            {
              "name": "phone_numbers_client",
              "annotation": null
            },
            {
              "name": "phone_number",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Release an existing phone number.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Release an existing phone number.\\n\\nThis function implements release phone number functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param phone_numbers_client: Parameter for phone numbers client specification.\\n:param phone_number: Parameter for phone number specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If release phone number operation fails due to invalid parameters or system state."
        },
        {
          "name": "main",
          "line_number": 99,
          "is_async": false,
          "parameters": [],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute main operation.\\n\\nThis function implements main functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If main operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\acs\\acs_helper.py",
      "functions": [
        {
          "name": "_endpoint_host_from_client",
          "line_number": 37,
          "is_async": false,
          "parameters": [
            {
              "name": "client",
              "annotation": "CallAutomationClient"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  endpoint host from client operation.\\n\\nThis function implements  endpoint host from client functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param client: Parameter for client specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  endpoint host from client operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 91,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "source_number",
              "annotation": "str"
            },
            {
              "name": "callback_url",
              "annotation": "str"
            },
            {
              "name": "recording_callback_url",
              "annotation": "str"
            },
            {
              "name": "websocket_url",
              "annotation": "str"
            },
            {
              "name": "acs_connection_string",
              "annotation": "str"
            },
            {
              "name": "acs_endpoint",
              "annotation": "str"
            },
            {
              "name": "cognitive_services_endpoint",
              "annotation": "str"
            },
            {
              "name": "speech_recognition_model_endpoint_id",
              "annotation": "str"
            },
            {
              "name": "recording_configuration",
              "annotation": "dict"
            },
            {
              "name": "recording_storage_container_url",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param source_number: String value representing source number data.\\n:param callback_url: URL endpoint for callback service.\\n:param recording_callback_url: URL endpoint for recording callback service.\\n:param websocket_url: URL endpoint for websocket service.\\n:param acs_connection_string: String value representing acs connection string data.\\n:param acs_endpoint: String value representing acs endpoint data.\\n:param cognitive_services_endpoint: String value representing cognitive services endpoint data.\\n:param speech_recognition_model_endpoint_id: Unique identifier for speech recognition model endpoint entity.\\n:param recording_configuration: Parameter for recording configuration specification.\\n:param recording_storage_container_url: URL endpoint for recording storage container service.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "_create_identity_and_get_token",
          "line_number": 196,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "resource_endpoint",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  create identity and get token operation.\\n\\nThis function implements  create identity and get token functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param resource_endpoint: Parameter for resource endpoint specification.\\n:return: None upon successful completion of the operation.\\n:raises AuthenticationError: If  create identity and get token operation fails due to invalid parameters or system state."
        },
        {
          "name": "_validate_configuration",
          "line_number": 204,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "websocket_url",
              "annotation": "str"
            },
            {
              "name": "acs_connection_string",
              "annotation": "str"
            },
            {
              "name": "acs_endpoint",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Validate configuration and log warnings for common misconfigurations.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validate configuration and log warnings for common misconfigurations.\\n\\nThis function implements  validate configuration functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket_url: URL endpoint for websocket service.\\n:param acs_connection_string: String value representing acs connection string data.\\n:param acs_endpoint: String value representing acs endpoint data.\\n:return: None upon successful completion of the operation.\\n:raises ValueError: If  validate configuration operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_call_connection",
          "line_number": 360,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            }
          ],
          "return_annotation": "CallConnectionClient",
          "docstring": "Retrieve the CallConnectionClient for the given call_connection_id.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Retrieve the CallConnectionClient for the given call_connection_id.\\n\\nThis function implements get call connection functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: Instance of CallConnectionClient with operation results.\\n:raises ConnectionError: If get call connection operation fails due to invalid parameters or system state."
        },
        {
          "name": "start_recording",
          "line_number": 370,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "server_call_id",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Start recording the call.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Start recording the call.\\n\\nThis function implements start recording functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param server_call_id: Unique identifier for server call entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start recording operation fails due to invalid parameters or system state."
        },
        {
          "name": "stop_recording",
          "line_number": 398,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "server_call_id",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Stop recording the call.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Stop recording the call.\\n\\nThis function implements stop recording functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param server_call_id: Unique identifier for server call entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop recording operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AcsCaller",
          "line_number": 86,
          "docstring": "Azure Communication Services call automation helper.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 91,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "source_number",
                  "annotation": "str"
                },
                {
                  "name": "callback_url",
                  "annotation": "str"
                },
                {
                  "name": "recording_callback_url",
                  "annotation": "str"
                },
                {
                  "name": "websocket_url",
                  "annotation": "str"
                },
                {
                  "name": "acs_connection_string",
                  "annotation": "str"
                },
                {
                  "name": "acs_endpoint",
                  "annotation": "str"
                },
                {
                  "name": "cognitive_services_endpoint",
                  "annotation": "str"
                },
                {
                  "name": "speech_recognition_model_endpoint_id",
                  "annotation": "str"
                },
                {
                  "name": "recording_configuration",
                  "annotation": "dict"
                },
                {
                  "name": "recording_storage_container_url",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param source_number: String value representing source number data.\\n:param callback_url: URL endpoint for callback service.\\n:param recording_callback_url: URL endpoint for recording callback service.\\n:param websocket_url: URL endpoint for websocket service.\\n:param acs_connection_string: String value representing acs connection string data.\\n:param acs_endpoint: String value representing acs endpoint data.\\n:param cognitive_services_endpoint: String value representing cognitive services endpoint data.\\n:param speech_recognition_model_endpoint_id: Unique identifier for speech recognition model endpoint entity.\\n:param recording_configuration: Parameter for recording configuration specification.\\n:param recording_storage_container_url: URL endpoint for recording storage container service.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "_create_identity_and_get_token",
              "line_number": 196,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "resource_endpoint",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  create identity and get token operation.\\n\\nThis function implements  create identity and get token functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param resource_endpoint: Parameter for resource endpoint specification.\\n:return: None upon successful completion of the operation.\\n:raises AuthenticationError: If  create identity and get token operation fails due to invalid parameters or system state."
            },
            {
              "name": "_validate_configuration",
              "line_number": 204,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "websocket_url",
                  "annotation": "str"
                },
                {
                  "name": "acs_connection_string",
                  "annotation": "str"
                },
                {
                  "name": "acs_endpoint",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Validate configuration and log warnings for common misconfigurations.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Validate configuration and log warnings for common misconfigurations.\\n\\nThis function implements  validate configuration functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket_url: URL endpoint for websocket service.\\n:param acs_connection_string: String value representing acs connection string data.\\n:param acs_endpoint: String value representing acs endpoint data.\\n:return: None upon successful completion of the operation.\\n:raises ValueError: If  validate configuration operation fails due to invalid parameters or system state."
            },
            {
              "name": "initiate_call",
              "line_number": 233,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "target_number",
                  "annotation": "str"
                },
                {
                  "name": "stream_mode",
                  "annotation": "StreamMode"
                }
              ],
              "return_annotation": "dict",
              "docstring": "Start a new call with live transcription over websocket.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Start a new call with live transcription over websocket.\\n\\nThis function implements initiate call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param target_number: String value representing target number data.\\n:param stream_mode: Parameter for stream mode specification.\\n:return: Instance of dict with operation results.\\n:raises RuntimeError: If initiate call operation fails due to invalid parameters or system state."
            },
            {
              "name": "answer_incoming_call",
              "line_number": 302,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "incoming_call_context",
                  "annotation": "str"
                },
                {
                  "name": "redis_mgr",
                  "annotation": null
                },
                {
                  "name": "stream_mode",
                  "annotation": "StreamMode"
                }
              ],
              "return_annotation": "object",
              "docstring": "Answer an incoming call and set up live transcription.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Answer an incoming call and set up live transcription.\\n\\nThis function implements answer incoming call functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param incoming_call_context: String value representing incoming call context data.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param stream_mode: Parameter for stream mode specification.\\n:return: Instance of object with operation results.\\n:raises RuntimeError: If answer incoming call operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_call_connection",
              "line_number": 360,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "CallConnectionClient",
              "docstring": "Retrieve the CallConnectionClient for the given call_connection_id.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Retrieve the CallConnectionClient for the given call_connection_id.\\n\\nThis function implements get call connection functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: Instance of CallConnectionClient with operation results.\\n:raises ConnectionError: If get call connection operation fails due to invalid parameters or system state."
            },
            {
              "name": "start_recording",
              "line_number": 370,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "server_call_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Start recording the call.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Start recording the call.\\n\\nThis function implements start recording functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param server_call_id: Unique identifier for server call entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start recording operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop_recording",
              "line_number": 398,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "server_call_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Stop recording the call.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Stop recording the call.\\n\\nThis function implements stop recording functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param server_call_id: Unique identifier for server call entity.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop recording operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a acscaller with comprehensive functionality.\n\nThis class provides acscaller operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AcsCaller instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\acs\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\agenticmemory\\memoriesbuilder.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 7,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "target_block_label",
              "annotation": "str"
            },
            {
              "name": "agent_id",
              "annotation": "str"
            },
            {
              "name": "message_manager",
              "annotation": "MessageManager"
            },
            {
              "name": "agent_manager",
              "annotation": "AgentManager"
            },
            {
              "name": "block_manager",
              "annotation": "BlockManager"
            },
            {
              "name": "actor",
              "annotation": "User"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param target_block_label: String value representing target block label data.\\n:param agent_id: Unique identifier for agent entity.\\n:param message_manager: Parameter for message manager specification.\\n:param agent_manager: Parameter for agent manager specification.\\n:param block_manager: Parameter for block manager specification.\\n:param actor: Parameter for actor specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "EphemeralSummaryAgent",
          "line_number": 1,
          "docstring": "A stateless summarization agent that utilizes the caller's LLM client to summarize the conversation.\nTODO (cliandy): allow the summarizer to use another llm_config from the main agent maybe?",
          "methods": [
            {
              "name": "__init__",
              "line_number": 7,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "target_block_label",
                  "annotation": "str"
                },
                {
                  "name": "agent_id",
                  "annotation": "str"
                },
                {
                  "name": "message_manager",
                  "annotation": "MessageManager"
                },
                {
                  "name": "agent_manager",
                  "annotation": "AgentManager"
                },
                {
                  "name": "block_manager",
                  "annotation": "BlockManager"
                },
                {
                  "name": "actor",
                  "annotation": "User"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param target_block_label: String value representing target block label data.\\n:param agent_id: Unique identifier for agent entity.\\n:param message_manager: Parameter for message manager specification.\\n:param agent_manager: Parameter for agent manager specification.\\n:param block_manager: Parameter for block manager specification.\\n:param actor: Parameter for actor specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "step",
              "line_number": 26,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "input_messages",
                  "annotation": "List[MessageCreate]"
                },
                {
                  "name": "max_steps",
                  "annotation": "int"
                }
              ],
              "return_annotation": "List[Message]",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute step operation.\\n\\nThis function implements step functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param input_messages: Parameter for input messages specification.\\n:param max_steps: Integer value for max steps specification.\\n:return: List of items matching the specified criteria.\\n:raises RuntimeError: If step operation fails due to invalid parameters or system state."
            },
            {
              "name": "step_stream",
              "line_number": 105,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "input_messages",
                  "annotation": "List[MessageCreate]"
                },
                {
                  "name": "max_steps",
                  "annotation": "int"
                }
              ],
              "return_annotation": "AsyncGenerator[str, None]",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute step stream operation.\\n\\nThis function implements step stream functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param input_messages: Parameter for input messages specification.\\n:param max_steps: Integer value for max steps specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If step stream operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a ephemeralsummaryagent with comprehensive functionality.\n\nThis class provides ephemeralsummaryagent operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized EphemeralSummaryAgent instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\agenticmemory\\playback_queue.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 15,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Initialize an empty message queue with a lock for thread safety, and booleans\nfor tracking if the queue is currently being processed and if media playback has\nbeen cancelled.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize an empty message queue with a lock for thread safety, and booleans\nfor tracking if the queue is currently being processed and if media playback has\nbeen cancelled.\\n\\n. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "size",
          "line_number": 63,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "int",
          "docstring": "Get the number of messages currently in the queue.\n\nReturns:\n    int: The number of messages in the queue.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get the number of messages currently in the queue.\\n\\nReturns:\n    int: The number of messages in the queue. This function implements size functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If size operation fails due to invalid parameters or system state."
        },
        {
          "name": "is_processing_queue",
          "line_number": 86,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Check if the queue is currently being processed.\n\nReturns:\n    bool: True if processing, else False.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if the queue is currently being processed.\\n\\nThis function implements is processing queue functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is processing queue operation fails due to invalid parameters or system state."
        },
        {
          "name": "is_media_cancelled",
          "line_number": 109,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Check if media playback was cancelled due to interrupt.\n\nReturns:\n    bool: True if cancelled, else False.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if media playback was cancelled due to interrupt.\\n\\nReturns:\n    bool: True if cancelled, else False. This function implements is media cancelled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is media cancelled operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "MessageQueue",
          "line_number": 10,
          "docstring": "Handles sequential playback message queue for TTS responses.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 15,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Initialize an empty message queue with a lock for thread safety, and booleans\nfor tracking if the queue is currently being processed and if media playback has\nbeen cancelled.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize an empty message queue with a lock for thread safety, and booleans\nfor tracking if the queue is currently being processed and if media playback has\nbeen cancelled.\\n\\n. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "enqueue",
              "line_number": 26,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "message",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Enqueue a message for sequential playback.\n\nArgs:\n    message (Dict[str, Any]): The message data to enqueue.\n\nReturns:\n    None",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Enqueue a message for sequential playback.\\n\\nArgs:\n    message (Dict[str, Any]): The message data to enqueue. This function implements enqueue functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param message: String value representing message data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If enqueue operation fails due to invalid parameters or system state."
            },
            {
              "name": "dequeue",
              "line_number": 40,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Optional[Dict[str, Any]]",
              "docstring": "Dequeue the next message for playback.\n\nReturns:\n    Optional[Dict[str, Any]]: The dequeued message data, or None if the queue is empty.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Dequeue the next message for playback.\\n\\nReturns:\n    Optional[Dict[str, Any]]: The dequeued message data, or None if the queue is empty. This function implements dequeue functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If dequeue operation fails due to invalid parameters or system state."
            },
            {
              "name": "clear",
              "line_number": 52,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Clear all messages from the queue.\n\nReturns:\n    None",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Clear all messages from the queue.\\n\\nThis function implements clear functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If clear operation fails due to invalid parameters or system state."
            },
            {
              "name": "size",
              "line_number": 63,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "int",
              "docstring": "Get the number of messages currently in the queue.\n\nReturns:\n    int: The number of messages in the queue.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get the number of messages currently in the queue.\\n\\nReturns:\n    int: The number of messages in the queue. This function implements size functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If size operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_processing",
              "line_number": 72,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "is_processing",
                  "annotation": "bool"
                }
              ],
              "return_annotation": "None",
              "docstring": "Set the queue processing status.\n\nArgs:\n    is_processing (bool): True if queue is being processed, else False.\n\nReturns:\n    None",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set the queue processing status.\\n\\nArgs:\n    is_processing (bool): True if queue is being processed, else False. This function implements set processing functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param is_processing: Boolean flag indicating is processing status.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set processing operation fails due to invalid parameters or system state."
            },
            {
              "name": "is_processing_queue",
              "line_number": 86,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if the queue is currently being processed.\n\nReturns:\n    bool: True if processing, else False.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if the queue is currently being processed.\\n\\nThis function implements is processing queue functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is processing queue operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_media_cancelled",
              "line_number": 95,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "cancelled",
                  "annotation": "bool"
                }
              ],
              "return_annotation": "None",
              "docstring": "Set the media cancellation flag.\n\nArgs:\n    cancelled (bool): True if media playback was cancelled.\n\nReturns:\n    None",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set the media cancellation flag.\\n\\nArgs:\n    cancelled (bool): True if media playback was cancelled. This function implements set media cancelled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param cancelled: Boolean flag indicating cancelled status.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set media cancelled operation fails due to invalid parameters or system state."
            },
            {
              "name": "is_media_cancelled",
              "line_number": 109,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if media playback was cancelled due to interrupt.\n\nReturns:\n    bool: True if cancelled, else False.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if media playback was cancelled due to interrupt.\\n\\nReturns:\n    bool: True if cancelled, else False. This function implements is media cancelled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is media cancelled operation fails due to invalid parameters or system state."
            },
            {
              "name": "reset_on_interrupt",
              "line_number": 118,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Reset the queue state when an interrupt is detected.\n\nClears the queue, stops processing, and resets cancellation flag.\n\nReturns:\n    None",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Reset the queue state when an interrupt is detected.\\n\\nClears the queue, stops processing, and resets cancellation flag. This function implements reset on interrupt functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If reset on interrupt operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a messagequeue with comprehensive functionality.\n\nThis class provides messagequeue operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MessageQueue instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\agenticmemory\\types.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 33,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "set",
          "line_number": 37,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "value",
              "annotation": "Any"
            }
          ],
          "return_annotation": "None",
          "docstring": "Insert or update a value.\n\nArgs:\n    key: The dictionary key.\n    value: The value to store.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Insert or update a value.\\n\\nThis function implements set functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set operation fails due to invalid parameters or system state."
        },
        {
          "name": "get",
          "line_number": 47,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "default",
              "annotation": "Any | None"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Retrieve a value.\n\nArgs:\n    key: The dictionary key.\n    default: Value returned if *key* is missing.\n\nReturns:\n    The stored value or *default*.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Retrieve a value.\\n\\nArgs:\n    key: The dictionary key. This function implements get functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get operation fails due to invalid parameters or system state."
        },
        {
          "name": "update",
          "line_number": 61,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "updates",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Bulk-update the store.\n\nArgs:\n    updates: Dictionary containing updates.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Bulk-update the store.\\n\\nThis function implements update functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param updates: String value representing updates data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If update operation fails due to invalid parameters or system state."
        },
        {
          "name": "to_json",
          "line_number": 70,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "str",
          "docstring": "Serialise to JSON.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Serialise to JSON.\\n\\nThis function implements to json functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If to json operation fails due to invalid parameters or system state."
        },
        {
          "name": "from_json",
          "line_number": 76,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "json_str",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Load state from JSON.\n\nArgs:\n    json_str: JSON string produced by :py:meth:`to_json`.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Load state from JSON.\\n\\nThis function implements from json functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param json_str: String value representing json str data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If from json operation fails due to invalid parameters or system state."
        },
        {
          "name": "__repr__",
          "line_number": 85,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   repr   operation.\\n\\nThis function implements   repr   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If   repr   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 97,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "append",
          "line_number": 104,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "role",
              "annotation": "str"
            },
            {
              "name": "content",
              "annotation": "str"
            },
            {
              "name": "agent",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Append a message to *agent*'s timeline.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Append a message to *agent*'s timeline.\\n\\nThis function implements append functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param role: String value representing role data.\\n:param content: String value representing content data.\\n:param agent: String value representing agent data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If append operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_agent",
          "line_number": 114,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent",
              "annotation": "str"
            }
          ],
          "return_annotation": "List[Dict[str, str]]",
          "docstring": "Return the turn list for *agent* (creates if missing).",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return the turn list for *agent* (creates if missing).\\n\\nThis function implements get agent functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent: String value representing agent data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get agent operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_all",
          "line_number": 118,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, List[Dict[str, str]]]",
          "docstring": "Return the full mapping *shallow* copy.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return the full mapping *shallow* copy.\\n\\nThis function implements get all functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get all operation fails due to invalid parameters or system state."
        },
        {
          "name": "clear",
          "line_number": 122,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Reset history \u2013 either all agents or a single thread.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Reset history \u2013 either all agents or a single thread.\\n\\nThis function implements clear functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent: String value representing agent data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If clear operation fails due to invalid parameters or system state."
        },
        {
          "name": "to_json",
          "line_number": 134,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute to json operation.\\n\\nThis function implements to json functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If to json operation fails due to invalid parameters or system state."
        },
        {
          "name": "from_json",
          "line_number": 139,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "json_str",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute from json operation.\\n\\nThis function implements from json functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param json_str: String value representing json str data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If from json operation fails due to invalid parameters or system state."
        },
        {
          "name": "__repr__",
          "line_number": 154,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   repr   operation.\\n\\nThis function implements   repr   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If   repr   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "MemoryError",
          "line_number": 22,
          "docstring": "Raised when persistence or retrieval of memory fails.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a memoryerror with comprehensive functionality.\n\nThis class provides memoryerror operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MemoryError instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CoreMemory",
          "line_number": 26,
          "docstring": "A lightweight, type-safe key-value store.\n\nThis class is intentionally minimal. All mutating operations are logged so\nthat external observers (e.g. dashboards) can replay state transitions.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 33,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "set",
              "line_number": 37,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "None",
              "docstring": "Insert or update a value.\n\nArgs:\n    key: The dictionary key.\n    value: The value to store.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Insert or update a value.\\n\\nThis function implements set functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set operation fails due to invalid parameters or system state."
            },
            {
              "name": "get",
              "line_number": 47,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "default",
                  "annotation": "Any | None"
                }
              ],
              "return_annotation": "Any",
              "docstring": "Retrieve a value.\n\nArgs:\n    key: The dictionary key.\n    default: Value returned if *key* is missing.\n\nReturns:\n    The stored value or *default*.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Retrieve a value.\\n\\nArgs:\n    key: The dictionary key. This function implements get functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get operation fails due to invalid parameters or system state."
            },
            {
              "name": "update",
              "line_number": 61,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "updates",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Bulk-update the store.\n\nArgs:\n    updates: Dictionary containing updates.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Bulk-update the store.\\n\\nThis function implements update functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param updates: String value representing updates data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If update operation fails due to invalid parameters or system state."
            },
            {
              "name": "to_json",
              "line_number": 70,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "str",
              "docstring": "Serialise to JSON.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Serialise to JSON.\\n\\nThis function implements to json functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If to json operation fails due to invalid parameters or system state."
            },
            {
              "name": "from_json",
              "line_number": 76,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "json_str",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Load state from JSON.\n\nArgs:\n    json_str: JSON string produced by :py:meth:`to_json`.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Load state from JSON.\\n\\nThis function implements from json functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param json_str: String value representing json str data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If from json operation fails due to invalid parameters or system state."
            },
            {
              "name": "__repr__",
              "line_number": 85,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   repr   operation.\\n\\nThis function implements   repr   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If   repr   operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a corememory with comprehensive functionality.\n\nThis class provides corememory operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CoreMemory instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "ChatHistory",
          "line_number": 89,
          "docstring": "Ordered, append\u2011only list of chat messages *per agent*.\n\nBackwards compatibility:\n* ``append(role, content)`` \u2013 writes to *default* agent thread.\n* ``get_all()`` \u2013 returns the entire ``dict(agent \u2192 turns)``.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 97,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "append",
              "line_number": 104,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "role",
                  "annotation": "str"
                },
                {
                  "name": "content",
                  "annotation": "str"
                },
                {
                  "name": "agent",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Append a message to *agent*'s timeline.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Append a message to *agent*'s timeline.\\n\\nThis function implements append functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param role: String value representing role data.\\n:param content: String value representing content data.\\n:param agent: String value representing agent data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If append operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_agent",
              "line_number": 114,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "agent",
                  "annotation": "str"
                }
              ],
              "return_annotation": "List[Dict[str, str]]",
              "docstring": "Return the turn list for *agent* (creates if missing).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Return the turn list for *agent* (creates if missing).\\n\\nThis function implements get agent functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent: String value representing agent data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get agent operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_all",
              "line_number": 118,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, List[Dict[str, str]]]",
              "docstring": "Return the full mapping *shallow* copy.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Return the full mapping *shallow* copy.\\n\\nThis function implements get all functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get all operation fails due to invalid parameters or system state."
            },
            {
              "name": "clear",
              "line_number": 122,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "agent",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Reset history \u2013 either all agents or a single thread.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Reset history \u2013 either all agents or a single thread.\\n\\nThis function implements clear functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent: String value representing agent data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If clear operation fails due to invalid parameters or system state."
            },
            {
              "name": "to_json",
              "line_number": 134,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute to json operation.\\n\\nThis function implements to json functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If to json operation fails due to invalid parameters or system state."
            },
            {
              "name": "from_json",
              "line_number": 139,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "json_str",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute from json operation.\\n\\nThis function implements from json functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param json_str: String value representing json str data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If from json operation fails due to invalid parameters or system state."
            },
            {
              "name": "__repr__",
              "line_number": 154,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   repr   operation.\\n\\nThis function implements   repr   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If   repr   operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a chathistory with comprehensive functionality.\n\nThis class provides chathistory operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ChatHistory instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\agenticmemory\\utils.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 10,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "note",
          "line_number": 13,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "stage",
              "annotation": "str"
            },
            {
              "name": "start_t",
              "annotation": "float"
            },
            {
              "name": "end_t",
              "annotation": "float"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute note operation.\\n\\nThis function implements note functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stage: String value representing stage data.\\n:param start_t: Parameter for start t specification.\\n:param end_t: Parameter for end t specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If note operation fails due to invalid parameters or system state."
        },
        {
          "name": "summary",
          "line_number": 18,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, Dict[str, float]]",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute summary operation.\\n\\nThis function implements summary functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If summary operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "LatencyTracker",
          "line_number": 5,
          "docstring": "Tracks latency for different stages in the session.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 10,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "note",
              "line_number": 13,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "stage",
                  "annotation": "str"
                },
                {
                  "name": "start_t",
                  "annotation": "float"
                },
                {
                  "name": "end_t",
                  "annotation": "float"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute note operation.\\n\\nThis function implements note functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stage: String value representing stage data.\\n:param start_t: Parameter for start t specification.\\n:param end_t: Parameter for end t specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If note operation fails due to invalid parameters or system state."
            },
            {
              "name": "summary",
              "line_number": 18,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, Dict[str, float]]",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute summary operation.\\n\\nThis function implements summary functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If summary operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a latencytracker with comprehensive functionality.\n\nThis class provides latencytracker operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized LatencyTracker instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\agenticmemory\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\aoai\\audio_util.py",
      "functions": [
        {
          "name": "audio_to_pcm16_base64",
          "line_number": 23,
          "is_async": false,
          "parameters": [
            {
              "name": "audio_bytes",
              "annotation": "bytes"
            }
          ],
          "return_annotation": "bytes",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute audio to pcm16 base64 operation.\\n\\nThis function implements audio to pcm16 base64 functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param audio_bytes: Parameter for audio bytes specification.\\n:return: Instance of bytes with operation results.\\n:raises RuntimeError: If audio to pcm16 base64 operation fails due to invalid parameters or system state."
        },
        {
          "name": "list_audio_input_devices",
          "line_number": 156,
          "is_async": false,
          "parameters": [],
          "return_annotation": "None",
          "docstring": "Print all available input devices (microphones) for user selection.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Print all available input devices (microphones) for user selection.\\n\\nThis function implements list audio input devices functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If list audio input devices operation fails due to invalid parameters or system state."
        },
        {
          "name": "choose_audio_device",
          "line_number": 169,
          "is_async": false,
          "parameters": [
            {
              "name": "predefined_index",
              "annotation": "int"
            }
          ],
          "return_annotation": "int",
          "docstring": "Return the index of the selected audio input device.\nIf predefined_index is provided and valid, use it.\nOtherwise, prompt user if multiple devices are available.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return the index of the selected audio input device.\\n\\nIf predefined_index is provided and valid, use it. This function implements choose audio device functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param predefined_index: Integer value for predefined index specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If choose audio device operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 40,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "callback",
          "line_number": 53,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "outdata",
              "annotation": null
            },
            {
              "name": "frames",
              "annotation": null
            },
            {
              "name": "time",
              "annotation": null
            },
            {
              "name": "status",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute callback operation.\\n\\nThis function implements callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param outdata: Parameter for outdata specification.\\n:param frames: Parameter for frames specification.\\n:param time: Parameter for time specification.\\n:param status: Parameter for status specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If callback operation fails due to invalid parameters or system state."
        },
        {
          "name": "reset_frame_count",
          "line_number": 75,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute reset frame count operation.\\n\\nThis function implements reset frame count functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If reset frame count operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_frame_count",
          "line_number": 78,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Retrieve frame count from the system.\\n\\nThis function implements get frame count functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If get frame count operation fails due to invalid parameters or system state."
        },
        {
          "name": "add_data",
          "line_number": 81,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "data",
              "annotation": "bytes"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute add data operation.\\n\\nThis function implements add data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param data: Parameter for data specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If add data operation fails due to invalid parameters or system state."
        },
        {
          "name": "start",
          "line_number": 89,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute start operation.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
        },
        {
          "name": "stop",
          "line_number": 93,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute stop operation.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
        },
        {
          "name": "terminate",
          "line_number": 99,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute terminate operation.\\n\\nThis function implements terminate functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If terminate operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AudioPlayerAsync",
          "line_number": 39,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 40,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "callback",
              "line_number": 53,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "outdata",
                  "annotation": null
                },
                {
                  "name": "frames",
                  "annotation": null
                },
                {
                  "name": "time",
                  "annotation": null
                },
                {
                  "name": "status",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute callback operation.\\n\\nThis function implements callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param outdata: Parameter for outdata specification.\\n:param frames: Parameter for frames specification.\\n:param time: Parameter for time specification.\\n:param status: Parameter for status specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If callback operation fails due to invalid parameters or system state."
            },
            {
              "name": "reset_frame_count",
              "line_number": 75,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute reset frame count operation.\\n\\nThis function implements reset frame count functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If reset frame count operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_frame_count",
              "line_number": 78,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Retrieve frame count from the system.\\n\\nThis function implements get frame count functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If get frame count operation fails due to invalid parameters or system state."
            },
            {
              "name": "add_data",
              "line_number": 81,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "data",
                  "annotation": "bytes"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute add data operation.\\n\\nThis function implements add data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param data: Parameter for data specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If add data operation fails due to invalid parameters or system state."
            },
            {
              "name": "start",
              "line_number": 89,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute start operation.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 93,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute stop operation.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            },
            {
              "name": "terminate",
              "line_number": 99,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute terminate operation.\\n\\nThis function implements terminate functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If terminate operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a audioplayerasync with comprehensive functionality.\n\nThis class provides audioplayerasync operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AudioPlayerAsync instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\aoai\\manager.py",
      "functions": [
        {
          "name": "_is_aoai_tracing_enabled",
          "line_number": 61,
          "is_async": false,
          "parameters": [],
          "return_annotation": "bool",
          "docstring": "Check if Azure OpenAI tracing is enabled.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if Azure OpenAI tracing is enabled.\\n\\nThis function implements  is aoai tracing enabled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If  is aoai tracing enabled operation fails due to invalid parameters or system state."
        },
        {
          "name": "_create_aoai_trace_context",
          "line_number": 69,
          "is_async": false,
          "parameters": [
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            },
            {
              "name": "session_id",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Create a TraceContext or NoOpTraceContext based on environment configuration.\n\nArgs:\n    name: The name of the span\n    call_connection_id: Optional call connection ID for correlation\n    session_id: Optional session ID for correlation\n    **kwargs: Additional parameters for TraceContext\n\nReturns:\n    TraceContext or NoOpTraceContext instance",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create a TraceContext or NoOpTraceContext based on environment configuration.\\n\\nArgs:\n    name: The name of the span\n    call_connection_id: Optional call connection ID for correlation\n    session_id: Optional session ID for correlation\n    **kwargs: Additional parameters for TraceContext\n\nReturns:\n    TraceContext or NoOpTraceContext instance. This function implements  create aoai trace context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param name: String value representing name data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  create aoai trace context operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 48,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__enter__",
          "line_number": 51,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   enter   operation.\\n\\nThis function implements   enter   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   enter   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__exit__",
          "line_number": 54,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "exc_type",
              "annotation": null
            },
            {
              "name": "exc_val",
              "annotation": null
            },
            {
              "name": "exc_tb",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   exit   operation.\\n\\nThis function implements   exit   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param exc_type: Parameter for exc type specification.\\n:param exc_val: Parameter for exc val specification.\\n:param exc_tb: Parameter for exc tb specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   exit   operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_attribute",
          "line_number": 57,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": null
            },
            {
              "name": "value",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Configure attribute in the system.\\n\\nThis function implements set attribute functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: Parameter for key specification.\\n:param value: Parameter for value specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If set attribute operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 104,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "api_key",
              "annotation": "Optional[str]"
            },
            {
              "name": "api_version",
              "annotation": "Optional[str]"
            },
            {
              "name": "azure_endpoint",
              "annotation": "Optional[str]"
            },
            {
              "name": "completion_model_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "chat_model_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "embedding_model_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "dalle_model_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "whisper_model_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "enable_tracing",
              "annotation": "Optional[bool]"
            }
          ],
          "return_annotation": null,
          "docstring": "Initializes the Azure OpenAI Manager with necessary configurations.\n\n:param api_key: The Azure OpenAI Key. If not provided, it will be fetched from the environment variable \"AZURE_OPENAI_KEY\".\n:param api_version: The Azure OpenAI API Version. If not provided, it will be fetched from the environment variable \"AZURE_OPENAI_API_VERSION\" or default to \"2023-05-15\".\n:param azure_endpoint: The Azure OpenAI API Endpoint. If not provided, it will be fetched from the environment variable \"AZURE_OPENAI_ENDPOINT\".\n:param completion_model_name: The Completion Model Deployment ID. If not provided, it will be fetched from the environment variable \"AZURE_AOAI_COMPLETION_MODEL_DEPLOYMENT_ID\".\n:param chat_model_name: The Chat Model Name. If not provided, it will be fetched from the environment variable \"AZURE_AOAI_CHAT_MODEL_NAME\".\n:param embedding_model_name: The Embedding Model Deployment ID. If not provided, it will be fetched from the environment variable \"AZURE_AOAI_EMBEDDING_DEPLOYMENT_ID\".\n:param dalle_model_name: The DALL-E Model Deployment ID. If not provided, it will be fetched from the environment variable \"AZURE_AOAI_DALLE_MODEL_DEPLOYMENT_ID\".\n:param call_connection_id: Call connection ID for tracing correlation\n:param session_id: Session ID for tracing correlation\n:param enable_tracing: Whether to enable tracing. If None, checks environment variables",
          "quality_score": 0.6333333333333334,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initializes the Azure OpenAI Manager with necessary configurations.\\n\\n:param api_key: The Azure OpenAI Key. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param api_key: String value representing api key data.\\n:param api_version: String value representing api version data.\\n:param azure_endpoint: String value representing azure endpoint data.\\n:param completion_model_name: String value representing completion model name data.\\n:param chat_model_name: String value representing chat model name data.\\n:param embedding_model_name: String value representing embedding model name data.\\n:param dalle_model_name: String value representing dalle model name data.\\n:param whisper_model_name: String value representing whisper model name data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param enable_tracing: Boolean flag indicating enable tracing status.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "_create_trace_context",
          "line_number": 182,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Create a TraceContext or NoOpTraceContext based on the enable_tracing setting.\nThis provides consistent tracing behavior throughout the Azure OpenAI operations.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create a TraceContext or NoOpTraceContext based on the enable_tracing setting.\\n\\nThis provides consistent tracing behavior throughout the Azure OpenAI operations. This function implements  create trace context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  create trace context operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_azure_openai_client",
          "line_number": 198,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Returns the OpenAI client.\n\nThis method is used to get the OpenAI client that is used to interact with the OpenAI API.\nThe client is initialized with the API key and endpoint when the AzureOpenAIManager object is created.\n\n:return: The OpenAI client.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Returns the OpenAI client.\\n\\nThis method is used to get the OpenAI client that is used to interact with the OpenAI API. This function implements get azure openai client functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If get azure openai client operation fails due to invalid parameters or system state."
        },
        {
          "name": "_validate_api_configurations",
          "line_number": 209,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Validates if all necessary configurations are set.\n\nThis method checks if the API key and Azure endpoint are set in the OpenAI client.\nThese configurations are necessary for making requests to the OpenAI API.\nIf any of these configurations are not set, the method raises a ValueError.\n\n:raises ValueError: If the API key or Azure endpoint is not set.",
          "quality_score": 0.4000000000000001,
          "issues": [
            "Missing parameter documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validates if all necessary configurations are set.\\n\\nThis method checks if the API key and Azure endpoint are set in the OpenAI client. This function implements  validate api configurations functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises ValueError: If  validate api configurations operation fails due to invalid parameters or system state."
        },
        {
          "name": "transcribe_audio_with_whisper",
          "line_number": 304,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "audio_file_path",
              "annotation": "str"
            },
            {
              "name": "language",
              "annotation": "str"
            },
            {
              "name": "prompt",
              "annotation": "str"
            },
            {
              "name": "response_format",
              "annotation": "Literal['json', 'text', 'srt', 'verbose_json', 'vtt']"
            },
            {
              "name": "temperature",
              "annotation": "float"
            },
            {
              "name": "timestamp_granularities",
              "annotation": "List[Literal['word', 'segment']]"
            },
            {
              "name": "extra_headers",
              "annotation": null
            },
            {
              "name": "extra_query",
              "annotation": null
            },
            {
              "name": "extra_body",
              "annotation": null
            },
            {
              "name": "timeout",
              "annotation": "Union[float, None]"
            }
          ],
          "return_annotation": null,
          "docstring": "Transcribes an audio file using the Whisper model and returns the transcription in the specified format.\n\nArgs:\n    audio_file_path: Path to the audio file to transcribe.\n    model: ID of the model to use. Currently, only 'whisper-1' is available.\n    language: The language of the input audio in ISO-639-1 format.\n    prompt: Optional text to guide the model's style or continue a previous audio segment.\n    response_format: Format of the transcript output ('json', 'text', 'srt', 'verbose_json', 'vtt').\n    temperature: Sampling temperature between 0 and 1 for randomness in output.\n    timestamp_granularities: Timestamp granularities ('word', 'segment') for 'verbose_json' format.\n    extra_headers: Additional headers for the request.\n    extra_query: Additional query parameters for the request.\n    extra_body: Additional JSON properties for the request body.\n    timeout: Request timeout in seconds.\n\nReturns:\n    Transcription object with the audio transcription.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Transcribes an audio file using the Whisper model and returns the transcription in the specified format.\\n\\nArgs:\n    audio_file_path: Path to the audio file to transcribe. This function implements transcribe audio with whisper functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_file_path: String value representing audio file path data.\\n:param language: String value representing language data.\\n:param prompt: String value representing prompt data.\\n:param response_format: Parameter for response format specification.\\n:param temperature: Parameter for temperature specification.\\n:param timestamp_granularities: Parameter for timestamp granularities specification.\\n:param extra_headers: Parameter for extra headers specification.\\n:param extra_query: Parameter for extra query specification.\\n:param extra_body: Parameter for extra body specification.\\n:param timeout: Maximum time to wait for operation completion in seconds.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If transcribe audio with whisper operation fails due to invalid parameters or system state."
        },
        {
          "name": "generate_embedding",
          "line_number": 910,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "input_text",
              "annotation": "str"
            },
            {
              "name": "model_name",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Generates an embedding for the given input text using Azure OpenAI's Foundation models.\n\n:param input_text: The text to generate an embedding for.\n:param model_name: The name of the model to use for generating the embedding. If None, the default embedding model is used.\n:param kwargs: Additional parameters for the API request.\n:return: The embedding as a JSON string, or None if an error occurred.\n:raises Exception: If an error occurs while making the API request.",
          "quality_score": 1.0,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Generates an embedding for the given input text using Azure OpenAI's Foundation models.\\n\\n:param input_text: The text to generate an embedding for. This function implements generate embedding functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param input_text: String value representing input text data.\\n:param model_name: String value representing model name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If generate embedding operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "NoOpTraceContext",
          "line_number": 42,
          "docstring": "No-operation context manager that provides the same interface as TraceContext\nbut performs no actual tracing operations.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 48,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "__enter__",
              "line_number": 51,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   enter   operation.\\n\\nThis function implements   enter   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   enter   operation fails due to invalid parameters or system state."
            },
            {
              "name": "__exit__",
              "line_number": 54,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "exc_type",
                  "annotation": null
                },
                {
                  "name": "exc_val",
                  "annotation": null
                },
                {
                  "name": "exc_tb",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   exit   operation.\\n\\nThis function implements   exit   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param exc_type: Parameter for exc type specification.\\n:param exc_val: Parameter for exc val specification.\\n:param exc_tb: Parameter for exc tb specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   exit   operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_attribute",
              "line_number": 57,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": null
                },
                {
                  "name": "value",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Configure attribute in the system.\\n\\nThis function implements set attribute functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: Parameter for key specification.\\n:param value: Parameter for value specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If set attribute operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a nooptracecontext with comprehensive functionality.\n\nThis class provides nooptracecontext operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized NoOpTraceContext instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AzureOpenAIManager",
          "line_number": 96,
          "docstring": "A manager class for interacting with the Azure OpenAI API.\n\nThis class provides methods for generating text completions and chat responses using the Azure OpenAI API.\nIt also provides methods for validating API configurations and getting the OpenAI client.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 104,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "api_key",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "api_version",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "azure_endpoint",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "completion_model_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "chat_model_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "embedding_model_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "dalle_model_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "whisper_model_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "session_id",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "enable_tracing",
                  "annotation": "Optional[bool]"
                }
              ],
              "return_annotation": null,
              "docstring": "Initializes the Azure OpenAI Manager with necessary configurations.\n\n:param api_key: The Azure OpenAI Key. If not provided, it will be fetched from the environment variable \"AZURE_OPENAI_KEY\".\n:param api_version: The Azure OpenAI API Version. If not provided, it will be fetched from the environment variable \"AZURE_OPENAI_API_VERSION\" or default to \"2023-05-15\".\n:param azure_endpoint: The Azure OpenAI API Endpoint. If not provided, it will be fetched from the environment variable \"AZURE_OPENAI_ENDPOINT\".\n:param completion_model_name: The Completion Model Deployment ID. If not provided, it will be fetched from the environment variable \"AZURE_AOAI_COMPLETION_MODEL_DEPLOYMENT_ID\".\n:param chat_model_name: The Chat Model Name. If not provided, it will be fetched from the environment variable \"AZURE_AOAI_CHAT_MODEL_NAME\".\n:param embedding_model_name: The Embedding Model Deployment ID. If not provided, it will be fetched from the environment variable \"AZURE_AOAI_EMBEDDING_DEPLOYMENT_ID\".\n:param dalle_model_name: The DALL-E Model Deployment ID. If not provided, it will be fetched from the environment variable \"AZURE_AOAI_DALLE_MODEL_DEPLOYMENT_ID\".\n:param call_connection_id: Call connection ID for tracing correlation\n:param session_id: Session ID for tracing correlation\n:param enable_tracing: Whether to enable tracing. If None, checks environment variables",
              "quality_score": 0.6333333333333334,
              "issues": [
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initializes the Azure OpenAI Manager with necessary configurations.\\n\\n:param api_key: The Azure OpenAI Key. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param api_key: String value representing api key data.\\n:param api_version: String value representing api version data.\\n:param azure_endpoint: String value representing azure endpoint data.\\n:param completion_model_name: String value representing completion model name data.\\n:param chat_model_name: String value representing chat model name data.\\n:param embedding_model_name: String value representing embedding model name data.\\n:param dalle_model_name: String value representing dalle model name data.\\n:param whisper_model_name: String value representing whisper model name data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param enable_tracing: Boolean flag indicating enable tracing status.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "_create_trace_context",
              "line_number": 182,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "name",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Create a TraceContext or NoOpTraceContext based on the enable_tracing setting.\nThis provides consistent tracing behavior throughout the Azure OpenAI operations.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Create a TraceContext or NoOpTraceContext based on the enable_tracing setting.\\n\\nThis provides consistent tracing behavior throughout the Azure OpenAI operations. This function implements  create trace context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  create trace context operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_azure_openai_client",
              "line_number": 198,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Returns the OpenAI client.\n\nThis method is used to get the OpenAI client that is used to interact with the OpenAI API.\nThe client is initialized with the API key and endpoint when the AzureOpenAIManager object is created.\n\n:return: The OpenAI client.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Returns the OpenAI client.\\n\\nThis method is used to get the OpenAI client that is used to interact with the OpenAI API. This function implements get azure openai client functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If get azure openai client operation fails due to invalid parameters or system state."
            },
            {
              "name": "_validate_api_configurations",
              "line_number": 209,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Validates if all necessary configurations are set.\n\nThis method checks if the API key and Azure endpoint are set in the OpenAI client.\nThese configurations are necessary for making requests to the OpenAI API.\nIf any of these configurations are not set, the method raises a ValueError.\n\n:raises ValueError: If the API key or Azure endpoint is not set.",
              "quality_score": 0.4000000000000001,
              "issues": [
                "Missing parameter documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Validates if all necessary configurations are set.\\n\\nThis method checks if the API key and Azure endpoint are set in the OpenAI client. This function implements  validate api configurations functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises ValueError: If  validate api configurations operation fails due to invalid parameters or system state."
            },
            {
              "name": "async_generate_chat_completion_response",
              "line_number": 230,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "conversation_history",
                  "annotation": "List[Dict[str, str]]"
                },
                {
                  "name": "query",
                  "annotation": "str"
                },
                {
                  "name": "system_message_content",
                  "annotation": "str"
                },
                {
                  "name": "temperature",
                  "annotation": "float"
                },
                {
                  "name": "deployment_name",
                  "annotation": "str"
                },
                {
                  "name": "max_tokens",
                  "annotation": "int"
                },
                {
                  "name": "seed",
                  "annotation": "int"
                },
                {
                  "name": "top_p",
                  "annotation": "float"
                }
              ],
              "return_annotation": null,
              "docstring": "Asynchronously generates a text completion using Azure OpenAI's Foundation models.\nThis method utilizes the chat completion API to respond to queries based on the conversation history.\n\n:param conversation_history: A list of past conversation messages formatted as dictionaries.\n:param query: The user's current query or message.\n:param system_message_content: Instructions for the AI on how to behave during the completion.\n:param temperature: Controls randomness in the generation, lower values mean less random completions.\n:param max_tokens: The maximum number of tokens to generate.\n:param seed: Seed for random number generator for reproducibility.\n:param top_p: Nucleus sampling parameter controlling the size of the probability mass considered for token generation.\n:return: The generated text completion or None if an error occurs.",
              "quality_score": 0.6111111111111113,
              "issues": [
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Asynchronously generates a text completion using Azure OpenAI's Foundation models.\\n\\nThis method utilizes the chat completion API to respond to queries based on the conversation history. This function implements async generate chat completion response functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param conversation_history: String value representing conversation history data.\\n:param query: String value representing query data.\\n:param system_message_content: String value representing system message content data.\\n:param temperature: Parameter for temperature specification.\\n:param deployment_name: String value representing deployment name data.\\n:param max_tokens: Integer value for max tokens specification.\\n:param seed: Integer value for seed specification.\\n:param top_p: Parameter for top p specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If async generate chat completion response operation fails due to invalid parameters or system state."
            },
            {
              "name": "transcribe_audio_with_whisper",
              "line_number": 304,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "audio_file_path",
                  "annotation": "str"
                },
                {
                  "name": "language",
                  "annotation": "str"
                },
                {
                  "name": "prompt",
                  "annotation": "str"
                },
                {
                  "name": "response_format",
                  "annotation": "Literal['json', 'text', 'srt', 'verbose_json', 'vtt']"
                },
                {
                  "name": "temperature",
                  "annotation": "float"
                },
                {
                  "name": "timestamp_granularities",
                  "annotation": "List[Literal['word', 'segment']]"
                },
                {
                  "name": "extra_headers",
                  "annotation": null
                },
                {
                  "name": "extra_query",
                  "annotation": null
                },
                {
                  "name": "extra_body",
                  "annotation": null
                },
                {
                  "name": "timeout",
                  "annotation": "Union[float, None]"
                }
              ],
              "return_annotation": null,
              "docstring": "Transcribes an audio file using the Whisper model and returns the transcription in the specified format.\n\nArgs:\n    audio_file_path: Path to the audio file to transcribe.\n    model: ID of the model to use. Currently, only 'whisper-1' is available.\n    language: The language of the input audio in ISO-639-1 format.\n    prompt: Optional text to guide the model's style or continue a previous audio segment.\n    response_format: Format of the transcript output ('json', 'text', 'srt', 'verbose_json', 'vtt').\n    temperature: Sampling temperature between 0 and 1 for randomness in output.\n    timestamp_granularities: Timestamp granularities ('word', 'segment') for 'verbose_json' format.\n    extra_headers: Additional headers for the request.\n    extra_query: Additional query parameters for the request.\n    extra_body: Additional JSON properties for the request body.\n    timeout: Request timeout in seconds.\n\nReturns:\n    Transcription object with the audio transcription.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Transcribes an audio file using the Whisper model and returns the transcription in the specified format.\\n\\nArgs:\n    audio_file_path: Path to the audio file to transcribe. This function implements transcribe audio with whisper functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_file_path: String value representing audio file path data.\\n:param language: String value representing language data.\\n:param prompt: String value representing prompt data.\\n:param response_format: Parameter for response format specification.\\n:param temperature: Parameter for temperature specification.\\n:param timestamp_granularities: Parameter for timestamp granularities specification.\\n:param extra_headers: Parameter for extra headers specification.\\n:param extra_query: Parameter for extra query specification.\\n:param extra_body: Parameter for extra body specification.\\n:param timeout: Maximum time to wait for operation completion in seconds.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If transcribe audio with whisper operation fails due to invalid parameters or system state."
            },
            {
              "name": "generate_chat_response_o1",
              "line_number": 378,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "query",
                  "annotation": "str"
                },
                {
                  "name": "conversation_history",
                  "annotation": "List[Dict[str, str]]"
                },
                {
                  "name": "max_completion_tokens",
                  "annotation": "int"
                },
                {
                  "name": "stream",
                  "annotation": "bool"
                },
                {
                  "name": "model",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Optional[Union[str, Dict[str, Any]]]",
              "docstring": "Generates a text response using the o1-preview or o1-mini models, considering the specific requirements and limitations of these models.\n\n:param query: The latest query to generate a response for.\n:param conversation_history: A list of message dictionaries representing the conversation history.\n:param max_completion_tokens: Maximum number of tokens to generate. Defaults to 5000.\n:param stream: Whether to stream the response. Defaults to False.\n:param model: The model to use for generating the response. Defaults to \"o1-preview\".\n:return: The generated text response as a string if response_format is \"text\", or a dictionary containing the response and conversation history if response_format is \"json_object\". Returns None if an error occurs.",
              "quality_score": 0.8333333333333334,
              "issues": [
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generates a text response using the o1-preview or o1-mini models, considering the specific requirements and limitations of these models.\\n\\n:param query: The latest query to generate a response for. This function implements generate chat response o1 functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:param conversation_history: String value representing conversation history data.\\n:param max_completion_tokens: Integer value for max completion tokens specification.\\n:param stream: Boolean flag indicating stream status.\\n:param model: String value representing model data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If generate chat response o1 operation fails due to invalid parameters or system state."
            },
            {
              "name": "generate_chat_response_no_history",
              "line_number": 469,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "query",
                  "annotation": "str"
                },
                {
                  "name": "system_message_content",
                  "annotation": "str"
                },
                {
                  "name": "temperature",
                  "annotation": "float"
                },
                {
                  "name": "max_tokens",
                  "annotation": "int"
                },
                {
                  "name": "seed",
                  "annotation": "int"
                },
                {
                  "name": "top_p",
                  "annotation": "float"
                },
                {
                  "name": "stream",
                  "annotation": "bool"
                },
                {
                  "name": "tools",
                  "annotation": "Optional[List[Dict[str, Any]]]"
                },
                {
                  "name": "tool_choice",
                  "annotation": "Optional[Union[str, Dict[str, Any]]]"
                },
                {
                  "name": "response_format",
                  "annotation": "Union[str, Dict[str, Any]]"
                },
                {
                  "name": "image_paths",
                  "annotation": "Optional[List[str]]"
                },
                {
                  "name": "image_bytes",
                  "annotation": "Optional[List[bytes]]"
                }
              ],
              "return_annotation": "Optional[Union[str, Dict[str, Any]]]",
              "docstring": "Generates a chat response using Azure OpenAI without retaining any conversation history.\n\n:param query: The latest user query.\n:param system_message_content: The system message to prime the model.\n:param temperature: Controls randomness in the output.\n:param max_tokens: Maximum number of tokens to generate.\n:param seed: Random seed for deterministic output.\n:param top_p: The cumulative probability cutoff for token selection.\n:param stream: Whether to stream the response.\n:param tools: A list of tools for the model to use.\n:param tool_choice: Specifies which (if any) tool to call.\n:param response_format: Specifies the format of the response.\n:param image_paths: List of paths to images to include.\n:param image_bytes: List of bytes of images to include.\n:return: The generated response in the requested format.",
              "quality_score": 0.8692307692307694,
              "issues": [
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generates a chat response using Azure OpenAI without retaining any conversation history.\\n\\n:param query: The latest user query. This function implements generate chat response no history functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:param system_message_content: String value representing system message content data.\\n:param temperature: Parameter for temperature specification.\\n:param max_tokens: Integer value for max tokens specification.\\n:param seed: Integer value for seed specification.\\n:param top_p: Parameter for top p specification.\\n:param stream: Boolean flag indicating stream status.\\n:param tools: String value representing tools data.\\n:param tool_choice: String value representing tool choice data.\\n:param response_format: String value representing response format data.\\n:param image_paths: String value representing image paths data.\\n:param image_bytes: Parameter for image bytes specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If generate chat response no history operation fails due to invalid parameters or system state."
            },
            {
              "name": "generate_chat_response",
              "line_number": 677,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "query",
                  "annotation": "str"
                },
                {
                  "name": "conversation_history",
                  "annotation": "List[Dict[str, str]]"
                },
                {
                  "name": "image_paths",
                  "annotation": "List[str]"
                },
                {
                  "name": "image_bytes",
                  "annotation": "List[bytes]"
                },
                {
                  "name": "system_message_content",
                  "annotation": "str"
                },
                {
                  "name": "temperature",
                  "annotation": "float"
                },
                {
                  "name": "max_tokens",
                  "annotation": "int"
                },
                {
                  "name": "seed",
                  "annotation": "int"
                },
                {
                  "name": "top_p",
                  "annotation": "float"
                },
                {
                  "name": "stream",
                  "annotation": "bool"
                },
                {
                  "name": "tools",
                  "annotation": "List[Dict[str, Any]]"
                },
                {
                  "name": "tool_choice",
                  "annotation": "Union[str, Dict[str, Any]]"
                },
                {
                  "name": "response_format",
                  "annotation": "Union[str, Dict[str, Any]]"
                }
              ],
              "return_annotation": "Optional[Union[str, Dict[str, Any]]]",
              "docstring": "Generates a text response considering the conversation history.\n\n:param query: The latest query to generate a response for.\n:param conversation_history: A list of message dictionaries representing the conversation history.\n:param image_paths: A list of paths to images to include in the query.\n:param image_bytes: A list of bytes of images to include in the query.\n:param system_message_content: The content of the system message. Defaults to a generic assistant message.\n:param temperature: Controls randomness in the output. Defaults to 0.7.\n:param max_tokens: Maximum number of tokens to generate. Defaults to 150.\n:param seed: Random seed for deterministic output. Defaults to 42.\n:param top_p: The cumulative probability cutoff for token selection. Defaults to 1.0.\n:param stream: Whether to stream the response. Defaults to False.\n:param tools: A list of tools the model can use.\n:param tool_choice: Controls which (if any) tool is called by the model. Can be \"none\", \"auto\", \"required\", or specify a particular tool.\n:param response_format: Specifies the format of the response. Can be:\n    - A string: \"text\" or \"json_object\".\n    - A dictionary specifying a custom response format, including a JSON schema when needed.\n:return: The generated text response as a string if response_format is \"text\", or a dictionary containing the response and conversation history if response_format is \"json_object\". Returns None if an error occurs.",
              "quality_score": 0.8714285714285716,
              "issues": [
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generates a text response considering the conversation history.\\n\\n:param query: The latest query to generate a response for. This function implements generate chat response functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:param conversation_history: String value representing conversation history data.\\n:param image_paths: String value representing image paths data.\\n:param image_bytes: Parameter for image bytes specification.\\n:param system_message_content: String value representing system message content data.\\n:param temperature: Parameter for temperature specification.\\n:param max_tokens: Integer value for max tokens specification.\\n:param seed: Integer value for seed specification.\\n:param top_p: Parameter for top p specification.\\n:param stream: Boolean flag indicating stream status.\\n:param tools: String value representing tools data.\\n:param tool_choice: String value representing tool choice data.\\n:param response_format: String value representing response format data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If generate chat response operation fails due to invalid parameters or system state."
            },
            {
              "name": "generate_embedding",
              "line_number": 910,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "input_text",
                  "annotation": "str"
                },
                {
                  "name": "model_name",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Generates an embedding for the given input text using Azure OpenAI's Foundation models.\n\n:param input_text: The text to generate an embedding for.\n:param model_name: The name of the model to use for generating the embedding. If None, the default embedding model is used.\n:param kwargs: Additional parameters for the API request.\n:return: The embedding as a JSON string, or None if an error occurred.\n:raises Exception: If an error occurs while making the API request.",
              "quality_score": 1.0,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generates an embedding for the given input text using Azure OpenAI's Foundation models.\\n\\n:param input_text: The text to generate an embedding for. This function implements generate embedding functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param input_text: String value representing input text data.\\n:param model_name: String value representing model name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If generate embedding operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a azureopenaimanager with comprehensive functionality.\n\nThis class provides azureopenaimanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AzureOpenAIManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\aoai\\manager_transcribe.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 24,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "rate",
              "annotation": "int"
            },
            {
              "name": "channels",
              "annotation": "int"
            },
            {
              "name": "format_",
              "annotation": "int"
            },
            {
              "name": "chunk",
              "annotation": "int"
            },
            {
              "name": "device_index",
              "annotation": "Optional[int]"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param rate: Integer value for rate specification.\\n:param channels: Integer value for channels specification.\\n:param format_: Integer value for format  specification.\\n:param chunk: Integer value for chunk specification.\\n:param device_index: Integer value for device index specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "start",
          "line_number": 46,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Start the audio stream and begin capturing to the queue.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Start the audio stream and begin capturing to the queue.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
        },
        {
          "name": "stop",
          "line_number": 68,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Stop and close the stream, release audio resources.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Stop and close the stream, release audio resources.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
        },
        {
          "name": "save_wav",
          "line_number": 78,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "filename",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Save the recorded audio to a .wav file.\nEnsures there is audio data before saving.\nCreates the output directory if it does not exist.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Save the recorded audio to a.\\n\\nwav file. This function implements save wav functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param filename: String value representing filename data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If save wav operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 105,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "url",
              "annotation": "str"
            },
            {
              "name": "headers",
              "annotation": "dict"
            },
            {
              "name": "session_config",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "on_delta",
              "annotation": "Optional[Callable[[str], None]]"
            },
            {
              "name": "on_transcript",
              "annotation": "Optional[Callable[[str], None]]"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param url: String value representing url data.\\n:param headers: Parameter for headers specification.\\n:param session_config: Configuration object for session settings.\\n:param on_delta: String value representing on delta data.\\n:param on_transcript: String value representing on transcript data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 226,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "url",
              "annotation": "str"
            },
            {
              "name": "headers",
              "annotation": "dict"
            },
            {
              "name": "rate",
              "annotation": "int"
            },
            {
              "name": "channels",
              "annotation": "int"
            },
            {
              "name": "format_",
              "annotation": "int"
            },
            {
              "name": "chunk",
              "annotation": "int"
            },
            {
              "name": "device_index",
              "annotation": "Optional[int]"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param url: String value representing url data.\\n:param headers: Parameter for headers specification.\\n:param rate: Integer value for rate specification.\\n:param channels: Integer value for channels specification.\\n:param format_: Integer value for format  specification.\\n:param chunk: Integer value for chunk specification.\\n:param device_index: Integer value for device index specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "callback",
          "line_number": 51,
          "is_async": false,
          "parameters": [
            {
              "name": "in_data",
              "annotation": null
            },
            {
              "name": "frame_count",
              "annotation": null
            },
            {
              "name": "time_info",
              "annotation": null
            },
            {
              "name": "status",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute callback operation.\\n\\nThis function implements callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param in_data: Parameter for in data specification.\\n:param frame_count: Parameter for frame count specification.\\n:param time_info: Parameter for time info specification.\\n:param status: Parameter for status specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If callback operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AudioRecorder",
          "line_number": 18,
          "docstring": "Async audio recorder using PyAudio.\nAllows independent recording (to memory and .wav) and streaming (for STT).",
          "methods": [
            {
              "name": "__init__",
              "line_number": 24,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "rate",
                  "annotation": "int"
                },
                {
                  "name": "channels",
                  "annotation": "int"
                },
                {
                  "name": "format_",
                  "annotation": "int"
                },
                {
                  "name": "chunk",
                  "annotation": "int"
                },
                {
                  "name": "device_index",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param rate: Integer value for rate specification.\\n:param channels: Integer value for channels specification.\\n:param format_: Integer value for format  specification.\\n:param chunk: Integer value for chunk specification.\\n:param device_index: Integer value for device index specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "start",
              "line_number": 46,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Start the audio stream and begin capturing to the queue.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Start the audio stream and begin capturing to the queue.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 68,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Stop and close the stream, release audio resources.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Stop and close the stream, release audio resources.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            },
            {
              "name": "save_wav",
              "line_number": 78,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "filename",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Save the recorded audio to a .wav file.\nEnsures there is audio data before saving.\nCreates the output directory if it does not exist.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Save the recorded audio to a.\\n\\nwav file. This function implements save wav functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param filename: String value representing filename data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If save wav operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a audiorecorder with comprehensive functionality.\n\nThis class provides audiorecorder operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AudioRecorder instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "TranscriptionClient",
          "line_number": 99,
          "docstring": "Handles async websocket transcription session to Azure OpenAI STT.\nCan be used independently: just supply an async generator of audio chunks.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 105,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "url",
                  "annotation": "str"
                },
                {
                  "name": "headers",
                  "annotation": "dict"
                },
                {
                  "name": "session_config",
                  "annotation": "Dict[str, Any]"
                },
                {
                  "name": "on_delta",
                  "annotation": "Optional[Callable[[str], None]]"
                },
                {
                  "name": "on_transcript",
                  "annotation": "Optional[Callable[[str], None]]"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param url: String value representing url data.\\n:param headers: Parameter for headers specification.\\n:param session_config: Configuration object for session settings.\\n:param on_delta: String value representing on delta data.\\n:param on_transcript: String value representing on transcript data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "__aenter__",
              "line_number": 123,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   aenter   operation.\\n\\nThis function implements   aenter   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   aenter   operation fails due to invalid parameters or system state."
            },
            {
              "name": "__aexit__",
              "line_number": 133,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "exc_type",
                  "annotation": null
                },
                {
                  "name": "exc",
                  "annotation": null
                },
                {
                  "name": "tb",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   aexit   operation.\\n\\nThis function implements   aexit   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param exc_type: Parameter for exc type specification.\\n:param exc: Parameter for exc specification.\\n:param tb: Parameter for tb specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   aexit   operation fails due to invalid parameters or system state."
            },
            {
              "name": "send_json",
              "line_number": 142,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "data",
                  "annotation": "dict"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute send json operation.\\n\\nThis function implements send json functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param data: Parameter for data specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If send json operation fails due to invalid parameters or system state."
            },
            {
              "name": "send_audio_chunk",
              "line_number": 146,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "audio_data",
                  "annotation": "bytes"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute send audio chunk operation.\\n\\nThis function implements send audio chunk functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_data: Parameter for audio data specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If send audio chunk operation fails due to invalid parameters or system state."
            },
            {
              "name": "start_session",
              "line_number": 152,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "rate",
                  "annotation": "int"
                },
                {
                  "name": "channels",
                  "annotation": "int"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute start session operation.\\n\\nThis function implements start session functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param rate: Integer value for rate specification.\\n:param channels: Integer value for channels specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start session operation fails due to invalid parameters or system state."
            },
            {
              "name": "receive_loop",
              "line_number": 165,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute receive loop operation.\\n\\nThis function implements receive loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If receive loop operation fails due to invalid parameters or system state."
            },
            {
              "name": "run",
              "line_number": 196,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "audio_chunk_iter",
                  "annotation": "asyncio.Queue"
                },
                {
                  "name": "rate",
                  "annotation": "int"
                },
                {
                  "name": "channels",
                  "annotation": "int"
                }
              ],
              "return_annotation": null,
              "docstring": "Main loop: configure session, send audio from queue, receive results.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Main loop: configure session, send audio from queue, receive results.\\n\\nThis function implements run functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_chunk_iter: Parameter for audio chunk iter specification.\\n:param rate: Integer value for rate specification.\\n:param channels: Integer value for channels specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If run operation fails due to invalid parameters or system state."
            },
            {
              "name": "_send_audio_loop",
              "line_number": 209,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "audio_queue",
                  "annotation": "asyncio.Queue"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  send audio loop operation.\\n\\nThis function implements  send audio loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_queue: Parameter for audio queue specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  send audio loop operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a transcriptionclient with comprehensive functionality.\n\nThis class provides transcriptionclient operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TranscriptionClient instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AudioTranscriber",
          "line_number": 220,
          "docstring": "High-level orchestrator for audio recording and real-time transcription.\nUse as: record only, transcribe only, or chain both (record+transcribe).",
          "methods": [
            {
              "name": "__init__",
              "line_number": 226,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "url",
                  "annotation": "str"
                },
                {
                  "name": "headers",
                  "annotation": "dict"
                },
                {
                  "name": "rate",
                  "annotation": "int"
                },
                {
                  "name": "channels",
                  "annotation": "int"
                },
                {
                  "name": "format_",
                  "annotation": "int"
                },
                {
                  "name": "chunk",
                  "annotation": "int"
                },
                {
                  "name": "device_index",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param url: String value representing url data.\\n:param headers: Parameter for headers specification.\\n:param rate: Integer value for rate specification.\\n:param channels: Integer value for channels specification.\\n:param format_: Integer value for format  specification.\\n:param chunk: Integer value for chunk specification.\\n:param device_index: Integer value for device index specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "record",
              "line_number": 244,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "duration",
                  "annotation": "Optional[float]"
                },
                {
                  "name": "output_file",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "AudioRecorder",
              "docstring": "Record audio from mic. Returns AudioRecorder.\nOptionally, specify duration (seconds). Use output_file to auto-save.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Record audio from mic.\\n\\nReturns AudioRecorder. This function implements record functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param duration: Parameter for duration specification.\\n:param output_file: String value representing output file data.\\n:return: Instance of AudioRecorder with operation results.\\n:raises RuntimeError: If record operation fails due to invalid parameters or system state."
            },
            {
              "name": "transcribe",
              "line_number": 276,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "audio_queue",
                  "annotation": "Optional[asyncio.Queue]"
                },
                {
                  "name": "model",
                  "annotation": "str"
                },
                {
                  "name": "prompt",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "language",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "noise_reduction",
                  "annotation": "str"
                },
                {
                  "name": "vad_type",
                  "annotation": "str"
                },
                {
                  "name": "vad_config",
                  "annotation": "Optional[dict]"
                },
                {
                  "name": "on_delta",
                  "annotation": "Optional[Callable[[str], None]]"
                },
                {
                  "name": "on_transcript",
                  "annotation": "Optional[Callable[[str], None]]"
                },
                {
                  "name": "output_wav_file",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": null,
              "docstring": "Run a transcription session with full model/config control.\n\nIf audio_queue is None, creates and uses a live AudioRecorder.\n\nArgs:\n    audio_queue: Asyncio queue containing audio chunks to transcribe.\n    model: Transcription model to use.\n    prompt: Custom prompt for the model.\n    language: Language hint for recognition.\n    noise_reduction: Type of noise reduction.\n    vad_type: Voice activity detection type.\n    vad_config: Config dict for VAD.\n    on_delta: Callback for interim results.\n    on_transcript: Callback for final results.\n    output_wav_file: Filename for saving raw microphone audio (if recording).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Run a transcription session with full model/config control.\\n\\nIf audio_queue is None, creates and uses a live AudioRecorder. This function implements transcribe functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_queue: Parameter for audio queue specification.\\n:param model: String value representing model data.\\n:param prompt: String value representing prompt data.\\n:param language: String value representing language data.\\n:param noise_reduction: String value representing noise reduction data.\\n:param vad_type: String value representing vad type data.\\n:param vad_config: Configuration object for vad settings.\\n:param on_delta: String value representing on delta data.\\n:param on_transcript: String value representing on transcript data.\\n:param output_wav_file: String value representing output wav file data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If transcribe operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a audiotranscriber with comprehensive functionality.\n\nThis class provides audiotranscriber operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AudioTranscriber instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\aoai\\push_to_talk.py",
      "functions": [
        {
          "name": "render",
          "line_number": 29,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute render operation.\\n\\nThis function implements render functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If render operation fails due to invalid parameters or system state."
        },
        {
          "name": "render",
          "line_number": 37,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute render operation.\\n\\nThis function implements render functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If render operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 63,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "compose",
          "line_number": 79,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "ComposeResult",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute compose operation.\\n\\nThis function implements compose functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of ComposeResult with operation results.\\n:raises RuntimeError: If compose operation fails due to invalid parameters or system state."
        },
        {
          "name": "_refresh_log",
          "line_number": 171,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "pane",
              "annotation": "RichLog"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  refresh log operation.\\n\\nThis function implements  refresh log functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param pane: Parameter for pane specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  refresh log operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "SessionDisplay",
          "line_number": 25,
          "docstring": null,
          "methods": [
            {
              "name": "render",
              "line_number": 29,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute render operation.\\n\\nThis function implements render functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If render operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a sessiondisplay with comprehensive functionality.\n\nThis class provides sessiondisplay operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized SessionDisplay instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AudioStatusIndicator",
          "line_number": 33,
          "docstring": null,
          "methods": [
            {
              "name": "render",
              "line_number": 37,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute render operation.\\n\\nThis function implements render functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If render operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a audiostatusindicator with comprehensive functionality.\n\nThis class provides audiostatusindicator operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AudioStatusIndicator instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "RealtimeApp",
          "line_number": 45,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 63,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "compose",
              "line_number": 79,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "ComposeResult",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute compose operation.\\n\\nThis function implements compose functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of ComposeResult with operation results.\\n:raises RuntimeError: If compose operation fails due to invalid parameters or system state."
            },
            {
              "name": "on_mount",
              "line_number": 85,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute on mount operation.\\n\\nThis function implements on mount functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If on mount operation fails due to invalid parameters or system state."
            },
            {
              "name": "handle_realtime_connection",
              "line_number": 89,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute handle realtime connection operation.\\n\\nThis function implements handle realtime connection functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If handle realtime connection operation fails due to invalid parameters or system state."
            },
            {
              "name": "_refresh_log",
              "line_number": 171,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "pane",
                  "annotation": "RichLog"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  refresh log operation.\\n\\nThis function implements  refresh log functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param pane: Parameter for pane specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  refresh log operation fails due to invalid parameters or system state."
            },
            {
              "name": "_get_connection",
              "line_number": 179,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "AsyncRealtimeConnection",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  get connection operation.\\n\\nThis function implements  get connection functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of AsyncRealtimeConnection with operation results.\\n:raises ConnectionError: If  get connection operation fails due to invalid parameters or system state."
            },
            {
              "name": "send_mic_audio",
              "line_number": 184,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute send mic audio operation.\\n\\nThis function implements send mic audio functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If send mic audio operation fails due to invalid parameters or system state."
            },
            {
              "name": "on_key",
              "line_number": 219,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "event",
                  "annotation": "events.Key"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute on key operation.\\n\\nThis function implements on key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param event: Parameter for event specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If on key operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a realtimeapp with comprehensive functionality.\n\nThis class provides realtimeapp operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized RealtimeApp instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\aoai\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\blob\\blob_helper.py",
      "functions": [
        {
          "name": "get_blob_helper",
          "line_number": 845,
          "is_async": false,
          "parameters": [],
          "return_annotation": "AzureBlobHelper",
          "docstring": "Get global blob helper instance.\n\nReturns:\n    AzureBlobHelper instance",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get global blob helper instance.\\n\\nThis function implements get blob helper functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Instance of AzureBlobHelper with operation results.\\n:raises RuntimeError: If get blob helper operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 92,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "account_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "container_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "connection_string",
              "annotation": "Optional[str]"
            },
            {
              "name": "account_key",
              "annotation": "Optional[str]"
            },
            {
              "name": "max_retry_attempts",
              "annotation": "int"
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize Azure Blob Helper with secure authentication.\n\nArgs:\n    account_name: Storage account name (from env if not provided)\n    container_name: Default container name (from env if not provided)\n    connection_string: Connection string (fallback auth)\n    account_key: Account key (fallback auth)\n    max_retry_attempts: Maximum retry attempts for failed operations",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize Azure Blob Helper with secure authentication.\\n\\nArgs:\n    account_name: Storage account name (from env if not provided)\n    container_name: Default container name (from env if not provided)\n    connection_string: Connection string (fallback auth)\n    account_key: Account key (fallback auth)\n    max_retry_attempts: Maximum retry attempts for failed operations. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param account_name: String value representing account name data.\\n:param container_name: String value representing container name data.\\n:param connection_string: String value representing connection string data.\\n:param account_key: String value representing account key data.\\n:param max_retry_attempts: Integer value for max retry attempts specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "_setup_authentication",
          "line_number": 133,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Optional[DefaultAzureCredential]",
          "docstring": "Set up authentication with preference for Managed Identity.\n\nReturns:\n    DefaultAzureCredential if available, None for connection string auth",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set up authentication with preference for Managed Identity.\\n\\nReturns:\n    DefaultAzureCredential if available, None for connection string auth. This function implements  setup authentication functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Value if operation succeeds, None if no data available.\\n:raises AuthenticationError: If  setup authentication operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "BlobOperationType",
          "line_number": 54,
          "docstring": "Enumeration of blob operation types for monitoring.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a bloboperationtype with comprehensive functionality.\n\nThis class provides bloboperationtype operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized BlobOperationType instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "BlobOperationResult",
          "line_number": 66,
          "docstring": "Structured result for blob operations.",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a bloboperationresult with comprehensive functionality.\n\nThis class provides bloboperationresult operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized BlobOperationResult instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "AzureBlobHelper",
          "line_number": 80,
          "docstring": "Secure Azure Blob Storage helper with FastAPI best practices.\n\nFeatures:\n- Managed Identity authentication with secure fallbacks\n- Comprehensive error handling and retry logic\n- Connection pooling and resource management\n- Structured logging and monitoring\n- Input validation and security measures",
          "methods": [
            {
              "name": "__init__",
              "line_number": 92,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "account_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "container_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "connection_string",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "account_key",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "max_retry_attempts",
                  "annotation": "int"
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize Azure Blob Helper with secure authentication.\n\nArgs:\n    account_name: Storage account name (from env if not provided)\n    container_name: Default container name (from env if not provided)\n    connection_string: Connection string (fallback auth)\n    account_key: Account key (fallback auth)\n    max_retry_attempts: Maximum retry attempts for failed operations",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize Azure Blob Helper with secure authentication.\\n\\nArgs:\n    account_name: Storage account name (from env if not provided)\n    container_name: Default container name (from env if not provided)\n    connection_string: Connection string (fallback auth)\n    account_key: Account key (fallback auth)\n    max_retry_attempts: Maximum retry attempts for failed operations. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param account_name: String value representing account name data.\\n:param container_name: String value representing container name data.\\n:param connection_string: String value representing connection string data.\\n:param account_key: String value representing account key data.\\n:param max_retry_attempts: Integer value for max retry attempts specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "_setup_authentication",
              "line_number": 133,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Optional[DefaultAzureCredential]",
              "docstring": "Set up authentication with preference for Managed Identity.\n\nReturns:\n    DefaultAzureCredential if available, None for connection string auth",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set up authentication with preference for Managed Identity.\\n\\nReturns:\n    DefaultAzureCredential if available, None for connection string auth. This function implements  setup authentication functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Value if operation succeeds, None if no data available.\\n:raises AuthenticationError: If  setup authentication operation fails due to invalid parameters or system state."
            },
            {
              "name": "_get_blob_service",
              "line_number": 157,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "BlobServiceClient",
              "docstring": "Get or create BlobServiceClient with connection pooling.\n\nReturns:\n    BlobServiceClient instance",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get or create BlobServiceClient with connection pooling.\\n\\nThis function implements  get blob service functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of BlobServiceClient with operation results.\\n:raises RuntimeError: If  get blob service operation fails due to invalid parameters or system state."
            },
            {
              "name": "generate_container_sas_url",
              "line_number": 188,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "container_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "expiry_hours",
                  "annotation": "int"
                }
              ],
              "return_annotation": "BlobOperationResult",
              "docstring": "Generate a container URL with SAS token for Azure Blob Storage access.\nSupports both account key and DefaultAzureCredential (user delegation SAS).\n\nArgs:\n    container_name: Container name (uses default if not provided)\n    expiry_hours: Hours until SAS token expires (default: 24)\n\nReturns:\n    BlobOperationResult with SAS URL or error details",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Generate a container URL with SAS token for Azure Blob Storage access.\\n\\nSupports both account key and DefaultAzureCredential (user delegation SAS). This function implements generate container sas url functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param container_name: String value representing container name data.\\n:param expiry_hours: Integer value for expiry hours specification.\\n:return: Instance of BlobOperationResult with operation results.\\n:raises RuntimeError: If generate container sas url operation fails due to invalid parameters or system state."
            },
            {
              "name": "verify_container_access",
              "line_number": 296,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "container_url",
                  "annotation": "str"
                }
              ],
              "return_annotation": "BlobOperationResult",
              "docstring": "Verify that the container URL is accessible with required permissions.\n\nArgs:\n    container_url: Full container URL with SAS token\n\nReturns:\n    BlobOperationResult indicating access verification status",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Verify that the container URL is accessible with required permissions.\\n\\nArgs:\n    container_url: Full container URL with SAS token\n\nReturns:\n    BlobOperationResult indicating access verification status. This function implements verify container access functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param container_url: URL endpoint for container service.\\n:return: Instance of BlobOperationResult with operation results.\\n:raises RuntimeError: If verify container access operation fails due to invalid parameters or system state."
            },
            {
              "name": "save_transcript_to_blob",
              "line_number": 361,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "call_id",
                  "annotation": "str"
                },
                {
                  "name": "transcript",
                  "annotation": "str"
                },
                {
                  "name": "container_name",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "BlobOperationResult",
              "docstring": "Save transcript to blob storage with organized directory structure.\n\nArgs:\n    call_id: Unique call identifier\n    transcript: Transcript content as JSON string\n    container_name: Container name (uses default if not provided)\n\nReturns:\n    BlobOperationResult indicating operation status",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Save transcript to blob storage with organized directory structure.\\n\\nArgs:\n    call_id: Unique call identifier\n    transcript: Transcript content as JSON string\n    container_name: Container name (uses default if not provided)\n\nReturns:\n    BlobOperationResult indicating operation status. This function implements save transcript to blob functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_id: Azure Communication Services call connection identifier.\\n:param transcript: String value representing transcript data.\\n:param container_name: String value representing container name data.\\n:return: Instance of BlobOperationResult with operation results.\\n:raises RuntimeError: If save transcript to blob operation fails due to invalid parameters or system state."
            },
            {
              "name": "save_wav_to_blob",
              "line_number": 437,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "call_id",
                  "annotation": "str"
                },
                {
                  "name": "wav_file_path",
                  "annotation": "str"
                },
                {
                  "name": "container_name",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "BlobOperationResult",
              "docstring": "Save WAV file to blob storage from local file path.\n\nArgs:\n    call_id: Unique call identifier\n    wav_file_path: Path to local WAV file\n    container_name: Container name (uses default if not provided)\n\nReturns:\n    BlobOperationResult indicating operation status",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Save WAV file to blob storage from local file path.\\n\\nArgs:\n    call_id: Unique call identifier\n    wav_file_path: Path to local WAV file\n    container_name: Container name (uses default if not provided)\n\nReturns:\n    BlobOperationResult indicating operation status. This function implements save wav to blob functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_id: Azure Communication Services call connection identifier.\\n:param wav_file_path: String value representing wav file path data.\\n:param container_name: String value representing container name data.\\n:return: Instance of BlobOperationResult with operation results.\\n:raises RuntimeError: If save wav to blob operation fails due to invalid parameters or system state."
            },
            {
              "name": "stream_wav_to_blob",
              "line_number": 522,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "call_id",
                  "annotation": "str"
                },
                {
                  "name": "wav_stream",
                  "annotation": null
                },
                {
                  "name": "container_name",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "BlobOperationResult",
              "docstring": "Stream WAV data directly to Azure Blob Storage.\n\nArgs:\n    call_id: Unique call identifier\n    wav_stream: Async stream of WAV data\n    container_name: Container name (uses default if not provided)\n\nReturns:\n    BlobOperationResult indicating operation status",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Stream WAV data directly to Azure Blob Storage.\\n\\nArgs:\n    call_id: Unique call identifier\n    wav_stream: Async stream of WAV data\n    container_name: Container name (uses default if not provided)\n\nReturns:\n    BlobOperationResult indicating operation status. This function implements stream wav to blob functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_id: Azure Communication Services call connection identifier.\\n:param wav_stream: Parameter for wav stream specification.\\n:param container_name: String value representing container name data.\\n:return: Instance of BlobOperationResult with operation results.\\n:raises RuntimeError: If stream wav to blob operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_transcript_from_blob",
              "line_number": 592,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "call_id",
                  "annotation": "str"
                },
                {
                  "name": "container_name",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "BlobOperationResult",
              "docstring": "Retrieve transcript from blob storage.\n\nArgs:\n    call_id: Unique call identifier\n    container_name: Container name (uses default if not provided)\n\nReturns:\n    BlobOperationResult with transcript content or error details",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Retrieve transcript from blob storage.\\n\\nArgs:\n    call_id: Unique call identifier\n    container_name: Container name (uses default if not provided)\n\nReturns:\n    BlobOperationResult with transcript content or error details. This function implements get transcript from blob functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_id: Azure Communication Services call connection identifier.\\n:param container_name: String value representing container name data.\\n:return: Instance of BlobOperationResult with operation results.\\n:raises RuntimeError: If get transcript from blob operation fails due to invalid parameters or system state."
            },
            {
              "name": "delete_transcript_from_blob",
              "line_number": 691,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "call_id",
                  "annotation": "str"
                },
                {
                  "name": "container_name",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "BlobOperationResult",
              "docstring": "Delete transcript from blob storage.\n\nArgs:\n    call_id: Unique call identifier\n    container_name: Container name (uses default if not provided)\n\nReturns:\n    BlobOperationResult indicating operation status",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Delete transcript from blob storage.\\n\\nArgs:\n    call_id: Unique call identifier\n    container_name: Container name (uses default if not provided)\n\nReturns:\n    BlobOperationResult indicating operation status. This function implements delete transcript from blob functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_id: Azure Communication Services call connection identifier.\\n:param container_name: String value representing container name data.\\n:return: Instance of BlobOperationResult with operation results.\\n:raises RuntimeError: If delete transcript from blob operation fails due to invalid parameters or system state."
            },
            {
              "name": "list_transcripts_in_blob",
              "line_number": 761,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "container_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "date_filter",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "BlobOperationResult",
              "docstring": "List all transcripts in blob storage.\n\nArgs:\n    container_name: Container name (uses default if not provided)\n    date_filter: Optional date filter in YYYY-MM-DD format\n\nReturns:\n    BlobOperationResult with list of blob names or error details",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "List all transcripts in blob storage.\\n\\nArgs:\n    container_name: Container name (uses default if not provided)\n    date_filter: Optional date filter in YYYY-MM-DD format\n\nReturns:\n    BlobOperationResult with list of blob names or error details. This function implements list transcripts in blob functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param container_name: String value representing container name data.\\n:param date_filter: String value representing date filter data.\\n:return: Instance of BlobOperationResult with operation results.\\n:raises RuntimeError: If list transcripts in blob operation fails due to invalid parameters or system state."
            },
            {
              "name": "close",
              "line_number": 822,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Clean up resources.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Clean up resources.\\n\\nThis function implements close functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If close operation fails due to invalid parameters or system state."
            },
            {
              "name": "__aenter__",
              "line_number": 831,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Async context manager entry.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Async context manager entry.\\n\\nThis function implements   aenter   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   aenter   operation fails due to invalid parameters or system state."
            },
            {
              "name": "__aexit__",
              "line_number": 835,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "exc_type",
                  "annotation": null
                },
                {
                  "name": "exc_val",
                  "annotation": null
                },
                {
                  "name": "exc_tb",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Async context manager exit.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Async context manager exit.\\n\\nThis function implements   aexit   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param exc_type: Parameter for exc type specification.\\n:param exc_val: Parameter for exc val specification.\\n:param exc_tb: Parameter for exc tb specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   aexit   operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a azureblobhelper with comprehensive functionality.\n\nThis class provides azureblobhelper operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AzureBlobHelper instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\blob\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\cosmosdb\\manager.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 19,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "credential",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param credential: Parameter for credential specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "fetch",
          "line_number": 22,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "OIDCCallbackContext"
            }
          ],
          "return_annotation": "OIDCCallbackResult",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute fetch operation.\\n\\nThis function implements fetch functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param context: Parameter for context specification.\\n:return: Instance of OIDCCallbackResult with operation results.\\n:raises RuntimeError: If fetch operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 30,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "connection_string",
              "annotation": "Optional[str]"
            },
            {
              "name": "database_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "collection_name",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize the CosmosDBMongoCoreManager for connecting to Cosmos DB using MongoDB API.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize the CosmosDBMongoCoreManager for connecting to Cosmos DB using MongoDB API.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param connection_string: String value representing connection string data.\\n:param database_name: String value representing database name data.\\n:param collection_name: String value representing collection name data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "insert_document",
          "line_number": 95,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "document",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "Optional[Any]",
          "docstring": "Insert a document into the collection. If the document with the same _id already exists, it will raise a DuplicateKeyError.\n:param document: The document data to insert.\n:return: The inserted document's ID or None if an error occurred.",
          "quality_score": 0.7000000000000001,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Insert a document into the collection.\\n\\nIf the document with the same _id already exists, it will raise a DuplicateKeyError. This function implements insert document functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param document: String value representing document data.\\n:return: Value if operation succeeds, None if no data available.\\n:raises RuntimeError: If insert document operation fails due to invalid parameters or system state."
        },
        {
          "name": "upsert_document",
          "line_number": 112,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "document",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "query",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "Optional[Any]",
          "docstring": "Upsert (insert or update) a document into the collection. If a document matching the query exists, it will update the document, otherwise it inserts a new one.\n:param document: The document data to upsert.\n:param query: The query to find an existing document to update.\n:return: The upserted document's ID if a new document is inserted, None otherwise.",
          "quality_score": 0.7666666666666667,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Upsert (insert or update) a document into the collection.\\n\\nIf a document matching the query exists, it will update the document, otherwise it inserts a new one. This function implements upsert document functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param document: String value representing document data.\\n:param query: String value representing query data.\\n:return: Value if operation succeeds, None if no data available.\\n:raises RuntimeError: If upsert document operation fails due to invalid parameters or system state."
        },
        {
          "name": "read_document",
          "line_number": 134,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "Optional[Dict[str, Any]]",
          "docstring": "Read a document from the collection based on a query.\n:param query: The query to match the document.\n:return: The matched document or None if not found.",
          "quality_score": 0.7000000000000001,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Read a document from the collection based on a query.\\n\\n:param query: The query to match the document. This function implements read document functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:return: Dictionary containing operation results and status information.\\n:raises FileNotFoundError: If read document operation fails due to invalid parameters or system state."
        },
        {
          "name": "query_documents",
          "line_number": 151,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "List[Dict[str, Any]]",
          "docstring": "Query multiple documents from the collection based on a query.\n:param query: The query to match documents.\n:return: A list of matching documents.",
          "quality_score": 0.7000000000000001,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Query multiple documents from the collection based on a query.\\n\\n:param query: The query to match documents. This function implements query documents functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If query documents operation fails due to invalid parameters or system state."
        },
        {
          "name": "document_exists",
          "line_number": 165,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Check if a document exists in the collection based on a query.\n:param query: The query to match the document.\n:return: True if the document exists, False otherwise.",
          "quality_score": 0.7000000000000001,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if a document exists in the collection based on a query.\\n\\n:param query: The query to match the document. This function implements document exists functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If document exists operation fails due to invalid parameters or system state."
        },
        {
          "name": "delete_document",
          "line_number": 182,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Delete a document from the collection based on a query.\n:param query: The query to match the document to delete.\n:return: True if a document was deleted, False otherwise.",
          "quality_score": 0.7000000000000001,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Delete a document from the collection based on a query.\\n\\n:param query: The query to match the document to delete. This function implements delete document functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If delete document operation fails due to invalid parameters or system state."
        },
        {
          "name": "close_connection",
          "line_number": 200,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Close the connection to Cosmos DB.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Close the connection to Cosmos DB.\\n\\nThis function implements close connection functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises ConnectionError: If close connection operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AzureIdentityTokenCallback",
          "line_number": 18,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 19,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "credential",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param credential: Parameter for credential specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "fetch",
              "line_number": 22,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "context",
                  "annotation": "OIDCCallbackContext"
                }
              ],
              "return_annotation": "OIDCCallbackResult",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute fetch operation.\\n\\nThis function implements fetch functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param context: Parameter for context specification.\\n:return: Instance of OIDCCallbackResult with operation results.\\n:raises RuntimeError: If fetch operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a azureidentitytokencallback with comprehensive functionality.\n\nThis class provides azureidentitytokencallback operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AzureIdentityTokenCallback instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CosmosDBMongoCoreManager",
          "line_number": 29,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 30,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "connection_string",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "database_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "collection_name",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize the CosmosDBMongoCoreManager for connecting to Cosmos DB using MongoDB API.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize the CosmosDBMongoCoreManager for connecting to Cosmos DB using MongoDB API.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param connection_string: String value representing connection string data.\\n:param database_name: String value representing database name data.\\n:param collection_name: String value representing collection name data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "insert_document",
              "line_number": 95,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "document",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "Optional[Any]",
              "docstring": "Insert a document into the collection. If the document with the same _id already exists, it will raise a DuplicateKeyError.\n:param document: The document data to insert.\n:return: The inserted document's ID or None if an error occurred.",
              "quality_score": 0.7000000000000001,
              "issues": [
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Insert a document into the collection.\\n\\nIf the document with the same _id already exists, it will raise a DuplicateKeyError. This function implements insert document functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param document: String value representing document data.\\n:return: Value if operation succeeds, None if no data available.\\n:raises RuntimeError: If insert document operation fails due to invalid parameters or system state."
            },
            {
              "name": "upsert_document",
              "line_number": 112,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "document",
                  "annotation": "Dict[str, Any]"
                },
                {
                  "name": "query",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "Optional[Any]",
              "docstring": "Upsert (insert or update) a document into the collection. If a document matching the query exists, it will update the document, otherwise it inserts a new one.\n:param document: The document data to upsert.\n:param query: The query to find an existing document to update.\n:return: The upserted document's ID if a new document is inserted, None otherwise.",
              "quality_score": 0.7666666666666667,
              "issues": [
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Upsert (insert or update) a document into the collection.\\n\\nIf a document matching the query exists, it will update the document, otherwise it inserts a new one. This function implements upsert document functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param document: String value representing document data.\\n:param query: String value representing query data.\\n:return: Value if operation succeeds, None if no data available.\\n:raises RuntimeError: If upsert document operation fails due to invalid parameters or system state."
            },
            {
              "name": "read_document",
              "line_number": 134,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "query",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "Optional[Dict[str, Any]]",
              "docstring": "Read a document from the collection based on a query.\n:param query: The query to match the document.\n:return: The matched document or None if not found.",
              "quality_score": 0.7000000000000001,
              "issues": [
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Read a document from the collection based on a query.\\n\\n:param query: The query to match the document. This function implements read document functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:return: Dictionary containing operation results and status information.\\n:raises FileNotFoundError: If read document operation fails due to invalid parameters or system state."
            },
            {
              "name": "query_documents",
              "line_number": 151,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "query",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "List[Dict[str, Any]]",
              "docstring": "Query multiple documents from the collection based on a query.\n:param query: The query to match documents.\n:return: A list of matching documents.",
              "quality_score": 0.7000000000000001,
              "issues": [
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Query multiple documents from the collection based on a query.\\n\\n:param query: The query to match documents. This function implements query documents functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If query documents operation fails due to invalid parameters or system state."
            },
            {
              "name": "document_exists",
              "line_number": 165,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "query",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if a document exists in the collection based on a query.\n:param query: The query to match the document.\n:return: True if the document exists, False otherwise.",
              "quality_score": 0.7000000000000001,
              "issues": [
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if a document exists in the collection based on a query.\\n\\n:param query: The query to match the document. This function implements document exists functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If document exists operation fails due to invalid parameters or system state."
            },
            {
              "name": "delete_document",
              "line_number": 182,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "query",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Delete a document from the collection based on a query.\n:param query: The query to match the document to delete.\n:return: True if a document was deleted, False otherwise.",
              "quality_score": 0.7000000000000001,
              "issues": [
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Delete a document from the collection based on a query.\\n\\n:param query: The query to match the document to delete. This function implements delete document functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param query: String value representing query data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If delete document operation fails due to invalid parameters or system state."
            },
            {
              "name": "close_connection",
              "line_number": 200,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Close the connection to Cosmos DB.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Close the connection to Cosmos DB.\\n\\nThis function implements close connection functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises ConnectionError: If close connection operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a cosmosdbmongocoremanager with comprehensive functionality.\n\nThis class provides cosmosdbmongocoremanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CosmosDBMongoCoreManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\cosmosdb\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\enums\\monitoring.py",
      "functions": [],
      "classes": [
        {
          "name": "SpanAttr",
          "line_number": 5,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a spanattr with comprehensive functionality.\n\nThis class provides spanattr operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized SpanAttr instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\enums\\stream_modes.py",
      "functions": [
        {
          "name": "__str__",
          "line_number": 13,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "str",
          "docstring": "Return the string value for easy comparison",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return the string value for easy comparison.\\n\\nThis function implements   str   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If   str   operation fails due to invalid parameters or system state."
        },
        {
          "name": "from_string",
          "line_number": 18,
          "is_async": false,
          "parameters": [
            {
              "name": "cls",
              "annotation": null
            },
            {
              "name": "value",
              "annotation": "str"
            }
          ],
          "return_annotation": "'StreamMode'",
          "docstring": "Create StreamMode from string with validation",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create StreamMode from string with validation.\\n\\nThis function implements from string functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cls: Parameter for cls specification.\\n:param value: String value representing value data.\\n:return: Instance of 'StreamMode' with operation results.\\n:raises RuntimeError: If from string operation fails due to invalid parameters or system state."
        },
        {
          "name": "is_audio_streaming",
          "line_number": 28,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Check if this mode involves direct audio streaming",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if this mode involves direct audio streaming.\\n\\nThis function implements is audio streaming functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is audio streaming operation fails due to invalid parameters or system state."
        },
        {
          "name": "is_acs_compatible",
          "line_number": 33,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Check if this mode is compatible with Azure Communication Services",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if this mode is compatible with Azure Communication Services.\\n\\nThis function implements is acs compatible functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is acs compatible operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "StreamMode",
          "line_number": 4,
          "docstring": "Enumeration for different audio streaming modes in the voice agent system",
          "methods": [
            {
              "name": "__str__",
              "line_number": 13,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "str",
              "docstring": "Return the string value for easy comparison",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Return the string value for easy comparison.\\n\\nThis function implements   str   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If   str   operation fails due to invalid parameters or system state."
            },
            {
              "name": "from_string",
              "line_number": 18,
              "is_async": false,
              "parameters": [
                {
                  "name": "cls",
                  "annotation": null
                },
                {
                  "name": "value",
                  "annotation": "str"
                }
              ],
              "return_annotation": "'StreamMode'",
              "docstring": "Create StreamMode from string with validation",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Create StreamMode from string with validation.\\n\\nThis function implements from string functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cls: Parameter for cls specification.\\n:param value: String value representing value data.\\n:return: Instance of 'StreamMode' with operation results.\\n:raises RuntimeError: If from string operation fails due to invalid parameters or system state."
            },
            {
              "name": "is_audio_streaming",
              "line_number": 28,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if this mode involves direct audio streaming",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if this mode involves direct audio streaming.\\n\\nThis function implements is audio streaming functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is audio streaming operation fails due to invalid parameters or system state."
            },
            {
              "name": "is_acs_compatible",
              "line_number": 33,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if this mode is compatible with Azure Communication Services",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if this mode is compatible with Azure Communication Services.\\n\\nThis function implements is acs compatible functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is acs compatible operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a streammode with comprehensive functionality.\n\nThis class provides streammode operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized StreamMode instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\enums\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\pools\\async_pool.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 25,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "factory",
              "annotation": "Callable[[], Awaitable[T]]"
            },
            {
              "name": "size",
              "annotation": "int"
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize the asynchronous resource pool with specified factory and size.\n\nThis constructor sets up the internal queue and synchronization primitives\nrequired for managing the pool of resources. The pool starts empty and\nmust be prepared before use.\n\n:param factory: Async factory function to create new resource instances.\n:param size: Maximum number of resources to maintain in the pool.\n:return: None.\n:raises ValueError: If size is less than or equal to zero.\n:raises TypeError: If factory is not callable.",
          "quality_score": 0.6666666666666667,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize the asynchronous resource pool with specified factory and size.\\n\\nThis constructor sets up the internal queue and synchronization primitives\nrequired for managing the pool of resources. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param factory: Parameter for factory specification.\\n:param size: Integer value for size specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AsyncPool",
          "line_number": 11,
          "docstring": "Asynchronous resource pool for managing expensive-to-create client instances.\n\nThis class provides a thread-safe pool of reusable resources backed by asyncio.Queue.\nIt is designed for managing expensive-but-reusable clients such as STT/TTS services,\ndatabase connections, or other resources that benefit from connection pooling.\n\n:param factory: Factory function that creates new instances of type T asynchronously.\n:param size: Maximum number of items to maintain in the pool.\n:return: An initialized AsyncPool instance ready for resource management.\n:raises TypeError: If factory is not a callable or size is not a positive integer.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 25,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "factory",
                  "annotation": "Callable[[], Awaitable[T]]"
                },
                {
                  "name": "size",
                  "annotation": "int"
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize the asynchronous resource pool with specified factory and size.\n\nThis constructor sets up the internal queue and synchronization primitives\nrequired for managing the pool of resources. The pool starts empty and\nmust be prepared before use.\n\n:param factory: Async factory function to create new resource instances.\n:param size: Maximum number of resources to maintain in the pool.\n:return: None.\n:raises ValueError: If size is less than or equal to zero.\n:raises TypeError: If factory is not callable.",
              "quality_score": 0.6666666666666667,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize the asynchronous resource pool with specified factory and size.\\n\\nThis constructor sets up the internal queue and synchronization primitives\nrequired for managing the pool of resources. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param factory: Parameter for factory specification.\\n:param size: Integer value for size specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "prepare",
              "line_number": 53,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Pre-populate the pool with the specified number of resource instances.\n\nThis method creates all pool resources upfront to avoid creation overhead\nduring runtime. It should be called once during application startup.\nSubsequent calls to this method are safe and will be ignored.\n\n:param: None.\n:return: None.\n:raises Exception: If any resource creation fails during pool preparation.",
              "quality_score": 0.6000000000000001,
              "issues": [
                "Missing parameter documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Pre-populate the pool with the specified number of resource instances.\\n\\nThis method creates all pool resources upfront to avoid creation overhead\nduring runtime. This function implements prepare functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If prepare operation fails due to invalid parameters or system state."
            },
            {
              "name": "acquire",
              "line_number": 82,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "timeout",
                  "annotation": "float | None"
                }
              ],
              "return_annotation": "T",
              "docstring": "Acquire a resource from the pool with optional timeout.\n\nThis method retrieves an available resource from the pool. If no resources\nare immediately available, it will wait until one becomes available or\nthe timeout expires.\n\n:param timeout: Maximum time to wait for a resource in seconds. None means wait indefinitely.\n:return: A resource instance of type T from the pool.\n:raises TimeoutError: If timeout expires before a resource becomes available.\n:raises RuntimeError: If the pool has not been prepared yet.",
              "quality_score": 0.8,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Acquire a resource from the pool with optional timeout.\\n\\nThis method retrieves an available resource from the pool. This function implements acquire functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param timeout: Maximum time to wait for operation completion in seconds.\\n:return: Instance of T with operation results.\\n:raises RuntimeError: If acquire operation fails due to invalid parameters or system state."
            },
            {
              "name": "release",
              "line_number": 110,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "item",
                  "annotation": "T"
                }
              ],
              "return_annotation": "None",
              "docstring": "Return a resource to the pool for reuse by other consumers.\n\nThis method puts a resource back into the pool, making it available\nfor future acquisition. Resources should be returned in a clean,\nreusable state.\n\n:param item: The resource instance to return to the pool.\n:return: None.\n:raises ValueError: If item is None or invalid.",
              "quality_score": 0.8,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Return a resource to the pool for reuse by other consumers.\\n\\nThis method puts a resource back into the pool, making it available\nfor future acquisition. This function implements release functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param item: Parameter for item specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If release operation fails due to invalid parameters or system state."
            },
            {
              "name": "lease",
              "line_number": 134,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "timeout",
                  "annotation": "float | None"
                }
              ],
              "return_annotation": null,
              "docstring": "Context manager for automatic resource acquisition and release.\n\nThis method provides a convenient way to acquire a resource, use it\nwithin a context, and automatically return it to the pool when done.\nThis ensures proper cleanup even if exceptions occur.\n\n:param timeout: Maximum time to wait for resource acquisition in seconds.\n:return: A context manager yielding a resource instance.\n:raises TimeoutError: If resource acquisition times out.\n:raises RuntimeError: If the pool has not been prepared yet.",
              "quality_score": 0.6000000000000001,
              "issues": [
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Context manager for automatic resource acquisition and release.\\n\\nThis method provides a convenient way to acquire a resource, use it\nwithin a context, and automatically return it to the pool when done. This function implements lease functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param timeout: Maximum time to wait for operation completion in seconds.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If lease operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.4000000000000001,
          "issues": [
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a asyncpool with comprehensive functionality.\n\nThis class provides asyncpool operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AsyncPool instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\pools\\session_manager.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 25,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "ThreadSafeSessionManager",
          "line_number": 17,
          "docstring": "Thread-safe manager for active conversation sessions.\n\nUses asyncio.Lock to protect concurrent access to session tracking,\npreventing race conditions during concurrent session management.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 25,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "add_session",
              "line_number": 29,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "memory_manager",
                  "annotation": "Any"
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                }
              ],
              "return_annotation": "None",
              "docstring": "Add a conversation session thread-safely.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Add a conversation session thread-safely.\\n\\nThis function implements add session functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param memory_manager: Parameter for memory manager specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If add session operation fails due to invalid parameters or system state."
            },
            {
              "name": "remove_session",
              "line_number": 44,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Remove a conversation session thread-safely. Returns True if removed.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Remove a conversation session thread-safely.\\n\\nThis function implements remove session functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If remove session operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_session",
              "line_number": 53,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Optional[Dict[str, Any]]",
              "docstring": "Get session data thread-safely.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get session data thread-safely.\\n\\nThis function implements get session functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get session operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_session_count",
              "line_number": 58,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "int",
              "docstring": "Get current session count thread-safely.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get current session count thread-safely.\\n\\nThis function implements get session count functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If get session count operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_all_sessions_snapshot",
              "line_number": 63,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, Dict[str, Any]]",
              "docstring": "Get a thread-safe snapshot of all sessions.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get a thread-safe snapshot of all sessions.\\n\\nThis function implements get all sessions snapshot functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get all sessions snapshot operation fails due to invalid parameters or system state."
            },
            {
              "name": "cleanup_stale_sessions",
              "line_number": 68,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "max_age_hours",
                  "annotation": "int"
                }
              ],
              "return_annotation": "int",
              "docstring": "Remove sessions older than max_age_hours and return count of removed sessions.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Remove sessions older than max_age_hours and return count of removed sessions.\\n\\nThis function implements cleanup stale sessions functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param max_age_hours: Integer value for max age hours specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If cleanup stale sessions operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a threadsafesessionmanager with comprehensive functionality.\n\nThis class provides threadsafesessionmanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ThreadSafeSessionManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\pools\\session_metrics.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 28,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "ThreadSafeSessionMetrics",
          "line_number": 15,
          "docstring": "Thread-safe session metrics manager.\n\nUses asyncio.Lock to protect concurrent access to metrics counters,\npreventing lost updates during concurrent session management.\n\nTracks:\n- active_connections: Current number of open WebSocket connections (real-time)\n- total_connected: Historical count of all connections ever made\n- total_disconnected: Historical count of all disconnections",
          "methods": [
            {
              "name": "__init__",
              "line_number": 28,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "increment_connected",
              "line_number": 37,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "int",
              "docstring": "Atomically increment both active and total connected counters.\nCalled when a WebSocket connection is established.\nReturns the new active connection count.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Atomically increment both active and total connected counters.\\n\\nCalled when a WebSocket connection is established. This function implements increment connected functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Integer value representing the operation result.\\n:raises ConnectionError: If increment connected operation fails due to invalid parameters or system state."
            },
            {
              "name": "increment_disconnected",
              "line_number": 52,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "int",
              "docstring": "Atomically decrement active and increment total disconnected counters.\nCalled when a WebSocket connection is closed.\nReturns the new active connection count.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Atomically decrement active and increment total disconnected counters.\\n\\nCalled when a WebSocket connection is closed. This function implements increment disconnected functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Integer value representing the operation result.\\n:raises ConnectionError: If increment disconnected operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_snapshot",
              "line_number": 69,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": "Get a thread-safe snapshot of current metrics.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get a thread-safe snapshot of current metrics.\\n\\nThis function implements get snapshot functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get snapshot operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_active_sessions",
              "line_number": 74,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "int",
              "docstring": "Get current number of active sessions (real-time active connections).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get current number of active sessions (real-time active connections).\\n\\nThis function implements get active sessions functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If get active sessions operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a threadsafesessionmetrics with comprehensive functionality.\n\nThis class provides threadsafesessionmetrics operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ThreadSafeSessionMetrics instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\pools\\websocket_manager.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 24,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "ThreadSafeWebSocketManager",
          "line_number": 16,
          "docstring": "Thread-safe manager for WebSocket clients.\n\nUses asyncio.Lock to protect concurrent access to the client set,\npreventing race conditions during add/remove/iteration operations.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 24,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "add_client",
              "line_number": 28,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                }
              ],
              "return_annotation": "None",
              "docstring": "Add a WebSocket client thread-safely.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Add a WebSocket client thread-safely.\\n\\nThis function implements add client functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If add client operation fails due to invalid parameters or system state."
            },
            {
              "name": "remove_client",
              "line_number": 34,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "websocket",
                  "annotation": "WebSocket"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Remove a WebSocket client thread-safely. Returns True if removed.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Remove a WebSocket client thread-safely.\\n\\nThis function implements remove client functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param websocket: Active WebSocket connection for real-time communication.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If remove client operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_clients_snapshot",
              "line_number": 43,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Set[WebSocket]",
              "docstring": "Get a thread-safe snapshot of current clients for iteration.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get a thread-safe snapshot of current clients for iteration.\\n\\nThis function implements get clients snapshot functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of Set[WebSocket] with operation results.\\n:raises RuntimeError: If get clients snapshot operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_client_count",
              "line_number": 49,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "int",
              "docstring": "Get current client count thread-safely.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get current client count thread-safely.\\n\\nThis function implements get client count functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If get client count operation fails due to invalid parameters or system state."
            },
            {
              "name": "cleanup_disconnected",
              "line_number": 54,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "int",
              "docstring": "Remove disconnected clients and return count of removed clients.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Remove disconnected clients and return count of removed clients.\\n\\nThis function implements cleanup disconnected functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Integer value representing the operation result.\\n:raises ConnectionError: If cleanup disconnected operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a threadsafewebsocketmanager with comprehensive functionality.\n\nThis class provides threadsafewebsocketmanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized ThreadSafeWebSocketManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\pools\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\postcall\\push.py",
      "functions": [
        {
          "name": "build_and_flush",
          "line_number": 10,
          "is_async": false,
          "parameters": [
            {
              "name": "cm",
              "annotation": "MemoManager"
            },
            {
              "name": "cosmos",
              "annotation": "CosmosDBMongoCoreManager"
            }
          ],
          "return_annotation": null,
          "docstring": "Build analytics document from conversation manager and upsert into Cosmos DB\n(MongoDB API, _id = session_id).",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Build analytics document from conversation manager and upsert into Cosmos DB\n(MongoDB API, _id = session_id).\\n\\n. This function implements build and flush functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cm: Parameter for cm specification.\\n:param cosmos: Parameter for cosmos specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If build and flush operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\postcall\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\prompts\\prompt_manager.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 21,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "template_dir",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize the PromptManager with the given template directory.\n\nArgs:\n    template_dir (str): The directory containing the Jinja2 templates.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize the PromptManager with the given template directory.\\n\\nArgs:\n    template_dir (str): The directory containing the Jinja2 templates. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param template_dir: String value representing template dir data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_prompt",
          "line_number": 38,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "template_name",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Render a template with the given context.\n\nArgs:\n    template_name (str): The name of the template file.\n    **kwargs: The context variables to render the template with.\n\nReturns:\n    str: The rendered template as a string.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Render a template with the given context.\\n\\nArgs:\n    template_name (str): The name of the template file. This function implements get prompt functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param template_name: String value representing template name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get prompt operation fails due to invalid parameters or system state."
        },
        {
          "name": "create_prompt_system_main",
          "line_number": 55,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "prompt_path",
              "annotation": "str"
            },
            {
              "name": "patient_phone_number",
              "annotation": "str"
            },
            {
              "name": "patient_name",
              "annotation": "str"
            },
            {
              "name": "patient_dob",
              "annotation": "str"
            },
            {
              "name": "patient_id",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Create a system prompt for evaluating policy search results.\n\nArgs:\n    query (str): The user's query regarding prior authorization.\n    search_results (List[Dict[str, Any]]): Retrieved policies.\n    patient_phone_number (str): Patient\u2019s phone number.\n    patient_name (str): Patient\u2019s full name.\n    patient_dob (str): Patient\u2019s date of birth.\n    patient_id (str): Patient\u2019s identifier.\n\nReturns:\n    str: Rendered prompt string.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create a system prompt for evaluating policy search results.\\n\\nArgs:\n    query (str): The user's query regarding prior authorization. This function implements create prompt system main functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param prompt_path: String value representing prompt path data.\\n:param patient_phone_number: String value representing patient phone number data.\\n:param patient_name: String value representing patient name data.\\n:param patient_dob: String value representing patient dob data.\\n:param patient_id: Unique identifier for patient entity.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If create prompt system main operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "PromptManager",
          "line_number": 20,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 21,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "template_dir",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize the PromptManager with the given template directory.\n\nArgs:\n    template_dir (str): The directory containing the Jinja2 templates.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize the PromptManager with the given template directory.\\n\\nArgs:\n    template_dir (str): The directory containing the Jinja2 templates. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param template_dir: String value representing template dir data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_prompt",
              "line_number": 38,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "template_name",
                  "annotation": "str"
                }
              ],
              "return_annotation": "str",
              "docstring": "Render a template with the given context.\n\nArgs:\n    template_name (str): The name of the template file.\n    **kwargs: The context variables to render the template with.\n\nReturns:\n    str: The rendered template as a string.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Render a template with the given context.\\n\\nArgs:\n    template_name (str): The name of the template file. This function implements get prompt functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param template_name: String value representing template name data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get prompt operation fails due to invalid parameters or system state."
            },
            {
              "name": "create_prompt_system_main",
              "line_number": 55,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "prompt_path",
                  "annotation": "str"
                },
                {
                  "name": "patient_phone_number",
                  "annotation": "str"
                },
                {
                  "name": "patient_name",
                  "annotation": "str"
                },
                {
                  "name": "patient_dob",
                  "annotation": "str"
                },
                {
                  "name": "patient_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "str",
              "docstring": "Create a system prompt for evaluating policy search results.\n\nArgs:\n    query (str): The user's query regarding prior authorization.\n    search_results (List[Dict[str, Any]]): Retrieved policies.\n    patient_phone_number (str): Patient\u2019s phone number.\n    patient_name (str): Patient\u2019s full name.\n    patient_dob (str): Patient\u2019s date of birth.\n    patient_id (str): Patient\u2019s identifier.\n\nReturns:\n    str: Rendered prompt string.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Create a system prompt for evaluating policy search results.\\n\\nArgs:\n    query (str): The user's query regarding prior authorization. This function implements create prompt system main functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param prompt_path: String value representing prompt path data.\\n:param patient_phone_number: String value representing patient phone number data.\\n:param patient_name: String value representing patient name data.\\n:param patient_dob: String value representing patient dob data.\\n:param patient_id: Unique identifier for patient entity.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If create prompt system main operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a promptmanager with comprehensive functionality.\n\nThis class provides promptmanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized PromptManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\prompts\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\redis\\manager.py",
      "functions": [
        {
          "name": "is_connected",
          "line_number": 30,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Check if Redis connection is healthy.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if Redis connection is healthy.\\n\\nThis function implements is connected functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises ConnectionError: If is connected operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 38,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "host",
              "annotation": "Optional[str]"
            },
            {
              "name": "access_key",
              "annotation": "Optional[str]"
            },
            {
              "name": "port",
              "annotation": "Optional[int]"
            },
            {
              "name": "db",
              "annotation": "int"
            },
            {
              "name": "ssl",
              "annotation": "bool"
            },
            {
              "name": "credential",
              "annotation": "Optional[object]"
            },
            {
              "name": "user_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "scope",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize the Redis connection.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize the Redis connection.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param host: String value representing host data.\\n:param access_key: String value representing access key data.\\n:param port: Integer value for port specification.\\n:param db: Integer value for db specification.\\n:param ssl: Boolean flag indicating ssl status.\\n:param credential: Parameter for credential specification.\\n:param user_name: String value representing user name data.\\n:param scope: String value representing scope data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "_redis_span",
          "line_number": 84,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "op",
              "annotation": "str | None"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  redis span operation.\\n\\nThis function implements  redis span functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:param op: String value representing op data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  redis span operation fails due to invalid parameters or system state."
        },
        {
          "name": "_create_client",
          "line_number": 98,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "(Re)create self.redis_client and record expiry for AAD.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "(Re)create self.\\n\\nThis function implements  create client functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  create client operation fails due to invalid parameters or system state."
        },
        {
          "name": "_refresh_loop",
          "line_number": 135,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Background thread: sleep until just before expiry, then refresh token.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Background thread: sleep until just before expiry, then refresh token.\\n\\nThis function implements  refresh loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  refresh loop operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_value",
          "line_number": 162,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "value",
              "annotation": "str"
            },
            {
              "name": "ttl_seconds",
              "annotation": "Optional[int]"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Set a string value in Redis (optionally with TTL).",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set a string value in Redis (optionally with TTL).\\n\\nThis function implements set value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: String value representing value data.\\n:param ttl_seconds: Integer value for ttl seconds specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If set value operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_value",
          "line_number": 171,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Get a string value from Redis.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get a string value from Redis.\\n\\nThis function implements get value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get value operation fails due to invalid parameters or system state."
        },
        {
          "name": "store_session_data",
          "line_number": 177,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "session_id",
              "annotation": "str"
            },
            {
              "name": "data",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Store session data using a Redis hash.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Store session data using a Redis hash.\\n\\nThis function implements store session data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param data: String value representing data data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If store session data operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_session_data",
          "line_number": 182,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "session_id",
              "annotation": "str"
            }
          ],
          "return_annotation": "Dict[str, str]",
          "docstring": "Retrieve all session data for a given session ID.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Retrieve all session data for a given session ID.\\n\\nThis function implements get session data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get session data operation fails due to invalid parameters or system state."
        },
        {
          "name": "update_session_field",
          "line_number": 188,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "session_id",
              "annotation": "str"
            },
            {
              "name": "field",
              "annotation": "str"
            },
            {
              "name": "value",
              "annotation": "str"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Update a single field in the session hash.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Update a single field in the session hash.\\n\\nThis function implements update session field functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param field: String value representing field data.\\n:param value: String value representing value data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If update session field operation fails due to invalid parameters or system state."
        },
        {
          "name": "delete_session",
          "line_number": 193,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "session_id",
              "annotation": "str"
            }
          ],
          "return_annotation": "int",
          "docstring": "Delete a session from Redis.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Delete a session from Redis.\\n\\nThis function implements delete session functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If delete session operation fails due to invalid parameters or system state."
        },
        {
          "name": "list_connected_clients",
          "line_number": 198,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "List[Dict[str, str]]",
          "docstring": "List currently connected clients.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "List currently connected clients.\\n\\nThis function implements list connected clients functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises ConnectionError: If list connected clients operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AzureRedisManager",
          "line_number": 23,
          "docstring": "AzureRedisManager provides a simplified interface to connect, store,\nretrieve, and manage session data using Azure Cache for Redis.",
          "methods": [
            {
              "name": "is_connected",
              "line_number": 30,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if Redis connection is healthy.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if Redis connection is healthy.\\n\\nThis function implements is connected functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises ConnectionError: If is connected operation fails due to invalid parameters or system state."
            },
            {
              "name": "__init__",
              "line_number": 38,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "host",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "access_key",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "port",
                  "annotation": "Optional[int]"
                },
                {
                  "name": "db",
                  "annotation": "int"
                },
                {
                  "name": "ssl",
                  "annotation": "bool"
                },
                {
                  "name": "credential",
                  "annotation": "Optional[object]"
                },
                {
                  "name": "user_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "scope",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize the Redis connection.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize the Redis connection.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param host: String value representing host data.\\n:param access_key: String value representing access key data.\\n:param port: Integer value for port specification.\\n:param db: Integer value for db specification.\\n:param ssl: Boolean flag indicating ssl status.\\n:param credential: Parameter for credential specification.\\n:param user_name: String value representing user name data.\\n:param scope: String value representing scope data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "_redis_span",
              "line_number": 84,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "name",
                  "annotation": "str"
                },
                {
                  "name": "op",
                  "annotation": "str | None"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  redis span operation.\\n\\nThis function implements  redis span functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:param op: String value representing op data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  redis span operation fails due to invalid parameters or system state."
            },
            {
              "name": "_create_client",
              "line_number": 98,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "(Re)create self.redis_client and record expiry for AAD.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "(Re)create self.\\n\\nThis function implements  create client functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  create client operation fails due to invalid parameters or system state."
            },
            {
              "name": "_refresh_loop",
              "line_number": 135,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Background thread: sleep until just before expiry, then refresh token.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Background thread: sleep until just before expiry, then refresh token.\\n\\nThis function implements  refresh loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  refresh loop operation fails due to invalid parameters or system state."
            },
            {
              "name": "ping",
              "line_number": 150,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check Redis connectivity.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check Redis connectivity.\\n\\nThis function implements ping functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If ping operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_value",
              "line_number": 162,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "str"
                },
                {
                  "name": "ttl_seconds",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Set a string value in Redis (optionally with TTL).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set a string value in Redis (optionally with TTL).\\n\\nThis function implements set value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: String value representing value data.\\n:param ttl_seconds: Integer value for ttl seconds specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If set value operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_value",
              "line_number": 171,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Get a string value from Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get a string value from Redis.\\n\\nThis function implements get value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get value operation fails due to invalid parameters or system state."
            },
            {
              "name": "store_session_data",
              "line_number": 177,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "data",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Store session data using a Redis hash.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Store session data using a Redis hash.\\n\\nThis function implements store session data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param data: String value representing data data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If store session data operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_session_data",
              "line_number": 182,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Dict[str, str]",
              "docstring": "Retrieve all session data for a given session ID.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Retrieve all session data for a given session ID.\\n\\nThis function implements get session data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get session data operation fails due to invalid parameters or system state."
            },
            {
              "name": "update_session_field",
              "line_number": 188,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "field",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "str"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Update a single field in the session hash.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Update a single field in the session hash.\\n\\nThis function implements update session field functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param field: String value representing field data.\\n:param value: String value representing value data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If update session field operation fails due to invalid parameters or system state."
            },
            {
              "name": "delete_session",
              "line_number": 193,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "int",
              "docstring": "Delete a session from Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Delete a session from Redis.\\n\\nThis function implements delete session functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If delete session operation fails due to invalid parameters or system state."
            },
            {
              "name": "list_connected_clients",
              "line_number": 198,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "List[Dict[str, str]]",
              "docstring": "List currently connected clients.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "List currently connected clients.\\n\\nThis function implements list connected clients functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises ConnectionError: If list connected clients operation fails due to invalid parameters or system state."
            },
            {
              "name": "store_session_data_async",
              "line_number": 203,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "data",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Async version using thread pool executor.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Async version using thread pool executor.\\n\\nThis function implements store session data async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param data: String value representing data data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If store session data async operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_session_data_async",
              "line_number": 224,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Dict[str, str]",
              "docstring": "Async version of get_session_data using thread pool executor.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Async version of get_session_data using thread pool executor.\\n\\nThis function implements get session data async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get session data async operation fails due to invalid parameters or system state."
            },
            {
              "name": "update_session_field_async",
              "line_number": 240,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "field",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "str"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Async version of update_session_field using thread pool executor.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Async version of update_session_field using thread pool executor.\\n\\nThis function implements update session field async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param field: String value representing field data.\\n:param value: String value representing value data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If update session field async operation fails due to invalid parameters or system state."
            },
            {
              "name": "delete_session_async",
              "line_number": 260,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "int",
              "docstring": "Async version of delete_session using thread pool executor.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Async version of delete_session using thread pool executor.\\n\\nThis function implements delete session async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If delete session async operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_value_async",
              "line_number": 276,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Async version of get_value using thread pool executor.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Async version of get_value using thread pool executor.\\n\\nThis function implements get value async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get value async operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_value_async",
              "line_number": 288,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "str"
                },
                {
                  "name": "ttl_seconds",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Async version of set_value using thread pool executor.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Async version of set_value using thread pool executor.\\n\\nThis function implements set value async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: String value representing value data.\\n:param ttl_seconds: Integer value for ttl seconds specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If set value async operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a azureredismanager with comprehensive functionality.\n\nThis class provides azureredismanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AzureRedisManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\redis\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\speech\\conversation_recognizer.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 32,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "_create_speech_config",
          "line_number": 70,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "SpeechConfig",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  create speech config operation.\\n\\nThis function implements  create speech config functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of SpeechConfig with operation results.\\n:raises RuntimeError: If  create speech config operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_partial_result_callback",
          "line_number": 81,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "callback",
              "annotation": "Callable[[str, str, str | None], None]"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Configure partial result callback in the system.\\n\\nThis function implements set partial result callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: String value representing callback data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set partial result callback operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_final_result_callback",
          "line_number": 86,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "callback",
              "annotation": "Callable[[str, str, str | None], None]"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Configure final result callback in the system.\\n\\nThis function implements set final result callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: String value representing callback data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set final result callback operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_cancel_callback",
          "line_number": 91,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "callback",
              "annotation": "Callable[[any], None]"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Configure cancel callback in the system.\\n\\nThis function implements set cancel callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: Parameter for callback specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set cancel callback operation fails due to invalid parameters or system state."
        },
        {
          "name": "prepare_stream",
          "line_number": 94,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute prepare stream operation.\\n\\nThis function implements prepare stream functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If prepare stream operation fails due to invalid parameters or system state."
        },
        {
          "name": "start",
          "line_number": 107,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute start operation.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
        },
        {
          "name": "_start_transcriber",
          "line_number": 127,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  start transcriber operation.\\n\\nThis function implements  start transcriber functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  start transcriber operation fails due to invalid parameters or system state."
        },
        {
          "name": "write_bytes",
          "line_number": 172,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "audio_chunk",
              "annotation": "bytes"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute write bytes operation.\\n\\nThis function implements write bytes functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_chunk: Parameter for audio chunk specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If write bytes operation fails due to invalid parameters or system state."
        },
        {
          "name": "stop",
          "line_number": 182,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute stop operation.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
        },
        {
          "name": "close_stream",
          "line_number": 191,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute close stream operation.\\n\\nThis function implements close stream functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If close stream operation fails due to invalid parameters or system state."
        },
        {
          "name": "_on_partial",
          "line_number": 198,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "evt",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  on partial operation.\\n\\nThis function implements  on partial functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  on partial operation fails due to invalid parameters or system state."
        },
        {
          "name": "_on_final",
          "line_number": 205,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "evt",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  on final operation.\\n\\nThis function implements  on final functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  on final operation fails due to invalid parameters or system state."
        },
        {
          "name": "_on_stopped",
          "line_number": 212,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "evt",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  on stopped operation.\\n\\nThis function implements  on stopped functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  on stopped operation fails due to invalid parameters or system state."
        },
        {
          "name": "_on_canceled",
          "line_number": 217,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "evt",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  on canceled operation.\\n\\nThis function implements  on canceled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  on canceled operation fails due to invalid parameters or system state."
        },
        {
          "name": "_extract_speaker_id",
          "line_number": 224,
          "is_async": false,
          "parameters": [
            {
              "name": "evt",
              "annotation": null
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  extract speaker id operation.\\n\\nThis function implements  extract speaker id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param evt: Parameter for evt specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract speaker id operation fails due to invalid parameters or system state."
        },
        {
          "name": "_extract_lang",
          "line_number": 236,
          "is_async": false,
          "parameters": [
            {
              "name": "evt",
              "annotation": null
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  extract lang operation.\\n\\nThis function implements  extract lang functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param evt: Parameter for evt specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract lang operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "StreamingConversationTranscriberFromBytes",
          "line_number": 29,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 32,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "_create_speech_config",
              "line_number": 70,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "SpeechConfig",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  create speech config operation.\\n\\nThis function implements  create speech config functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of SpeechConfig with operation results.\\n:raises RuntimeError: If  create speech config operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_partial_result_callback",
              "line_number": 81,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "callback",
                  "annotation": "Callable[[str, str, str | None], None]"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Configure partial result callback in the system.\\n\\nThis function implements set partial result callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: String value representing callback data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set partial result callback operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_final_result_callback",
              "line_number": 86,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "callback",
                  "annotation": "Callable[[str, str, str | None], None]"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Configure final result callback in the system.\\n\\nThis function implements set final result callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: String value representing callback data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set final result callback operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_cancel_callback",
              "line_number": 91,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "callback",
                  "annotation": "Callable[[any], None]"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Configure cancel callback in the system.\\n\\nThis function implements set cancel callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: Parameter for callback specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set cancel callback operation fails due to invalid parameters or system state."
            },
            {
              "name": "prepare_stream",
              "line_number": 94,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute prepare stream operation.\\n\\nThis function implements prepare stream functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If prepare stream operation fails due to invalid parameters or system state."
            },
            {
              "name": "start",
              "line_number": 107,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute start operation.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
            },
            {
              "name": "_start_transcriber",
              "line_number": 127,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  start transcriber operation.\\n\\nThis function implements  start transcriber functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  start transcriber operation fails due to invalid parameters or system state."
            },
            {
              "name": "write_bytes",
              "line_number": 172,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "audio_chunk",
                  "annotation": "bytes"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute write bytes operation.\\n\\nThis function implements write bytes functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_chunk: Parameter for audio chunk specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If write bytes operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 182,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute stop operation.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            },
            {
              "name": "close_stream",
              "line_number": 191,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute close stream operation.\\n\\nThis function implements close stream functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If close stream operation fails due to invalid parameters or system state."
            },
            {
              "name": "_on_partial",
              "line_number": 198,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "evt",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  on partial operation.\\n\\nThis function implements  on partial functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  on partial operation fails due to invalid parameters or system state."
            },
            {
              "name": "_on_final",
              "line_number": 205,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "evt",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  on final operation.\\n\\nThis function implements  on final functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  on final operation fails due to invalid parameters or system state."
            },
            {
              "name": "_on_stopped",
              "line_number": 212,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "evt",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  on stopped operation.\\n\\nThis function implements  on stopped functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  on stopped operation fails due to invalid parameters or system state."
            },
            {
              "name": "_on_canceled",
              "line_number": 217,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "evt",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  on canceled operation.\\n\\nThis function implements  on canceled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  on canceled operation fails due to invalid parameters or system state."
            },
            {
              "name": "_extract_speaker_id",
              "line_number": 224,
              "is_async": false,
              "parameters": [
                {
                  "name": "evt",
                  "annotation": null
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  extract speaker id operation.\\n\\nThis function implements  extract speaker id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param evt: Parameter for evt specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract speaker id operation fails due to invalid parameters or system state."
            },
            {
              "name": "_extract_lang",
              "line_number": 236,
              "is_async": false,
              "parameters": [
                {
                  "name": "evt",
                  "annotation": null
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  extract lang operation.\\n\\nThis function implements  extract lang functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param evt: Parameter for evt specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract lang operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a streamingconversationtranscriberfrombytes with comprehensive functionality.\n\nThis class provides streamingconversationtranscriberfrombytes operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized StreamingConversationTranscriberFromBytes instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\speech\\speech_recognizer.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 48,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Initialize the StreamingSpeechRecognizerFromBytes.\n\nArgs:\n    key: Azure Speech API key. If None, will use Azure Default Credentials\n    region: Azure region (required for both API key and credential authentication)\n    candidate_languages: List of language codes for auto-detection\n    vad_silence_timeout_ms: Voice activity detection silence timeout\n    audio_format: \"pcm\" for raw PCM audio or \"any\" for compressed formats\n    call_connection_id: Call connection ID for correlation in Azure Monitor\n    enable_tracing: Whether to enable Azure Monitor tracing",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Initialize the StreamingSpeechRecognizerFromBytes.\\n\\nArgs:\n    key: Azure Speech API key. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_call_connection_id",
          "line_number": 117,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Set the call connection ID for correlation in tracing and logging.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set the call connection ID for correlation in tracing and logging.\\n\\nThis function implements set call connection id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If set call connection id operation fails due to invalid parameters or system state."
        },
        {
          "name": "_create_speech_config",
          "line_number": 123,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "speechsdk.SpeechConfig",
          "docstring": "Create SpeechConfig using either API key or Azure Default Credentials\nFollowing Azure best practices for authentication",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Create SpeechConfig using either API key or Azure Default Credentials\nFollowing Azure best practices for authentication.\\n\\nThis function implements  create speech config functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of speechsdk.SpeechConfig with operation results.\\n:raises RuntimeError: If  create speech config operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_partial_result_callback",
          "line_number": 169,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "callback",
              "annotation": "Callable[[str, str], None]"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Configure partial result callback in the system.\\n\\nThis function implements set partial result callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: String value representing callback data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set partial result callback operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_final_result_callback",
          "line_number": 172,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "callback",
              "annotation": "Callable[[str, str], None]"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Configure final result callback in the system.\\n\\nThis function implements set final result callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: String value representing callback data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set final result callback operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_cancel_callback",
          "line_number": 175,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "callback",
              "annotation": "Callable[[speechsdk.SessionEventArgs], None]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Set a callback to handle cancellation events.\nThis can be used to log or handle errors when recognition is canceled.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set a callback to handle cancellation events.\\n\\nThis can be used to log or handle errors when recognition is canceled. This function implements set cancel callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: Parameter for callback specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set cancel callback operation fails due to invalid parameters or system state."
        },
        {
          "name": "prepare_stream",
          "line_number": 184,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Prepare the audio stream for recognition.\nThis method initializes the PushAudioInputStream based on the specified audio format.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Prepare the audio stream for recognition.\\n\\nThis method initializes the PushAudioInputStream based on the specified audio format. This function implements prepare stream functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If prepare stream operation fails due to invalid parameters or system state."
        },
        {
          "name": "start",
          "line_number": 204,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Start speech recognition with Azure Monitor tracing",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Start speech recognition with Azure Monitor tracing.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
        },
        {
          "name": "_start_recognition",
          "line_number": 265,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Build the Speech SDK recogniser **and start it** in one shot.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Build the Speech SDK recogniser **and start it** in one shot.\\n\\nThis function implements  start recognition functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  start recognition operation fails due to invalid parameters or system state."
        },
        {
          "name": "prepare_start",
          "line_number": 278,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Allocate PushAudioInputStream + SpeechRecognizer.\n\n\u2022 Neural front-end (noise-suppression / AEC / AGC) is enabled\nwhen `self.` is *True*.\n\u2022 Speaker diarisation is enabled when `self.enable_diarisation` is *True*.\n\u2022 All other behaviour (LID, semantic segmentation, VAD, etc.)\nfollows the class-level settings.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Allocate PushAudioInputStream + SpeechRecognizer.\\n\\n\u2022 Neural front-end (noise-suppression / AEC / AGC) is enabled\nwhen `self. This function implements prepare start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If prepare start operation fails due to invalid parameters or system state."
        },
        {
          "name": "write_bytes",
          "line_number": 404,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "audio_chunk",
              "annotation": "bytes"
            }
          ],
          "return_annotation": "None",
          "docstring": "Write audio bytes to the stream; avoid per-chunk spans to keep overhead low.\nEmits an event on the session span instead for coarse visibility.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Write audio bytes to the stream; avoid per-chunk spans to keep overhead low.\\n\\nEmits an event on the session span instead for coarse visibility. This function implements write bytes functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_chunk: Parameter for audio chunk specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If write bytes operation fails due to invalid parameters or system state."
        },
        {
          "name": "stop",
          "line_number": 426,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Stop recognition with tracing cleanup",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Stop recognition with tracing cleanup.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
        },
        {
          "name": "close_stream",
          "line_number": 447,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Close the audio stream with tracing",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Close the audio stream with tracing.\\n\\nThis function implements close stream functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If close stream operation fails due to invalid parameters or system state."
        },
        {
          "name": "_extract_lang",
          "line_number": 463,
          "is_async": false,
          "parameters": [
            {
              "name": "evt",
              "annotation": null
            }
          ],
          "return_annotation": "str",
          "docstring": "Return detected language code regardless of LID mode.\n\nPriority:\n1. evt.result.language   (direct field, works in Continuous)\n2. AutoDetectSourceLanguageResult property\n3. fallback ''  (caller will switch to default)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return detected language code regardless of LID mode.\\n\\nPriority:\n1. This function implements  extract lang functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param evt: Parameter for evt specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract lang operation fails due to invalid parameters or system state."
        },
        {
          "name": "_extract_speaker_id",
          "line_number": 484,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "evt",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute  extract speaker id operation.\\n\\nThis function implements  extract speaker id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  extract speaker id operation fails due to invalid parameters or system state."
        },
        {
          "name": "_on_recognizing",
          "line_number": 496,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "evt",
              "annotation": "speechsdk.SpeechRecognitionEventArgs"
            }
          ],
          "return_annotation": "None",
          "docstring": "Handle partial recognition results with tracing",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Handle partial recognition results with tracing.\\n\\nThis function implements  on recognizing functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  on recognizing operation fails due to invalid parameters or system state."
        },
        {
          "name": "_on_recognized",
          "line_number": 541,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "evt",
              "annotation": "speechsdk.SpeechRecognitionEventArgs"
            }
          ],
          "return_annotation": "None",
          "docstring": "Handle final recognition results with tracing",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Handle final recognition results with tracing.\\n\\nThis function implements  on recognized functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  on recognized operation fails due to invalid parameters or system state."
        },
        {
          "name": "_on_canceled",
          "line_number": 598,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "evt",
              "annotation": "speechsdk.SessionEventArgs"
            }
          ],
          "return_annotation": "None",
          "docstring": "Handle cancellation events with tracing",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Handle cancellation events with tracing.\\n\\nThis function implements  on canceled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  on canceled operation fails due to invalid parameters or system state."
        },
        {
          "name": "_on_session_stopped",
          "line_number": 626,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "evt",
              "annotation": "speechsdk.SessionEventArgs"
            }
          ],
          "return_annotation": "None",
          "docstring": "Handle session stopped events with tracing",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Handle session stopped events with tracing.\\n\\nThis function implements  on session stopped functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  on session stopped operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "StreamingSpeechRecognizerFromBytes",
          "line_number": 24,
          "docstring": "Real-time streaming speech recognizer using Azure Speech SDK with PushAudioInputStream.\n\nAuthentication:\n- If key is provided: Uses API key authentication\n- If key is None: Uses Azure Default Credentials (managed identity, service principal, etc.)\n\nSupports:\n- PCM 16kHz 16-bit mono audio in bytes\n- Compressed audio (webm, mp3, ogg) via GStreamer\n- Auto language detection\n- Real-time callbacks for partial and final recognition\n- Azure Monitor OpenTelemetry tracing with call correlation",
          "methods": [
            {
              "name": "__init__",
              "line_number": 48,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Initialize the StreamingSpeechRecognizerFromBytes.\n\nArgs:\n    key: Azure Speech API key. If None, will use Azure Default Credentials\n    region: Azure region (required for both API key and credential authentication)\n    candidate_languages: List of language codes for auto-detection\n    vad_silence_timeout_ms: Voice activity detection silence timeout\n    audio_format: \"pcm\" for raw PCM audio or \"any\" for compressed formats\n    call_connection_id: Call connection ID for correlation in Azure Monitor\n    enable_tracing: Whether to enable Azure Monitor tracing",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Initialize the StreamingSpeechRecognizerFromBytes.\\n\\nArgs:\n    key: Azure Speech API key. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_call_connection_id",
              "line_number": 117,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Set the call connection ID for correlation in tracing and logging.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set the call connection ID for correlation in tracing and logging.\\n\\nThis function implements set call connection id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If set call connection id operation fails due to invalid parameters or system state."
            },
            {
              "name": "_create_speech_config",
              "line_number": 123,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "speechsdk.SpeechConfig",
              "docstring": "Create SpeechConfig using either API key or Azure Default Credentials\nFollowing Azure best practices for authentication",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Create SpeechConfig using either API key or Azure Default Credentials\nFollowing Azure best practices for authentication.\\n\\nThis function implements  create speech config functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of speechsdk.SpeechConfig with operation results.\\n:raises RuntimeError: If  create speech config operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_partial_result_callback",
              "line_number": 169,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "callback",
                  "annotation": "Callable[[str, str], None]"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Configure partial result callback in the system.\\n\\nThis function implements set partial result callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: String value representing callback data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set partial result callback operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_final_result_callback",
              "line_number": 172,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "callback",
                  "annotation": "Callable[[str, str], None]"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Configure final result callback in the system.\\n\\nThis function implements set final result callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: String value representing callback data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set final result callback operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_cancel_callback",
              "line_number": 175,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "callback",
                  "annotation": "Callable[[speechsdk.SessionEventArgs], None]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Set a callback to handle cancellation events.\nThis can be used to log or handle errors when recognition is canceled.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set a callback to handle cancellation events.\\n\\nThis can be used to log or handle errors when recognition is canceled. This function implements set cancel callback functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param callback: Parameter for callback specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set cancel callback operation fails due to invalid parameters or system state."
            },
            {
              "name": "prepare_stream",
              "line_number": 184,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Prepare the audio stream for recognition.\nThis method initializes the PushAudioInputStream based on the specified audio format.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Prepare the audio stream for recognition.\\n\\nThis method initializes the PushAudioInputStream based on the specified audio format. This function implements prepare stream functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If prepare stream operation fails due to invalid parameters or system state."
            },
            {
              "name": "start",
              "line_number": 204,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Start speech recognition with Azure Monitor tracing",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Start speech recognition with Azure Monitor tracing.\\n\\nThis function implements start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start operation fails due to invalid parameters or system state."
            },
            {
              "name": "_start_recognition",
              "line_number": 265,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Build the Speech SDK recogniser **and start it** in one shot.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Build the Speech SDK recogniser **and start it** in one shot.\\n\\nThis function implements  start recognition functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  start recognition operation fails due to invalid parameters or system state."
            },
            {
              "name": "prepare_start",
              "line_number": 278,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Allocate PushAudioInputStream + SpeechRecognizer.\n\n\u2022 Neural front-end (noise-suppression / AEC / AGC) is enabled\nwhen `self.` is *True*.\n\u2022 Speaker diarisation is enabled when `self.enable_diarisation` is *True*.\n\u2022 All other behaviour (LID, semantic segmentation, VAD, etc.)\nfollows the class-level settings.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Allocate PushAudioInputStream + SpeechRecognizer.\\n\\n\u2022 Neural front-end (noise-suppression / AEC / AGC) is enabled\nwhen `self. This function implements prepare start functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If prepare start operation fails due to invalid parameters or system state."
            },
            {
              "name": "write_bytes",
              "line_number": 404,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "audio_chunk",
                  "annotation": "bytes"
                }
              ],
              "return_annotation": "None",
              "docstring": "Write audio bytes to the stream; avoid per-chunk spans to keep overhead low.\nEmits an event on the session span instead for coarse visibility.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Write audio bytes to the stream; avoid per-chunk spans to keep overhead low.\\n\\nEmits an event on the session span instead for coarse visibility. This function implements write bytes functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param audio_chunk: Parameter for audio chunk specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If write bytes operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop",
              "line_number": 426,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Stop recognition with tracing cleanup",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Stop recognition with tracing cleanup.\\n\\nThis function implements stop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If stop operation fails due to invalid parameters or system state."
            },
            {
              "name": "close_stream",
              "line_number": 447,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Close the audio stream with tracing",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Close the audio stream with tracing.\\n\\nThis function implements close stream functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If close stream operation fails due to invalid parameters or system state."
            },
            {
              "name": "_extract_lang",
              "line_number": 463,
              "is_async": false,
              "parameters": [
                {
                  "name": "evt",
                  "annotation": null
                }
              ],
              "return_annotation": "str",
              "docstring": "Return detected language code regardless of LID mode.\n\nPriority:\n1. evt.result.language   (direct field, works in Continuous)\n2. AutoDetectSourceLanguageResult property\n3. fallback ''  (caller will switch to default)",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Return detected language code regardless of LID mode.\\n\\nPriority:\n1. This function implements  extract lang functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param evt: Parameter for evt specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  extract lang operation fails due to invalid parameters or system state."
            },
            {
              "name": "_extract_speaker_id",
              "line_number": 484,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "evt",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute  extract speaker id operation.\\n\\nThis function implements  extract speaker id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  extract speaker id operation fails due to invalid parameters or system state."
            },
            {
              "name": "_on_recognizing",
              "line_number": 496,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "evt",
                  "annotation": "speechsdk.SpeechRecognitionEventArgs"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle partial recognition results with tracing",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle partial recognition results with tracing.\\n\\nThis function implements  on recognizing functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  on recognizing operation fails due to invalid parameters or system state."
            },
            {
              "name": "_on_recognized",
              "line_number": 541,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "evt",
                  "annotation": "speechsdk.SpeechRecognitionEventArgs"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle final recognition results with tracing",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle final recognition results with tracing.\\n\\nThis function implements  on recognized functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  on recognized operation fails due to invalid parameters or system state."
            },
            {
              "name": "_on_canceled",
              "line_number": 598,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "evt",
                  "annotation": "speechsdk.SessionEventArgs"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle cancellation events with tracing",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle cancellation events with tracing.\\n\\nThis function implements  on canceled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  on canceled operation fails due to invalid parameters or system state."
            },
            {
              "name": "_on_session_stopped",
              "line_number": 626,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "evt",
                  "annotation": "speechsdk.SessionEventArgs"
                }
              ],
              "return_annotation": "None",
              "docstring": "Handle session stopped events with tracing",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Handle session stopped events with tracing.\\n\\nThis function implements  on session stopped functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param evt: Parameter for evt specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  on session stopped operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a streamingspeechrecognizerfrombytes with comprehensive functionality.\n\nThis class provides streamingspeechrecognizerfrombytes operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized StreamingSpeechRecognizerFromBytes instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\speech\\text_to_speech.py",
      "functions": [
        {
          "name": "split_sentences",
          "line_number": 30,
          "is_async": false,
          "parameters": [
            {
              "name": "text",
              "annotation": "str"
            }
          ],
          "return_annotation": "List[str]",
          "docstring": "Very small sentence splitter that keeps delimiters.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Very small sentence splitter that keeps delimiters.\\n\\nThis function implements split sentences functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param text: String value representing text data.\\n:return: List of items matching the specified criteria.\\n:raises RuntimeError: If split sentences operation fails due to invalid parameters or system state."
        },
        {
          "name": "auto_style",
          "line_number": 43,
          "is_async": false,
          "parameters": [
            {
              "name": "lang_code",
              "annotation": "str"
            }
          ],
          "return_annotation": "Dict[str, str]",
          "docstring": "Return style / rate tweaks per language family.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return style / rate tweaks per language family.\\n\\nThis function implements auto style functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param lang_code: String value representing lang code data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If auto style operation fails due to invalid parameters or system state."
        },
        {
          "name": "ssml_voice_wrap",
          "line_number": 52,
          "is_async": false,
          "parameters": [
            {
              "name": "voice",
              "annotation": "str"
            },
            {
              "name": "language",
              "annotation": "str"
            },
            {
              "name": "sentences",
              "annotation": "List[str]"
            },
            {
              "name": "sanitizer",
              "annotation": "Callable[[str], str]"
            },
            {
              "name": "style",
              "annotation": "str"
            },
            {
              "name": "rate",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Build one SSML doc with a single <voice> tag for efficiency.\n\nArgs:\n    voice: Voice name to use\n    language: Language code\n    sentences: List of text sentences\n    sanitizer: Function to sanitize text for XML\n    style: Optional voice style\n    rate: Optional speech rate",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Build one SSML doc with a single <voice> tag for efficiency.\\n\\nArgs:\n    voice: Voice name to use\n    language: Language code\n    sentences: List of text sentences\n    sanitizer: Function to sanitize text for XML\n    style: Optional voice style\n    rate: Optional speech rate. This function implements ssml voice wrap functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param voice: String value representing voice data.\\n:param language: String value representing language data.\\n:param sentences: String value representing sentences data.\\n:param sanitizer: String value representing sanitizer data.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If ssml voice wrap operation fails due to invalid parameters or system state."
        },
        {
          "name": "_is_headless",
          "line_number": 108,
          "is_async": false,
          "parameters": [],
          "return_annotation": "bool",
          "docstring": "Very light\u2011weight heuristics:\n  \u2022 Linux & no DISPLAY   \u279c container / server\n  \u2022 CI env variable set  \u279c pipeline runner\nExtend if you need Windows detection (e.g. `%SESSIONNAME%`)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Very light\u2011weight heuristics:\n  \u2022 Linux & no DISPLAY   \u279c container / server\n  \u2022 CI env variable set  \u279c pipeline runner\nExtend if you need Windows detection (e.\\n\\ng. This function implements  is headless functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If  is headless operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 126,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "region",
              "annotation": "str"
            },
            {
              "name": "language",
              "annotation": "str"
            },
            {
              "name": "voice",
              "annotation": "str"
            },
            {
              "name": "format",
              "annotation": "speechsdk.SpeechSynthesisOutputFormat"
            },
            {
              "name": "playback",
              "annotation": "str"
            },
            {
              "name": "call_connection_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "enable_tracing",
              "annotation": "bool"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param region: String value representing region data.\\n:param language: String value representing language data.\\n:param voice: String value representing voice data.\\n:param format: Parameter for format specification.\\n:param playback: String value representing playback data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param enable_tracing: Boolean flag indicating enable tracing status.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_call_connection_id",
          "line_number": 175,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "call_connection_id",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Set the call connection ID for correlation in tracing and logging.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set the call connection ID for correlation in tracing and logging.\\n\\nThis function implements set call connection id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If set call connection id operation fails due to invalid parameters or system state."
        },
        {
          "name": "_create_speech_config",
          "line_number": 181,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Helper method to create and configure the SpeechConfig object.\nCreates a fresh config each time to handle token expiration.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Helper method to create and configure the SpeechConfig object.\\n\\nCreates a fresh config each time to handle token expiration. This function implements  create speech config functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  create speech config operation fails due to invalid parameters or system state."
        },
        {
          "name": "_create_speaker_synthesizer",
          "line_number": 239,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Build a SpeechSynthesizer for speaker playback, honoring the `playback` flag.\n\n    playback = \"never\"   \u279c always return None (no attempt)\n    playback = \"auto\"    \u279c create only if a speaker is likely present\n    playback = \"always\"  \u279c always create (falls back to null\u2011sink in head\u2011less env)\n\nReturns:\n    speechsdk.SpeechSynthesizer | None",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Build a SpeechSynthesizer for speaker playback, honoring the `playback` flag.\\n\\nplayback = \"never\"   \u279c always return None (no attempt)\n    playback = \"auto\"    \u279c create only if a speaker is likely present\n    playback = \"always\"  \u279c always create (falls back to null\u2011sink in head\u2011less env)\n\nReturns:\n    speechsdk. This function implements  create speaker synthesizer functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  create speaker synthesizer operation fails due to invalid parameters or system state."
        },
        {
          "name": "_sanitize",
          "line_number": 303,
          "is_async": false,
          "parameters": [
            {
              "name": "text",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Escape XML-significant characters (&, <, >, \", ') so the text\ncan be inserted inside an SSML <prosody> block safely.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Escape XML-significant characters (&, <, >, \", ') so the text\ncan be inserted inside an SSML <prosody> block safely.\\n\\n. This function implements  sanitize functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param text: String value representing text data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  sanitize operation fails due to invalid parameters or system state."
        },
        {
          "name": "start_speaking_text",
          "line_number": 310,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "voice",
              "annotation": "str"
            },
            {
              "name": "rate",
              "annotation": "str"
            },
            {
              "name": "style",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Synthesize and play text through the server's speakers (if available).\nIn headless environments, this will log a warning and skip playback.\n\nArgs:\n    text: Text to synthesize\n    voice: Voice name (defaults to self.voice)\n    rate: Speech rate (defaults to \"15%\")\n    style: Voice style (defaults to None)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Synthesize and play text through the server's speakers (if available).\\n\\nIn headless environments, this will log a warning and skip playback. This function implements start speaking text functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param voice: String value representing voice data.\\n:param rate: String value representing rate data.\\n:param style: String value representing style data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start speaking text operation fails due to invalid parameters or system state."
        },
        {
          "name": "_start_speaking_text_internal",
          "line_number": 383,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "voice",
              "annotation": "str"
            },
            {
              "name": "rate",
              "annotation": "str"
            },
            {
              "name": "style",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Internal method to perform speaker synthesis with tracing events",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Internal method to perform speaker synthesis with tracing events.\\n\\nThis function implements  start speaking text internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param voice: String value representing voice data.\\n:param rate: String value representing rate data.\\n:param style: String value representing style data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  start speaking text internal operation fails due to invalid parameters or system state."
        },
        {
          "name": "stop_speaking",
          "line_number": 459,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Stop current playback (if any).",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Stop current playback (if any).\\n\\nThis function implements stop speaking functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If stop speaking operation fails due to invalid parameters or system state."
        },
        {
          "name": "synthesize_speech",
          "line_number": 468,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "voice",
              "annotation": "str"
            },
            {
              "name": "style",
              "annotation": "str"
            },
            {
              "name": "rate",
              "annotation": "str"
            }
          ],
          "return_annotation": "bytes",
          "docstring": "Synthesizes text to speech in memory (returning WAV bytes).\nDoes NOT play audio on server speakers.\n\nArgs:\n    text: Text to synthesize\n    voice: Voice name (defaults to self.voice)\n    style: Voice style\n    rate: Speech rate",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Synthesizes text to speech in memory (returning WAV bytes).\\n\\nDoes NOT play audio on server speakers. This function implements synthesize speech functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param voice: String value representing voice data.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: Instance of bytes with operation results.\\n:raises RuntimeError: If synthesize speech operation fails due to invalid parameters or system state."
        },
        {
          "name": "_synthesize_speech_internal",
          "line_number": 508,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "voice",
              "annotation": "str"
            },
            {
              "name": "style",
              "annotation": "str"
            },
            {
              "name": "rate",
              "annotation": "str"
            }
          ],
          "return_annotation": "bytes",
          "docstring": "Internal method to perform synthesis with tracing events",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Internal method to perform synthesis with tracing events.\\n\\nThis function implements  synthesize speech internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param voice: String value representing voice data.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: Instance of bytes with operation results.\\n:raises RuntimeError: If  synthesize speech internal operation fails due to invalid parameters or system state."
        },
        {
          "name": "synthesize_to_base64_frames",
          "line_number": 602,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "sample_rate",
              "annotation": "int"
            },
            {
              "name": "voice",
              "annotation": "str"
            },
            {
              "name": "style",
              "annotation": "str"
            },
            {
              "name": "rate",
              "annotation": "str"
            }
          ],
          "return_annotation": "list[str]",
          "docstring": "Synthesize `text` via Azure TTS into raw 16-bit PCM mono at either 16 kHz or 24 kHz,\nthen split into 20 ms frames (50 fps), returning each frame as a base64 string.\n\nArgs:\n    text: Text to synthesize\n    sample_rate: 16000 or 24000\n    voice: Voice name (defaults to self.voice)\n    style: Voice style\n    rate: Speech rate\n\nReturns:\n    List of base64-encoded audio frames",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Synthesize `text` via Azure TTS into raw 16-bit PCM mono at either 16 kHz or 24 kHz,\nthen split into 20 ms frames (50 fps), returning each frame as a base64 string.\\n\\nArgs:\n    text: Text to synthesize\n    sample_rate: 16000 or 24000\n    voice: Voice name (defaults to self. This function implements synthesize to base64 frames functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param sample_rate: Integer value for sample rate specification.\\n:param voice: String value representing voice data.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If synthesize to base64 frames operation fails due to invalid parameters or system state."
        },
        {
          "name": "_synthesize_to_base64_frames_internal",
          "line_number": 656,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "sample_rate",
              "annotation": "int"
            },
            {
              "name": "voice",
              "annotation": "str"
            },
            {
              "name": "style",
              "annotation": "str"
            },
            {
              "name": "rate",
              "annotation": "str"
            }
          ],
          "return_annotation": "list[str]",
          "docstring": "Internal method to perform frame synthesis with tracing events",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Internal method to perform frame synthesis with tracing events.\\n\\nThis function implements  synthesize to base64 frames internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param sample_rate: Integer value for sample rate specification.\\n:param voice: String value representing voice data.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  synthesize to base64 frames internal operation fails due to invalid parameters or system state."
        },
        {
          "name": "validate_configuration",
          "line_number": 798,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Validate the Azure Speech configuration and return True if valid.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Validate the Azure Speech configuration and return True if valid.\\n\\nThis function implements validate configuration functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises ValueError: If validate configuration operation fails due to invalid parameters or system state."
        },
        {
          "name": "synthesize_to_pcm",
          "line_number": 849,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "voice",
              "annotation": "str"
            },
            {
              "name": "sample_rate",
              "annotation": "int"
            },
            {
              "name": "style",
              "annotation": "str"
            },
            {
              "name": "rate",
              "annotation": "str"
            }
          ],
          "return_annotation": "bytes",
          "docstring": "Synthesize text to PCM bytes with consistent voice parameter support.\n\nArgs:\n    text: Text to synthesize\n    voice: Voice name (defaults to self.voice)\n    sample_rate: Sample rate (16000, 24000, or 48000)\n    style: Voice style\n    rate: Speech rate",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Synthesize text to PCM bytes with consistent voice parameter support.\\n\\nArgs:\n    text: Text to synthesize\n    voice: Voice name (defaults to self. This function implements synthesize to pcm functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param voice: String value representing voice data.\\n:param sample_rate: Integer value for sample rate specification.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: Instance of bytes with operation results.\\n:raises RuntimeError: If synthesize to pcm operation fails due to invalid parameters or system state."
        },
        {
          "name": "split_pcm_to_base64_frames",
          "line_number": 918,
          "is_async": false,
          "parameters": [
            {
              "name": "pcm_bytes",
              "annotation": "bytes"
            },
            {
              "name": "sample_rate",
              "annotation": "int"
            }
          ],
          "return_annotation": "list[str]",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute split pcm to base64 frames operation.\\n\\nThis function implements split pcm to base64 frames functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param pcm_bytes: Parameter for pcm bytes specification.\\n:param sample_rate: Integer value for sample rate specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If split pcm to base64 frames operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "SpeechSynthesizer",
          "line_number": 122,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 126,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "region",
                  "annotation": "str"
                },
                {
                  "name": "language",
                  "annotation": "str"
                },
                {
                  "name": "voice",
                  "annotation": "str"
                },
                {
                  "name": "format",
                  "annotation": "speechsdk.SpeechSynthesisOutputFormat"
                },
                {
                  "name": "playback",
                  "annotation": "str"
                },
                {
                  "name": "call_connection_id",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "enable_tracing",
                  "annotation": "bool"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param region: String value representing region data.\\n:param language: String value representing language data.\\n:param voice: String value representing voice data.\\n:param format: Parameter for format specification.\\n:param playback: String value representing playback data.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:param enable_tracing: Boolean flag indicating enable tracing status.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_call_connection_id",
              "line_number": 175,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "call_connection_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Set the call connection ID for correlation in tracing and logging.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set the call connection ID for correlation in tracing and logging.\\n\\nThis function implements set call connection id functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_connection_id: Azure Communication Services call connection identifier.\\n:return: Instance of None with operation results.\\n:raises ConnectionError: If set call connection id operation fails due to invalid parameters or system state."
            },
            {
              "name": "_create_speech_config",
              "line_number": 181,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Helper method to create and configure the SpeechConfig object.\nCreates a fresh config each time to handle token expiration.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Helper method to create and configure the SpeechConfig object.\\n\\nCreates a fresh config each time to handle token expiration. This function implements  create speech config functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  create speech config operation fails due to invalid parameters or system state."
            },
            {
              "name": "_create_speaker_synthesizer",
              "line_number": 239,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "Build a SpeechSynthesizer for speaker playback, honoring the `playback` flag.\n\n    playback = \"never\"   \u279c always return None (no attempt)\n    playback = \"auto\"    \u279c create only if a speaker is likely present\n    playback = \"always\"  \u279c always create (falls back to null\u2011sink in head\u2011less env)\n\nReturns:\n    speechsdk.SpeechSynthesizer | None",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Build a SpeechSynthesizer for speaker playback, honoring the `playback` flag.\\n\\nplayback = \"never\"   \u279c always return None (no attempt)\n    playback = \"auto\"    \u279c create only if a speaker is likely present\n    playback = \"always\"  \u279c always create (falls back to null\u2011sink in head\u2011less env)\n\nReturns:\n    speechsdk. This function implements  create speaker synthesizer functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If  create speaker synthesizer operation fails due to invalid parameters or system state."
            },
            {
              "name": "_sanitize",
              "line_number": 303,
              "is_async": false,
              "parameters": [
                {
                  "name": "text",
                  "annotation": "str"
                }
              ],
              "return_annotation": "str",
              "docstring": "Escape XML-significant characters (&, <, >, \", ') so the text\ncan be inserted inside an SSML <prosody> block safely.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Escape XML-significant characters (&, <, >, \", ') so the text\ncan be inserted inside an SSML <prosody> block safely.\\n\\n. This function implements  sanitize functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param text: String value representing text data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  sanitize operation fails due to invalid parameters or system state."
            },
            {
              "name": "start_speaking_text",
              "line_number": 310,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "voice",
                  "annotation": "str"
                },
                {
                  "name": "rate",
                  "annotation": "str"
                },
                {
                  "name": "style",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Synthesize and play text through the server's speakers (if available).\nIn headless environments, this will log a warning and skip playback.\n\nArgs:\n    text: Text to synthesize\n    voice: Voice name (defaults to self.voice)\n    rate: Speech rate (defaults to \"15%\")\n    style: Voice style (defaults to None)",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Synthesize and play text through the server's speakers (if available).\\n\\nIn headless environments, this will log a warning and skip playback. This function implements start speaking text functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param voice: String value representing voice data.\\n:param rate: String value representing rate data.\\n:param style: String value representing style data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If start speaking text operation fails due to invalid parameters or system state."
            },
            {
              "name": "_start_speaking_text_internal",
              "line_number": 383,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "voice",
                  "annotation": "str"
                },
                {
                  "name": "rate",
                  "annotation": "str"
                },
                {
                  "name": "style",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Internal method to perform speaker synthesis with tracing events",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Internal method to perform speaker synthesis with tracing events.\\n\\nThis function implements  start speaking text internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param voice: String value representing voice data.\\n:param rate: String value representing rate data.\\n:param style: String value representing style data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  start speaking text internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "stop_speaking",
              "line_number": 459,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Stop current playback (if any).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Stop current playback (if any).\\n\\nThis function implements stop speaking functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If stop speaking operation fails due to invalid parameters or system state."
            },
            {
              "name": "synthesize_speech",
              "line_number": 468,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "voice",
                  "annotation": "str"
                },
                {
                  "name": "style",
                  "annotation": "str"
                },
                {
                  "name": "rate",
                  "annotation": "str"
                }
              ],
              "return_annotation": "bytes",
              "docstring": "Synthesizes text to speech in memory (returning WAV bytes).\nDoes NOT play audio on server speakers.\n\nArgs:\n    text: Text to synthesize\n    voice: Voice name (defaults to self.voice)\n    style: Voice style\n    rate: Speech rate",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Synthesizes text to speech in memory (returning WAV bytes).\\n\\nDoes NOT play audio on server speakers. This function implements synthesize speech functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param voice: String value representing voice data.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: Instance of bytes with operation results.\\n:raises RuntimeError: If synthesize speech operation fails due to invalid parameters or system state."
            },
            {
              "name": "_synthesize_speech_internal",
              "line_number": 508,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "voice",
                  "annotation": "str"
                },
                {
                  "name": "style",
                  "annotation": "str"
                },
                {
                  "name": "rate",
                  "annotation": "str"
                }
              ],
              "return_annotation": "bytes",
              "docstring": "Internal method to perform synthesis with tracing events",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Internal method to perform synthesis with tracing events.\\n\\nThis function implements  synthesize speech internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param voice: String value representing voice data.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: Instance of bytes with operation results.\\n:raises RuntimeError: If  synthesize speech internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "synthesize_to_base64_frames",
              "line_number": 602,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "sample_rate",
                  "annotation": "int"
                },
                {
                  "name": "voice",
                  "annotation": "str"
                },
                {
                  "name": "style",
                  "annotation": "str"
                },
                {
                  "name": "rate",
                  "annotation": "str"
                }
              ],
              "return_annotation": "list[str]",
              "docstring": "Synthesize `text` via Azure TTS into raw 16-bit PCM mono at either 16 kHz or 24 kHz,\nthen split into 20 ms frames (50 fps), returning each frame as a base64 string.\n\nArgs:\n    text: Text to synthesize\n    sample_rate: 16000 or 24000\n    voice: Voice name (defaults to self.voice)\n    style: Voice style\n    rate: Speech rate\n\nReturns:\n    List of base64-encoded audio frames",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Synthesize `text` via Azure TTS into raw 16-bit PCM mono at either 16 kHz or 24 kHz,\nthen split into 20 ms frames (50 fps), returning each frame as a base64 string.\\n\\nArgs:\n    text: Text to synthesize\n    sample_rate: 16000 or 24000\n    voice: Voice name (defaults to self. This function implements synthesize to base64 frames functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param sample_rate: Integer value for sample rate specification.\\n:param voice: String value representing voice data.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If synthesize to base64 frames operation fails due to invalid parameters or system state."
            },
            {
              "name": "_synthesize_to_base64_frames_internal",
              "line_number": 656,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "sample_rate",
                  "annotation": "int"
                },
                {
                  "name": "voice",
                  "annotation": "str"
                },
                {
                  "name": "style",
                  "annotation": "str"
                },
                {
                  "name": "rate",
                  "annotation": "str"
                }
              ],
              "return_annotation": "list[str]",
              "docstring": "Internal method to perform frame synthesis with tracing events",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Internal method to perform frame synthesis with tracing events.\\n\\nThis function implements  synthesize to base64 frames internal functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param sample_rate: Integer value for sample rate specification.\\n:param voice: String value representing voice data.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If  synthesize to base64 frames internal operation fails due to invalid parameters or system state."
            },
            {
              "name": "validate_configuration",
              "line_number": 798,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Validate the Azure Speech configuration and return True if valid.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Validate the Azure Speech configuration and return True if valid.\\n\\nThis function implements validate configuration functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises ValueError: If validate configuration operation fails due to invalid parameters or system state."
            },
            {
              "name": "synthesize_to_pcm",
              "line_number": 849,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "text",
                  "annotation": "str"
                },
                {
                  "name": "voice",
                  "annotation": "str"
                },
                {
                  "name": "sample_rate",
                  "annotation": "int"
                },
                {
                  "name": "style",
                  "annotation": "str"
                },
                {
                  "name": "rate",
                  "annotation": "str"
                }
              ],
              "return_annotation": "bytes",
              "docstring": "Synthesize text to PCM bytes with consistent voice parameter support.\n\nArgs:\n    text: Text to synthesize\n    voice: Voice name (defaults to self.voice)\n    sample_rate: Sample rate (16000, 24000, or 48000)\n    style: Voice style\n    rate: Speech rate",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Synthesize text to PCM bytes with consistent voice parameter support.\\n\\nArgs:\n    text: Text to synthesize\n    voice: Voice name (defaults to self. This function implements synthesize to pcm functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param text: String value representing text data.\\n:param voice: String value representing voice data.\\n:param sample_rate: Integer value for sample rate specification.\\n:param style: String value representing style data.\\n:param rate: String value representing rate data.\\n:return: Instance of bytes with operation results.\\n:raises RuntimeError: If synthesize to pcm operation fails due to invalid parameters or system state."
            },
            {
              "name": "split_pcm_to_base64_frames",
              "line_number": 918,
              "is_async": false,
              "parameters": [
                {
                  "name": "pcm_bytes",
                  "annotation": "bytes"
                },
                {
                  "name": "sample_rate",
                  "annotation": "int"
                }
              ],
              "return_annotation": "list[str]",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute split pcm to base64 frames operation.\\n\\nThis function implements split pcm to base64 frames functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param pcm_bytes: Parameter for pcm bytes specification.\\n:param sample_rate: Integer value for sample rate specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If split pcm to base64 frames operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a speechsynthesizer with comprehensive functionality.\n\nThis class provides speechsynthesizer operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized SpeechSynthesizer instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\speech\\utils_audio.py",
      "functions": [
        {
          "name": "check_audio_file",
          "line_number": 8,
          "is_async": false,
          "parameters": [
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Checks the format of the audio stream from the provided WAV file and logs the details.\nReturns False if any of the required conditions are not met. Otherwise, returns True.\n\nRequired conditions for the audio format:\n- PCM format (int-16, signed)\n- One channel (mono)\n- 16 bits per sample\n- 8,000 or 16,000 samples per second (16,000 bytes or 32,000 bytes per second)\n- Two-block aligned (16 bits including padding for a sample)\n\nParameters:\nfile_path (str): Path to the WAV file to be checked.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Checks the format of the audio stream from the provided WAV file and logs the details.\\n\\nReturns False if any of the required conditions are not met. This function implements check audio file functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param file_path: String value representing file path data.\\n:return: Boolean value indicating operation success status.\\n:raises ValueError: If check audio file operation fails due to invalid parameters or system state."
        },
        {
          "name": "log_audio_characteristics",
          "line_number": 59,
          "is_async": false,
          "parameters": [
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": "Logs the format of the audio stream from the provided WAV file.\nParameters:\nfile_path (str): Path to the WAV file to be checked.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Logs the format of the audio stream from the provided WAV file.\\n\\nParameters:\nfile_path (str): Path to the WAV file to be checked. This function implements log audio characteristics functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param file_path: String value representing file path data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If log audio characteristics operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\speech\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\stateful\\state_managment.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 33,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "session_id",
              "annotation": "Optional[str]"
            },
            {
              "name": "auto_refresh_interval",
              "annotation": "Optional[float]"
            },
            {
              "name": "redis_mgr",
              "annotation": "Optional[AzureRedisManager]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Constructor for MemoManager.\n\nParameters:\nsession_id (str): the session ID (default: a new UUID4)\nauto_refresh_interval (float): optional interval in seconds for auto-refresh (default: None)\nredis_mgr (AzureRedisManager): optional Redis manager (default: None)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Constructor for MemoManager.\\n\\nParameters:\nsession_id (str): the session ID (default: a new UUID4)\nauto_refresh_interval (float): optional interval in seconds for auto-refresh (default: None)\nredis_mgr (AzureRedisManager): optional Redis manager (default: None). This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param auto_refresh_interval: Parameter for auto refresh interval specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "histories",
          "line_number": 63,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, List[Dict[str, str]]]",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute histories operation.\\n\\nThis function implements histories functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If histories operation fails due to invalid parameters or system state."
        },
        {
          "name": "histories",
          "line_number": 67,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "value",
              "annotation": "Dict[str, List[Dict[str, str]]]"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute histories operation.\\n\\nThis function implements histories functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param value: String value representing value data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If histories operation fails due to invalid parameters or system state."
        },
        {
          "name": "context",
          "line_number": 71,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, Any]",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute context operation.\\n\\nThis function implements context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If context operation fails due to invalid parameters or system state."
        },
        {
          "name": "context",
          "line_number": 75,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "value",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "None",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute context operation.\\n\\nThis function implements context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param value: String value representing value data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If context operation fails due to invalid parameters or system state."
        },
        {
          "name": "history",
          "line_number": 80,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "ChatHistory",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute history operation.\\n\\nThis function implements history functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of ChatHistory with operation results.\\n:raises RuntimeError: If history operation fails due to invalid parameters or system state."
        },
        {
          "name": "build_redis_key",
          "line_number": 84,
          "is_async": false,
          "parameters": [
            {
              "name": "session_id",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": "Builds the Redis key for a session.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Builds the Redis key for a session.\\n\\nThis function implements build redis key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If build redis key operation fails due to invalid parameters or system state."
        },
        {
          "name": "to_redis_dict",
          "line_number": 88,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, str]",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute to redis dict operation.\\n\\nThis function implements to redis dict functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If to redis dict operation fails due to invalid parameters or system state."
        },
        {
          "name": "from_redis",
          "line_number": 95,
          "is_async": false,
          "parameters": [
            {
              "name": "cls",
              "annotation": null
            },
            {
              "name": "session_id",
              "annotation": "str"
            },
            {
              "name": "redis_mgr",
              "annotation": "AzureRedisManager"
            }
          ],
          "return_annotation": "'MemoManager'",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute from redis operation.\\n\\nThis function implements from redis functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cls: Parameter for cls specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Instance of 'MemoManager' with operation results.\\n:raises RuntimeError: If from redis operation fails due to invalid parameters or system state."
        },
        {
          "name": "from_redis_with_manager",
          "line_number": 106,
          "is_async": false,
          "parameters": [
            {
              "name": "cls",
              "annotation": null
            },
            {
              "name": "session_id",
              "annotation": "str"
            },
            {
              "name": "redis_mgr",
              "annotation": "AzureRedisManager"
            }
          ],
          "return_annotation": "'MemoManager'",
          "docstring": "Alternative constructor that stores the manager.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Alternative constructor that stores the manager.\\n\\nThis function implements from redis with manager functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cls: Parameter for cls specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Instance of 'MemoManager' with operation results.\\n:raises RuntimeError: If from redis with manager operation fails due to invalid parameters or system state."
        },
        {
          "name": "persist_to_redis",
          "line_number": 121,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "redis_mgr",
              "annotation": "AzureRedisManager"
            },
            {
              "name": "ttl_seconds",
              "annotation": "Optional[int]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Persist session state to Redis synchronously.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Persist session state to Redis synchronously.\\n\\nThis function implements persist to redis functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param ttl_seconds: Integer value for ttl seconds specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If persist to redis operation fails due to invalid parameters or system state."
        },
        {
          "name": "is_tts_interrupted",
          "line_number": 161,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Return the in-memory TTS interrupted flag.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return the in-memory TTS interrupted flag.\\n\\nThis function implements is tts interrupted functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is tts interrupted operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_tts_interrupted",
          "line_number": 165,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "value",
              "annotation": "bool"
            }
          ],
          "return_annotation": "None",
          "docstring": "Set the TTS interrupted flag in local context and optionally in Redis.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set the TTS interrupted flag in local context and optionally in Redis.\\n\\nThis function implements set tts interrupted functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param value: Boolean flag indicating value status.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set tts interrupted operation fails due to invalid parameters or system state."
        },
        {
          "name": "update_slots",
          "line_number": 192,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "slots",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Merge new slot values into core memory under 'slots'.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Merge new slot values into core memory under 'slots'.\\n\\nThis function implements update slots functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param slots: String value representing slots data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If update slots operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_slot",
          "line_number": 203,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "slot_name",
              "annotation": "str"
            },
            {
              "name": "default",
              "annotation": "Any"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Get a slot value from core memory.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get a slot value from core memory.\\n\\nThis function implements get slot functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param slot_name: String value representing slot name data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get slot operation fails due to invalid parameters or system state."
        },
        {
          "name": "persist_tool_output",
          "line_number": 209,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "tool_name",
              "annotation": "str"
            },
            {
              "name": "result",
              "annotation": "Dict[str, Any]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Store last result for each backend tool in core memory under 'tool_outputs'.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Store last result for each backend tool in core memory under 'tool_outputs'.\\n\\nThis function implements persist tool output functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param tool_name: String value representing tool name data.\\n:param result: String value representing result data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If persist tool output operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_tool_output",
          "line_number": 220,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "tool_name",
              "annotation": "str"
            },
            {
              "name": "default",
              "annotation": "Any"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Get last tool output from core memory.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get last tool output from core memory.\\n\\nThis function implements get tool output functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param tool_name: String value representing tool name data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get tool output operation fails due to invalid parameters or system state."
        },
        {
          "name": "note_latency",
          "line_number": 227,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "stage",
              "annotation": "str"
            },
            {
              "name": "start_t",
              "annotation": "float"
            },
            {
              "name": "end_t",
              "annotation": "float"
            }
          ],
          "return_annotation": "None",
          "docstring": "Record latency for a stage.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Record latency for a stage.\\n\\nThis function implements note latency functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stage: String value representing stage data.\\n:param start_t: Parameter for start t specification.\\n:param end_t: Parameter for end t specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If note latency operation fails due to invalid parameters or system state."
        },
        {
          "name": "latency_summary",
          "line_number": 231,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "Dict[str, Dict[str, float]]",
          "docstring": "Get latency summary.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get latency summary.\\n\\nThis function implements latency summary functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If latency summary operation fails due to invalid parameters or system state."
        },
        {
          "name": "append_to_history",
          "line_number": 236,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent",
              "annotation": "str"
            },
            {
              "name": "role",
              "annotation": "str"
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Append *content* with *role* to the specified *agent* thread.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Append *content* with *role* to the specified *agent* thread.\\n\\nThis function implements append to history functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent: String value representing agent data.\\n:param role: String value representing role data.\\n:param content: String value representing content data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If append to history operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_history",
          "line_number": 240,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_name",
              "annotation": "str"
            }
          ],
          "return_annotation": "List[Dict[str, str]]",
          "docstring": "Return (and create if missing) the history for *agent_name*.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return (and create if missing) the history for *agent_name*.\\n\\nThis function implements get history functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent_name: String value representing agent name data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get history operation fails due to invalid parameters or system state."
        },
        {
          "name": "clear_history",
          "line_number": 244,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_name",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "None",
          "docstring": "Clear chat history for *agent_name* or **all** if *None*.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Clear chat history for *agent_name* or **all** if *None*.\\n\\nThis function implements clear history functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent_name: String value representing agent name data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If clear history operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_context",
          "line_number": 251,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "default",
              "annotation": "Any"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Shorthand for self.corememory.get().\nReturns *default* when the key is absent.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Shorthand for self.\\n\\nThis function implements get context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get context operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_context",
          "line_number": 258,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "value",
              "annotation": "Any"
            }
          ],
          "return_annotation": "None",
          "docstring": "Overwrite *key* with *value* in core memory.\nUse `await self.persist()` afterwards if you need the change\nflushed to Redis immediately.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Overwrite *key* with *value* in core memory.\\n\\nUse `await self. This function implements set context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set context operation fails due to invalid parameters or system state."
        },
        {
          "name": "update_context",
          "line_number": 266,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "value",
              "annotation": "Any"
            }
          ],
          "return_annotation": "None",
          "docstring": "Merge *value* into an existing dict stored under *key*.\nIf the current value is not a mapping, it is replaced.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Merge *value* into an existing dict stored under *key*.\\n\\nIf the current value is not a mapping, it is replaced. This function implements update context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If update context operation fails due to invalid parameters or system state."
        },
        {
          "name": "ensure_system_prompt",
          "line_number": 279,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_name",
              "annotation": "str"
            },
            {
              "name": "system_prompt",
              "annotation": "str"
            }
          ],
          "return_annotation": "None",
          "docstring": "Ensure the system prompt is the first message in the agent's history.\nAlways updates it each call.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Ensure the system prompt is the first message in the agent's history.\\n\\nThis function implements ensure system prompt functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent_name: String value representing agent name data.\\n:param system_prompt: String value representing system prompt data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If ensure system prompt operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_value_from_corememory",
          "line_number": 295,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "default",
              "annotation": "Any"
            }
          ],
          "return_annotation": "Any",
          "docstring": "Get a value from core memory.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get a value from core memory.\\n\\nThis function implements get value from corememory functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get value from corememory operation fails due to invalid parameters or system state."
        },
        {
          "name": "set_corememory",
          "line_number": 301,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "value",
              "annotation": "Any"
            }
          ],
          "return_annotation": "None",
          "docstring": "Set a value in core memory.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Set a value in core memory.\\n\\nThis function implements set corememory functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set corememory operation fails due to invalid parameters or system state."
        },
        {
          "name": "update_corememory",
          "line_number": 307,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "key",
              "annotation": "str"
            },
            {
              "name": "value",
              "annotation": "Any"
            }
          ],
          "return_annotation": "None",
          "docstring": "Update a value in core memory.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Update a value in core memory.\\n\\nThis function implements update corememory functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If update corememory operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_queue_size",
          "line_number": 347,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "int",
          "docstring": "Get the current queue size.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get the current queue size.\\n\\nThis function implements get queue size functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If get queue size operation fails due to invalid parameters or system state."
        },
        {
          "name": "is_queue_processing",
          "line_number": 355,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Check if the queue is currently being processed.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if the queue is currently being processed.\\n\\nThis function implements is queue processing functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is queue processing operation fails due to invalid parameters or system state."
        },
        {
          "name": "is_media_cancelled",
          "line_number": 363,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "bool",
          "docstring": "Check if media was cancelled due to interrupt.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Check if media was cancelled due to interrupt.\\n\\nThis function implements is media cancelled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is media cancelled operation fails due to invalid parameters or system state."
        },
        {
          "name": "refresh_from_redis",
          "line_number": 398,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "redis_mgr",
              "annotation": "AzureRedisManager"
            }
          ],
          "return_annotation": "bool",
          "docstring": "Synchronous version of refresh_from_redis_async.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Synchronous version of refresh_from_redis_async.\\n\\nThis function implements refresh from redis functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If refresh from redis operation fails due to invalid parameters or system state."
        },
        {
          "name": "enable_auto_refresh",
          "line_number": 458,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "redis_mgr",
              "annotation": "AzureRedisManager"
            },
            {
              "name": "interval_seconds",
              "annotation": "float"
            }
          ],
          "return_annotation": "None",
          "docstring": "Enable automatic refresh of data from Redis at specified intervals.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Enable automatic refresh of data from Redis at specified intervals.\\n\\nThis function implements enable auto refresh functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param interval_seconds: Parameter for interval seconds specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If enable auto refresh operation fails due to invalid parameters or system state."
        },
        {
          "name": "disable_auto_refresh",
          "line_number": 471,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": "None",
          "docstring": "Disable automatic refresh.",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Disable automatic refresh.\\n\\nThis function implements disable auto refresh functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If disable auto refresh operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "MemoManager",
          "line_number": 25,
          "docstring": "Owns a conversation session \u2013 core memory, chat history & runtime state.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 33,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "auto_refresh_interval",
                  "annotation": "Optional[float]"
                },
                {
                  "name": "redis_mgr",
                  "annotation": "Optional[AzureRedisManager]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Constructor for MemoManager.\n\nParameters:\nsession_id (str): the session ID (default: a new UUID4)\nauto_refresh_interval (float): optional interval in seconds for auto-refresh (default: None)\nredis_mgr (AzureRedisManager): optional Redis manager (default: None)",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Constructor for MemoManager.\\n\\nParameters:\nsession_id (str): the session ID (default: a new UUID4)\nauto_refresh_interval (float): optional interval in seconds for auto-refresh (default: None)\nredis_mgr (AzureRedisManager): optional Redis manager (default: None). This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param auto_refresh_interval: Parameter for auto refresh interval specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "histories",
              "line_number": 63,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, List[Dict[str, str]]]",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute histories operation.\\n\\nThis function implements histories functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If histories operation fails due to invalid parameters or system state."
            },
            {
              "name": "histories",
              "line_number": 67,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "value",
                  "annotation": "Dict[str, List[Dict[str, str]]]"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute histories operation.\\n\\nThis function implements histories functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param value: String value representing value data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If histories operation fails due to invalid parameters or system state."
            },
            {
              "name": "context",
              "line_number": 71,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, Any]",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute context operation.\\n\\nThis function implements context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If context operation fails due to invalid parameters or system state."
            },
            {
              "name": "context",
              "line_number": 75,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "value",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "None",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute context operation.\\n\\nThis function implements context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param value: String value representing value data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If context operation fails due to invalid parameters or system state."
            },
            {
              "name": "history",
              "line_number": 80,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "ChatHistory",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute history operation.\\n\\nThis function implements history functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of ChatHistory with operation results.\\n:raises RuntimeError: If history operation fails due to invalid parameters or system state."
            },
            {
              "name": "build_redis_key",
              "line_number": 84,
              "is_async": false,
              "parameters": [
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "str",
              "docstring": "Builds the Redis key for a session.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Builds the Redis key for a session.\\n\\nThis function implements build redis key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If build redis key operation fails due to invalid parameters or system state."
            },
            {
              "name": "to_redis_dict",
              "line_number": 88,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, str]",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute to redis dict operation.\\n\\nThis function implements to redis dict functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If to redis dict operation fails due to invalid parameters or system state."
            },
            {
              "name": "from_redis",
              "line_number": 95,
              "is_async": false,
              "parameters": [
                {
                  "name": "cls",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                }
              ],
              "return_annotation": "'MemoManager'",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute from redis operation.\\n\\nThis function implements from redis functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cls: Parameter for cls specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Instance of 'MemoManager' with operation results.\\n:raises RuntimeError: If from redis operation fails due to invalid parameters or system state."
            },
            {
              "name": "from_redis_with_manager",
              "line_number": 106,
              "is_async": false,
              "parameters": [
                {
                  "name": "cls",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                }
              ],
              "return_annotation": "'MemoManager'",
              "docstring": "Alternative constructor that stores the manager.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Alternative constructor that stores the manager.\\n\\nThis function implements from redis with manager functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param cls: Parameter for cls specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Instance of 'MemoManager' with operation results.\\n:raises RuntimeError: If from redis with manager operation fails due to invalid parameters or system state."
            },
            {
              "name": "persist",
              "line_number": 114,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "Optional[AzureRedisManager]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Persist using provided or stored redis manager.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Persist using provided or stored redis manager.\\n\\nThis function implements persist functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If persist operation fails due to invalid parameters or system state."
            },
            {
              "name": "persist_to_redis",
              "line_number": 121,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                },
                {
                  "name": "ttl_seconds",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Persist session state to Redis synchronously.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Persist session state to Redis synchronously.\\n\\nThis function implements persist to redis functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param ttl_seconds: Integer value for ttl seconds specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If persist to redis operation fails due to invalid parameters or system state."
            },
            {
              "name": "persist_to_redis_async",
              "line_number": 134,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                },
                {
                  "name": "ttl_seconds",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Async version of persist_to_redis to avoid blocking the event loop.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Async version of persist_to_redis to avoid blocking the event loop.\\n\\nThis function implements persist to redis async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param ttl_seconds: Integer value for ttl seconds specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If persist to redis async operation fails due to invalid parameters or system state."
            },
            {
              "name": "is_tts_interrupted",
              "line_number": 161,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Return the in-memory TTS interrupted flag.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Return the in-memory TTS interrupted flag.\\n\\nThis function implements is tts interrupted functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is tts interrupted operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_tts_interrupted",
              "line_number": 165,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "value",
                  "annotation": "bool"
                }
              ],
              "return_annotation": "None",
              "docstring": "Set the TTS interrupted flag in local context and optionally in Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set the TTS interrupted flag in local context and optionally in Redis.\\n\\nThis function implements set tts interrupted functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param value: Boolean flag indicating value status.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set tts interrupted operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_tts_interrupted_live",
              "line_number": 170,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "Optional[AzureRedisManager]"
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "bool"
                }
              ],
              "return_annotation": "None",
              "docstring": "Set the TTS interrupted flag in Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set the TTS interrupted flag in Redis.\\n\\nThis function implements set tts interrupted live functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param value: Boolean flag indicating value status.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set tts interrupted live operation fails due to invalid parameters or system state."
            },
            {
              "name": "is_tts_interrupted_live",
              "line_number": 178,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "Optional[AzureRedisManager]"
                },
                {
                  "name": "session_id",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if TTS is interrupted, optionally checking live Redis data.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if TTS is interrupted, optionally checking live Redis data.\\n\\nThis function implements is tts interrupted live functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is tts interrupted live operation fails due to invalid parameters or system state."
            },
            {
              "name": "update_slots",
              "line_number": 192,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "slots",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Merge new slot values into core memory under 'slots'.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Merge new slot values into core memory under 'slots'.\\n\\nThis function implements update slots functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param slots: String value representing slots data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If update slots operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_slot",
              "line_number": 203,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "slot_name",
                  "annotation": "str"
                },
                {
                  "name": "default",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "Any",
              "docstring": "Get a slot value from core memory.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get a slot value from core memory.\\n\\nThis function implements get slot functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param slot_name: String value representing slot name data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get slot operation fails due to invalid parameters or system state."
            },
            {
              "name": "persist_tool_output",
              "line_number": 209,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "tool_name",
                  "annotation": "str"
                },
                {
                  "name": "result",
                  "annotation": "Dict[str, Any]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Store last result for each backend tool in core memory under 'tool_outputs'.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Store last result for each backend tool in core memory under 'tool_outputs'.\\n\\nThis function implements persist tool output functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param tool_name: String value representing tool name data.\\n:param result: String value representing result data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If persist tool output operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_tool_output",
              "line_number": 220,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "tool_name",
                  "annotation": "str"
                },
                {
                  "name": "default",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "Any",
              "docstring": "Get last tool output from core memory.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get last tool output from core memory.\\n\\nThis function implements get tool output functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param tool_name: String value representing tool name data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get tool output operation fails due to invalid parameters or system state."
            },
            {
              "name": "note_latency",
              "line_number": 227,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "stage",
                  "annotation": "str"
                },
                {
                  "name": "start_t",
                  "annotation": "float"
                },
                {
                  "name": "end_t",
                  "annotation": "float"
                }
              ],
              "return_annotation": "None",
              "docstring": "Record latency for a stage.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Record latency for a stage.\\n\\nThis function implements note latency functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param stage: String value representing stage data.\\n:param start_t: Parameter for start t specification.\\n:param end_t: Parameter for end t specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If note latency operation fails due to invalid parameters or system state."
            },
            {
              "name": "latency_summary",
              "line_number": 231,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Dict[str, Dict[str, float]]",
              "docstring": "Get latency summary.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get latency summary.\\n\\nThis function implements latency summary functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If latency summary operation fails due to invalid parameters or system state."
            },
            {
              "name": "append_to_history",
              "line_number": 236,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "agent",
                  "annotation": "str"
                },
                {
                  "name": "role",
                  "annotation": "str"
                },
                {
                  "name": "content",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Append *content* with *role* to the specified *agent* thread.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Append *content* with *role* to the specified *agent* thread.\\n\\nThis function implements append to history functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent: String value representing agent data.\\n:param role: String value representing role data.\\n:param content: String value representing content data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If append to history operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_history",
              "line_number": 240,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "agent_name",
                  "annotation": "str"
                }
              ],
              "return_annotation": "List[Dict[str, str]]",
              "docstring": "Return (and create if missing) the history for *agent_name*.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Return (and create if missing) the history for *agent_name*.\\n\\nThis function implements get history functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent_name: String value representing agent name data.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get history operation fails due to invalid parameters or system state."
            },
            {
              "name": "clear_history",
              "line_number": 244,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "agent_name",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": "None",
              "docstring": "Clear chat history for *agent_name* or **all** if *None*.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Clear chat history for *agent_name* or **all** if *None*.\\n\\nThis function implements clear history functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent_name: String value representing agent name data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If clear history operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_context",
              "line_number": 251,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "default",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "Any",
              "docstring": "Shorthand for self.corememory.get().\nReturns *default* when the key is absent.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Shorthand for self.\\n\\nThis function implements get context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get context operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_context",
              "line_number": 258,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "None",
              "docstring": "Overwrite *key* with *value* in core memory.\nUse `await self.persist()` afterwards if you need the change\nflushed to Redis immediately.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Overwrite *key* with *value* in core memory.\\n\\nUse `await self. This function implements set context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set context operation fails due to invalid parameters or system state."
            },
            {
              "name": "update_context",
              "line_number": 266,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "None",
              "docstring": "Merge *value* into an existing dict stored under *key*.\nIf the current value is not a mapping, it is replaced.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Merge *value* into an existing dict stored under *key*.\\n\\nIf the current value is not a mapping, it is replaced. This function implements update context functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If update context operation fails due to invalid parameters or system state."
            },
            {
              "name": "ensure_system_prompt",
              "line_number": 279,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "agent_name",
                  "annotation": "str"
                },
                {
                  "name": "system_prompt",
                  "annotation": "str"
                }
              ],
              "return_annotation": "None",
              "docstring": "Ensure the system prompt is the first message in the agent's history.\nAlways updates it each call.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Ensure the system prompt is the first message in the agent's history.\\n\\nThis function implements ensure system prompt functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param agent_name: String value representing agent name data.\\n:param system_prompt: String value representing system prompt data.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If ensure system prompt operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_value_from_corememory",
              "line_number": 295,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "default",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "Any",
              "docstring": "Get a value from core memory.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get a value from core memory.\\n\\nThis function implements get value from corememory functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get value from corememory operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_corememory",
              "line_number": 301,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "None",
              "docstring": "Set a value in core memory.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set a value in core memory.\\n\\nThis function implements set corememory functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set corememory operation fails due to invalid parameters or system state."
            },
            {
              "name": "update_corememory",
              "line_number": 307,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "None",
              "docstring": "Update a value in core memory.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Update a value in core memory.\\n\\nThis function implements update corememory functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If update corememory operation fails due to invalid parameters or system state."
            },
            {
              "name": "enqueue_message",
              "line_number": 314,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "response_text",
                  "annotation": "str"
                },
                {
                  "name": "use_ssml",
                  "annotation": "bool"
                },
                {
                  "name": "voice_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "locale",
                  "annotation": "str"
                },
                {
                  "name": "participants",
                  "annotation": "Optional[List[Any]]"
                },
                {
                  "name": "max_retries",
                  "annotation": "int"
                },
                {
                  "name": "initial_backoff",
                  "annotation": "float"
                },
                {
                  "name": "transcription_resume_delay",
                  "annotation": "float"
                }
              ],
              "return_annotation": "None",
              "docstring": "Add a message to the queue for sequential playback.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Add a message to the queue for sequential playback.\\n\\nThis function implements enqueue message functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param response_text: String value representing response text data.\\n:param use_ssml: Boolean flag indicating use ssml status.\\n:param voice_name: String value representing voice name data.\\n:param locale: String value representing locale data.\\n:param participants: Parameter for participants specification.\\n:param max_retries: Integer value for max retries specification.\\n:param initial_backoff: Parameter for initial backoff specification.\\n:param transcription_resume_delay: Parameter for transcription resume delay specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If enqueue message operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_next_message",
              "line_number": 339,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "Optional[Dict[str, Any]]",
              "docstring": "Get the next message from the queue.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get the next message from the queue.\\n\\nThis function implements get next message functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get next message operation fails due to invalid parameters or system state."
            },
            {
              "name": "clear_queue",
              "line_number": 343,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Clear all queued messages.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Clear all queued messages.\\n\\nThis function implements clear queue functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If clear queue operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_queue_size",
              "line_number": 347,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "int",
              "docstring": "Get the current queue size.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get the current queue size.\\n\\nThis function implements get queue size functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If get queue size operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_queue_processing_status",
              "line_number": 351,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "is_processing",
                  "annotation": "bool"
                }
              ],
              "return_annotation": "None",
              "docstring": "Set the queue processing status.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set the queue processing status.\\n\\nThis function implements set queue processing status functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param is_processing: Boolean flag indicating is processing status.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set queue processing status operation fails due to invalid parameters or system state."
            },
            {
              "name": "is_queue_processing",
              "line_number": 355,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if the queue is currently being processed.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if the queue is currently being processed.\\n\\nThis function implements is queue processing functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is queue processing operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_media_cancelled",
              "line_number": 359,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "cancelled",
                  "annotation": "bool"
                }
              ],
              "return_annotation": "None",
              "docstring": "Set the media cancellation flag.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set the media cancellation flag.\\n\\nThis function implements set media cancelled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param cancelled: Boolean flag indicating cancelled status.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If set media cancelled operation fails due to invalid parameters or system state."
            },
            {
              "name": "is_media_cancelled",
              "line_number": 363,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check if media was cancelled due to interrupt.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check if media was cancelled due to interrupt.\\n\\nThis function implements is media cancelled functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If is media cancelled operation fails due to invalid parameters or system state."
            },
            {
              "name": "reset_queue_on_interrupt",
              "line_number": 367,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Reset the queue state when an interrupt is detected.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Reset the queue state when an interrupt is detected.\\n\\nThis function implements reset queue on interrupt functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If reset queue on interrupt operation fails due to invalid parameters or system state."
            },
            {
              "name": "refresh_from_redis_async",
              "line_number": 372,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Refresh the current session with live data from Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Refresh the current session with live data from Redis.\\n\\nThis function implements refresh from redis async functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If refresh from redis async operation fails due to invalid parameters or system state."
            },
            {
              "name": "refresh_from_redis",
              "line_number": 398,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Synchronous version of refresh_from_redis_async.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Synchronous version of refresh_from_redis_async.\\n\\nThis function implements refresh from redis functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If refresh from redis operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_live_context_value",
              "line_number": 424,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "default",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "Any",
              "docstring": "Get a specific context value from live Redis data without fully refreshing the session.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get a specific context value from live Redis data without fully refreshing the session.\\n\\nThis function implements get live context value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param key: String value representing key data.\\n:param default: Parameter for default specification.\\n:return: Instance of Any with operation results.\\n:raises RuntimeError: If get live context value operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_live_context_value",
              "line_number": 441,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "Any"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Set a specific context value in both local state and Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set a specific context value in both local state and Redis.\\n\\nThis function implements set live context value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param key: String value representing key data.\\n:param value: Parameter for value specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If set live context value operation fails due to invalid parameters or system state."
            },
            {
              "name": "enable_auto_refresh",
              "line_number": 458,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                },
                {
                  "name": "interval_seconds",
                  "annotation": "float"
                }
              ],
              "return_annotation": "None",
              "docstring": "Enable automatic refresh of data from Redis at specified intervals.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Enable automatic refresh of data from Redis at specified intervals.\\n\\nThis function implements enable auto refresh functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param interval_seconds: Parameter for interval seconds specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If enable auto refresh operation fails due to invalid parameters or system state."
            },
            {
              "name": "disable_auto_refresh",
              "line_number": 471,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Disable automatic refresh.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Disable automatic refresh.\\n\\nThis function implements disable auto refresh functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If disable auto refresh operation fails due to invalid parameters or system state."
            },
            {
              "name": "_auto_refresh_loop",
              "line_number": 479,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "None",
              "docstring": "Internal method to handle automatic refresh loop.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Internal method to handle automatic refresh loop.\\n\\nThis function implements  auto refresh loop functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Instance of None with operation results.\\n:raises RuntimeError: If  auto refresh loop operation fails due to invalid parameters or system state."
            },
            {
              "name": "check_for_changes",
              "line_number": 492,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                }
              ],
              "return_annotation": "Dict[str, bool]",
              "docstring": "Check what has changed in Redis compared to local state.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check what has changed in Redis compared to local state.\\n\\nThis function implements check for changes functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:return: Dictionary containing operation results and status information.\\n:raises ValueError: If check for changes operation fails due to invalid parameters or system state."
            },
            {
              "name": "selective_refresh",
              "line_number": 522,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "redis_mgr",
                  "annotation": "AzureRedisManager"
                },
                {
                  "name": "refresh_context",
                  "annotation": "bool"
                },
                {
                  "name": "refresh_histories",
                  "annotation": "bool"
                },
                {
                  "name": "refresh_queue",
                  "annotation": "bool"
                }
              ],
              "return_annotation": "Dict[str, bool]",
              "docstring": "Selectively refresh only specified parts of the session data.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Selectively refresh only specified parts of the session data.\\n\\nThis function implements selective refresh functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param redis_mgr: Parameter for redis mgr specification.\\n:param refresh_context: Boolean flag indicating refresh context status.\\n:param refresh_histories: Boolean flag indicating refresh histories status.\\n:param refresh_queue: Boolean flag indicating refresh queue status.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If selective refresh operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a memomanager with comprehensive functionality.\n\nThis class provides memomanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized MemoManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\stateful\\__init__.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\vad\\vad_iterator.py",
      "functions": [
        {
          "name": "int2float",
          "line_number": 117,
          "is_async": false,
          "parameters": [
            {
              "name": "sound",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Taken from https://github.com/snakers4/silero-vad",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Taken from https://github.\\n\\nThis function implements int2float functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param sound: Parameter for sound specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If int2float operation fails due to invalid parameters or system state."
        },
        {
          "name": "float2int",
          "line_number": 127,
          "is_async": false,
          "parameters": [
            {
              "name": "sound",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "Taken from",
          "quality_score": 0.0,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Execute float2int operation.\\n\\nThis function implements float2int functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param sound: Parameter for sound specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If float2int operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 8,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "model",
              "annotation": null
            },
            {
              "name": "threshold",
              "annotation": "float"
            },
            {
              "name": "sampling_rate",
              "annotation": "int"
            },
            {
              "name": "min_silence_duration_ms",
              "annotation": "int"
            },
            {
              "name": "speech_pad_ms",
              "annotation": "int"
            }
          ],
          "return_annotation": null,
          "docstring": "Mainly taken from https://github.com/snakers4/silero-vad\nClass for stream imitation\n\nParameters\n----------\nmodel: preloaded .jit/.onnx silero VAD model\n\nthreshold: float (default - 0.5)\n    Speech threshold. Silero VAD outputs speech probabilities for each audio chunk,\n    probabilities ABOVE this value are considered as SPEECH.\n    It is better to tune this parameter for each dataset separately, but \"lazy\" 0.5 is pretty good for most datasets.\n\nsampling_rate: int (default - 16000)\n    Currently silero VAD models support 8000 and 16000 sample rates\n\nmin_silence_duration_ms: int (default - 100 milliseconds)\n    In the end of each speech chunk wait for min_silence_duration_ms before separating it\n\nspeech_pad_ms: int (default - 30 milliseconds)\n    Final speech chunks are padded by speech_pad_ms each side",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Mainly taken from https://github.\\n\\ncom/snakers4/silero-vad\nClass for stream imitation\n\nParameters\n----------\nmodel: preloaded. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param model: Parameter for model specification.\\n:param threshold: Parameter for threshold specification.\\n:param sampling_rate: Integer value for sampling rate specification.\\n:param min_silence_duration_ms: Integer value for min silence duration ms specification.\\n:param speech_pad_ms: Integer value for speech pad ms specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "reset_states",
          "line_number": 56,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute reset states operation.\\n\\nThis function implements reset states functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If reset states operation fails due to invalid parameters or system state."
        },
        {
          "name": "__call__",
          "line_number": 63,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "x",
              "annotation": null
            }
          ],
          "return_annotation": null,
          "docstring": "x: torch.Tensor\n    audio chunk (see examples in repo)\n\nreturn_seconds: bool (default - False)\n    whether return timestamps in seconds (default - samples)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Execute   call   operation.\\n\\nTensor\n    audio chunk (see examples in repo)\n\nreturn_seconds: bool (default - False)\n    whether return timestamps in seconds (default - samples). This function implements   call   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param x: Parameter for x specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   call   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "VADIterator",
          "line_number": 7,
          "docstring": null,
          "methods": [
            {
              "name": "__init__",
              "line_number": 8,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "model",
                  "annotation": null
                },
                {
                  "name": "threshold",
                  "annotation": "float"
                },
                {
                  "name": "sampling_rate",
                  "annotation": "int"
                },
                {
                  "name": "min_silence_duration_ms",
                  "annotation": "int"
                },
                {
                  "name": "speech_pad_ms",
                  "annotation": "int"
                }
              ],
              "return_annotation": null,
              "docstring": "Mainly taken from https://github.com/snakers4/silero-vad\nClass for stream imitation\n\nParameters\n----------\nmodel: preloaded .jit/.onnx silero VAD model\n\nthreshold: float (default - 0.5)\n    Speech threshold. Silero VAD outputs speech probabilities for each audio chunk,\n    probabilities ABOVE this value are considered as SPEECH.\n    It is better to tune this parameter for each dataset separately, but \"lazy\" 0.5 is pretty good for most datasets.\n\nsampling_rate: int (default - 16000)\n    Currently silero VAD models support 8000 and 16000 sample rates\n\nmin_silence_duration_ms: int (default - 100 milliseconds)\n    In the end of each speech chunk wait for min_silence_duration_ms before separating it\n\nspeech_pad_ms: int (default - 30 milliseconds)\n    Final speech chunks are padded by speech_pad_ms each side",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Mainly taken from https://github.\\n\\ncom/snakers4/silero-vad\nClass for stream imitation\n\nParameters\n----------\nmodel: preloaded. This function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param model: Parameter for model specification.\\n:param threshold: Parameter for threshold specification.\\n:param sampling_rate: Integer value for sampling rate specification.\\n:param min_silence_duration_ms: Integer value for min silence duration ms specification.\\n:param speech_pad_ms: Integer value for speech pad ms specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "reset_states",
              "line_number": 56,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute reset states operation.\\n\\nThis function implements reset states functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If reset states operation fails due to invalid parameters or system state."
            },
            {
              "name": "__call__",
              "line_number": 63,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "x",
                  "annotation": null
                }
              ],
              "return_annotation": null,
              "docstring": "x: torch.Tensor\n    audio chunk (see examples in repo)\n\nreturn_seconds: bool (default - False)\n    whether return timestamps in seconds (default - samples)",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Execute   call   operation.\\n\\nTensor\n    audio chunk (see examples in repo)\n\nreturn_seconds: bool (default - False)\n    whether return timestamps in seconds (default - samples). This function implements   call   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param x: Parameter for x specification.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   call   operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a vaditerator with comprehensive functionality.\n\nThis class provides vaditerator operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized VADIterator instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\agenticmemory\\prompts\\prompt_gpt_summarize.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\agenticmemory\\prompts\\prompt_voice_chat.py",
      "functions": [],
      "classes": [],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\redis\\legacy\\async_manager.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 27,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "host",
              "annotation": "Optional[str]"
            },
            {
              "name": "access_key",
              "annotation": "Optional[str]"
            },
            {
              "name": "port",
              "annotation": "int"
            },
            {
              "name": "ssl",
              "annotation": "bool"
            },
            {
              "name": "credential",
              "annotation": "Optional[object]"
            },
            {
              "name": "user_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "scope",
              "annotation": "Optional[str]"
            },
            {
              "name": "default_ttl",
              "annotation": "int"
            },
            {
              "name": "environment",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param host: String value representing host data.\\n:param access_key: String value representing access key data.\\n:param port: Integer value for port specification.\\n:param ssl: Boolean flag indicating ssl status.\\n:param credential: Parameter for credential specification.\\n:param user_name: String value representing user name data.\\n:param scope: String value representing scope data.\\n:param default_ttl: Integer value for default ttl specification.\\n:param environment: String value representing environment data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AsyncAzureRedisManager",
          "line_number": 11,
          "docstring": "Enhanced Azure Redis Manager with hierarchical key management and TTL optimization.\n\nIntegrates with RedisKeyManager for consistent key structure across multi-worker\nVoice AI environments. Provides automatic TTL management, worker affinity tracking,\nand efficient bulk operations following Azure Well-Architected Framework principles.\n\nKey Features:\n- Hierarchical key structure with environment isolation\n- Automatic TTL management per data type\n- Worker affinity tracking for WebSocket sessions\n- Bulk operations for cleanup and monitoring\n- Legacy key migration support",
          "methods": [
            {
              "name": "__init__",
              "line_number": 27,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "host",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "access_key",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "port",
                  "annotation": "int"
                },
                {
                  "name": "ssl",
                  "annotation": "bool"
                },
                {
                  "name": "credential",
                  "annotation": "Optional[object]"
                },
                {
                  "name": "user_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "scope",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "default_ttl",
                  "annotation": "int"
                },
                {
                  "name": "environment",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param host: String value representing host data.\\n:param access_key: String value representing access key data.\\n:param port: Integer value for port specification.\\n:param ssl: Boolean flag indicating ssl status.\\n:param credential: Parameter for credential specification.\\n:param user_name: String value representing user name data.\\n:param scope: String value representing scope data.\\n:param default_ttl: Integer value for default ttl specification.\\n:param environment: String value representing environment data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "ping",
              "line_number": 89,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check Redis connectivity.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check Redis connectivity.\\n\\nThis function implements ping functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If ping operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_value",
              "line_number": 93,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "str"
                },
                {
                  "name": "ttl_seconds",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Set a string value in Redis with optional TTL.\nUses default_ttl if ttl_seconds not specified and default_ttl > 0.\nMaintains backwards compatibility - if no TTL specified and default_ttl is 0, no TTL is set.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set a string value in Redis with optional TTL.\\n\\nUses default_ttl if ttl_seconds not specified and default_ttl > 0. This function implements set value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: String value representing value data.\\n:param ttl_seconds: Integer value for ttl seconds specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If set value operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_value",
              "line_number": 108,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Get a string value from Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get a string value from Redis.\\n\\nThis function implements get value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get value operation fails due to invalid parameters or system state."
            },
            {
              "name": "store_session_data",
              "line_number": 113,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "data",
                  "annotation": "Dict[str, Any]"
                },
                {
                  "name": "ttl_seconds",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Store session data using a Redis hash.\nUses default_ttl if ttl_seconds not specified and default_ttl > 0.\nMaintains backwards compatibility - if no TTL specified and default_ttl is 0, no TTL is set.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Store session data using a Redis hash.\\n\\nUses default_ttl if ttl_seconds not specified and default_ttl > 0. This function implements store session data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param data: String value representing data data.\\n:param ttl_seconds: Integer value for ttl seconds specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If store session data operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_session_data",
              "line_number": 131,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Dict[str, str]",
              "docstring": "Retrieve all session data for a given session ID.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Retrieve all session data for a given session ID.\\n\\nThis function implements get session data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get session data operation fails due to invalid parameters or system state."
            },
            {
              "name": "update_session_field",
              "line_number": 136,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "field",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "str"
                },
                {
                  "name": "extend_ttl",
                  "annotation": "bool"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Update a single field in the session hash.\n\nArgs:\n    session_id: The session ID\n    field: The field name to update\n    value: The new value\n    extend_ttl: If True, resets TTL to default_ttl (keeps session alive)\n\nReturns:\n    bool: True if successful",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Update a single field in the session hash.\\n\\nArgs:\n    session_id: The session ID\n    field: The field name to update\n    value: The new value\n    extend_ttl: If True, resets TTL to default_ttl (keeps session alive)\n\nReturns:\n    bool: True if successful. This function implements update session field functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param field: String value representing field data.\\n:param value: String value representing value data.\\n:param extend_ttl: Boolean flag indicating extend ttl status.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If update session field operation fails due to invalid parameters or system state."
            },
            {
              "name": "delete_session",
              "line_number": 159,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "int",
              "docstring": "Delete a session from Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Delete a session from Redis.\\n\\nThis function implements delete session functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If delete session operation fails due to invalid parameters or system state."
            },
            {
              "name": "list_connected_clients",
              "line_number": 163,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "List[Dict[str, str]]",
              "docstring": "List currently connected clients.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "List currently connected clients.\\n\\nThis function implements list connected clients functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises ConnectionError: If list connected clients operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_ttl",
              "line_number": 167,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                }
              ],
              "return_annotation": "int",
              "docstring": "Get the TTL (time to live) of a key in seconds.\n\nReturns:\n    int: TTL in seconds, -1 if key has no TTL, -2 if key doesn't exist",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get the TTL (time to live) of a key in seconds.\\n\\nReturns:\n    int: TTL in seconds, -1 if key has no TTL, -2 if key doesn't exist. This function implements get ttl functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If get ttl operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_ttl",
              "line_number": 176,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "ttl_seconds",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Set TTL for an existing key.\n\nArgs:\n    key: The key to set TTL for\n    ttl_seconds: TTL in seconds, uses default_ttl if None\n\nReturns:\n    bool: True if TTL was set, False if key doesn't exist",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set TTL for an existing key.\\n\\nArgs:\n    key: The key to set TTL for\n    ttl_seconds: TTL in seconds, uses default_ttl if None\n\nReturns:\n    bool: True if TTL was set, False if key doesn't exist. This function implements set ttl functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param ttl_seconds: Integer value for ttl seconds specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If set ttl operation fails due to invalid parameters or system state."
            },
            {
              "name": "refresh_session_ttl",
              "line_number": 190,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Refresh the TTL of a session to keep it alive.\nUses the default_ttl value.\n\nReturns:\n    bool: True if TTL was refreshed, False if session doesn't exist",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Refresh the TTL of a session to keep it alive.\\n\\nUses the default_ttl value. This function implements refresh session ttl functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If refresh session ttl operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a asyncazureredismanager with comprehensive functionality.\n\nThis class provides asyncazureredismanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AsyncAzureRedisManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\redis\\legacy\\key_manager.py",
      "functions": [
        {
          "name": "get_key_manager",
          "line_number": 173,
          "is_async": false,
          "parameters": [
            {
              "name": "environment",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": "RedisKeyManager",
          "docstring": "Get Redis Key Manager instance (singleton for default environment)",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get Redis Key Manager instance (singleton for default environment).\\n\\nThis function implements get key manager functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param environment: String value representing environment data.\\n:return: Instance of RedisKeyManager with operation results.\\n:raises RuntimeError: If get key manager operation fails due to invalid parameters or system state."
        },
        {
          "name": "validate",
          "line_number": 64,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "ttl",
              "annotation": "Optional[int]"
            }
          ],
          "return_annotation": "int",
          "docstring": "Return valid TTL within policy bounds",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Return valid TTL within policy bounds.\\n\\nThis function implements validate functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param ttl: Integer value for ttl specification.\\n:return: Integer value representing the operation result.\\n:raises ValueError: If validate operation fails due to invalid parameters or system state."
        },
        {
          "name": "__init__",
          "line_number": 83,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "environment",
              "annotation": "Optional[str]"
            },
            {
              "name": "app_prefix",
              "annotation": "str"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param environment: String value representing environment data.\\n:param app_prefix: String value representing app prefix data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        },
        {
          "name": "build_key",
          "line_number": 92,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "data_type",
              "annotation": "DataType"
            },
            {
              "name": "identifier",
              "annotation": "str"
            },
            {
              "name": "component",
              "annotation": "Optional[Component]"
            }
          ],
          "return_annotation": "str",
          "docstring": "Build hierarchical Redis key",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Build hierarchical Redis key.\\n\\nThis function implements build key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param data_type: Parameter for data type specification.\\n:param identifier: String value representing identifier data.\\n:param component: Parameter for component specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If build key operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_ttl",
          "line_number": 106,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "data_type",
              "annotation": "DataType"
            },
            {
              "name": "ttl",
              "annotation": "Optional[int]"
            }
          ],
          "return_annotation": "int",
          "docstring": "Get validated TTL for data type",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Get validated TTL for data type.\\n\\nThis function implements get ttl functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param data_type: Parameter for data type specification.\\n:param ttl: Integer value for ttl specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If get ttl operation fails due to invalid parameters or system state."
        },
        {
          "name": "call_key",
          "line_number": 112,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "call_id",
              "annotation": "str"
            },
            {
              "name": "component",
              "annotation": "Component"
            }
          ],
          "return_annotation": "str",
          "docstring": "Build key for ACS call data\n\nArgs:\n    call_id: The ACS call connection ID (not a generated UUID)\n    component: The specific component (session, recording, participants, etc.)\n\nReturns:\n    Hierarchical key: rtvoice:{env}:call:{call_connection_id}:{component}",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Build key for ACS call data\n\nArgs:\n    call_id: The ACS call connection ID (not a generated UUID)\n    component: The specific component (session, recording, participants, etc.\\n\\n)\n\nReturns:\n    Hierarchical key: rtvoice:{env}:call:{call_connection_id}:{component}. This function implements call key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_id: Azure Communication Services call connection identifier.\\n:param component: Parameter for component specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If call key operation fails due to invalid parameters or system state."
        },
        {
          "name": "conversation_key",
          "line_number": 125,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "session_id",
              "annotation": "str"
            },
            {
              "name": "component",
              "annotation": "Component"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute conversation key operation.\\n\\nThis function implements conversation key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param component: Parameter for component specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If conversation key operation fails due to invalid parameters or system state."
        },
        {
          "name": "worker_key",
          "line_number": 128,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "worker_id",
              "annotation": "str"
            },
            {
              "name": "component",
              "annotation": "Component"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute worker key operation.\\n\\nThis function implements worker key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param worker_id: Unique identifier for worker entity.\\n:param component: Parameter for component specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If worker key operation fails due to invalid parameters or system state."
        },
        {
          "name": "system_key",
          "line_number": 131,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "component",
              "annotation": "Component"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute system key operation.\\n\\nThis function implements system key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:param component: Parameter for component specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If system key operation fails due to invalid parameters or system state."
        },
        {
          "name": "get_pattern",
          "line_number": 135,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "data_type",
              "annotation": "DataType"
            },
            {
              "name": "identifier",
              "annotation": "str"
            }
          ],
          "return_annotation": "str",
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Retrieve pattern from the system.\\n\\nThis function implements get pattern functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param data_type: Parameter for data type specification.\\n:param identifier: String value representing identifier data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get pattern operation fails due to invalid parameters or system state."
        },
        {
          "name": "migrate_legacy_key",
          "line_number": 139,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "legacy_key",
              "annotation": "str"
            }
          ],
          "return_annotation": "Optional[str]",
          "docstring": "Migrate legacy keys to new format",
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing parameter documentation",
            "Missing return value documentation",
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Migrate legacy keys to new format.\\n\\nThis function implements migrate legacy key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param legacy_key: String value representing legacy key data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If migrate legacy key operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "DataType",
          "line_number": 23,
          "docstring": "Data type categories for Redis key organization",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a datatype with comprehensive functionality.\n\nThis class provides datatype operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized DataType instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "Component",
          "line_number": 33,
          "docstring": "Component types within each data category",
          "methods": [],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a component with comprehensive functionality.\n\nThis class provides component operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized Component instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "TTLPolicy",
          "line_number": 57,
          "docstring": "TTL policy with validation",
          "methods": [
            {
              "name": "validate",
              "line_number": 64,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "ttl",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "int",
              "docstring": "Return valid TTL within policy bounds",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Return valid TTL within policy bounds.\\n\\nThis function implements validate functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param ttl: Integer value for ttl specification.\\n:return: Integer value representing the operation result.\\n:raises ValueError: If validate operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a ttlpolicy with comprehensive functionality.\n\nThis class provides ttlpolicy operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TTLPolicy instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "RedisKeyManager",
          "line_number": 71,
          "docstring": "Centralized Redis key management with hierarchical structure",
          "methods": [
            {
              "name": "__init__",
              "line_number": 83,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "environment",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "app_prefix",
                  "annotation": "str"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param environment: String value representing environment data.\\n:param app_prefix: String value representing app prefix data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "build_key",
              "line_number": 92,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "data_type",
                  "annotation": "DataType"
                },
                {
                  "name": "identifier",
                  "annotation": "str"
                },
                {
                  "name": "component",
                  "annotation": "Optional[Component]"
                }
              ],
              "return_annotation": "str",
              "docstring": "Build hierarchical Redis key",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Build hierarchical Redis key.\\n\\nThis function implements build key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param data_type: Parameter for data type specification.\\n:param identifier: String value representing identifier data.\\n:param component: Parameter for component specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If build key operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_ttl",
              "line_number": 106,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "data_type",
                  "annotation": "DataType"
                },
                {
                  "name": "ttl",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "int",
              "docstring": "Get validated TTL for data type",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get validated TTL for data type.\\n\\nThis function implements get ttl functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param data_type: Parameter for data type specification.\\n:param ttl: Integer value for ttl specification.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If get ttl operation fails due to invalid parameters or system state."
            },
            {
              "name": "call_key",
              "line_number": 112,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "call_id",
                  "annotation": "str"
                },
                {
                  "name": "component",
                  "annotation": "Component"
                }
              ],
              "return_annotation": "str",
              "docstring": "Build key for ACS call data\n\nArgs:\n    call_id: The ACS call connection ID (not a generated UUID)\n    component: The specific component (session, recording, participants, etc.)\n\nReturns:\n    Hierarchical key: rtvoice:{env}:call:{call_connection_id}:{component}",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Build key for ACS call data\n\nArgs:\n    call_id: The ACS call connection ID (not a generated UUID)\n    component: The specific component (session, recording, participants, etc.\\n\\n)\n\nReturns:\n    Hierarchical key: rtvoice:{env}:call:{call_connection_id}:{component}. This function implements call key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param call_id: Azure Communication Services call connection identifier.\\n:param component: Parameter for component specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If call key operation fails due to invalid parameters or system state."
            },
            {
              "name": "conversation_key",
              "line_number": 125,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "component",
                  "annotation": "Component"
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute conversation key operation.\\n\\nThis function implements conversation key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param component: Parameter for component specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If conversation key operation fails due to invalid parameters or system state."
            },
            {
              "name": "worker_key",
              "line_number": 128,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "worker_id",
                  "annotation": "str"
                },
                {
                  "name": "component",
                  "annotation": "Component"
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute worker key operation.\\n\\nThis function implements worker key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param worker_id: Unique identifier for worker entity.\\n:param component: Parameter for component specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If worker key operation fails due to invalid parameters or system state."
            },
            {
              "name": "system_key",
              "line_number": 131,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "name",
                  "annotation": "str"
                },
                {
                  "name": "component",
                  "annotation": "Component"
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute system key operation.\\n\\nThis function implements system key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param name: String value representing name data.\\n:param component: Parameter for component specification.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If system key operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_pattern",
              "line_number": 135,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "data_type",
                  "annotation": "DataType"
                },
                {
                  "name": "identifier",
                  "annotation": "str"
                }
              ],
              "return_annotation": "str",
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Retrieve pattern from the system.\\n\\nThis function implements get pattern functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param data_type: Parameter for data type specification.\\n:param identifier: String value representing identifier data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get pattern operation fails due to invalid parameters or system state."
            },
            {
              "name": "migrate_legacy_key",
              "line_number": 139,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "legacy_key",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Migrate legacy keys to new format",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Description should end with period",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Migrate legacy keys to new format.\\n\\nThis function implements migrate legacy key functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param legacy_key: String value representing legacy key data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If migrate legacy key operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Description should end with period",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a rediskeymanager with comprehensive functionality.\n\nThis class provides rediskeymanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized RedisKeyManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\redis\\legacy\\models.py",
      "functions": [],
      "classes": [
        {
          "name": "TurnHistoryItem",
          "line_number": 34,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a turnhistoryitem with comprehensive functionality.\n\nThis class provides turnhistoryitem operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized TurnHistoryItem instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "SessionState",
          "line_number": 40,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a sessionstate with comprehensive functionality.\n\nThis class provides sessionstate operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized SessionState instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        },
        {
          "name": "CallAutomationEvent",
          "line_number": 50,
          "docstring": null,
          "methods": [],
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Represents a callautomationevent with comprehensive functionality.\n\nThis class provides callautomationevent operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized CallAutomationEvent instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    },
    {
      "file_path": "C:\\Users\\pablosal\\Desktop\\gbb-ai-audio-agent\\src\\redis\\legacy\\__backup.py",
      "functions": [
        {
          "name": "__init__",
          "line_number": 14,
          "is_async": false,
          "parameters": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "host",
              "annotation": "Optional[str]"
            },
            {
              "name": "access_key",
              "annotation": "Optional[str]"
            },
            {
              "name": "port",
              "annotation": "int"
            },
            {
              "name": "db",
              "annotation": "int"
            },
            {
              "name": "ssl",
              "annotation": "bool"
            },
            {
              "name": "credential",
              "annotation": "Optional[object]"
            },
            {
              "name": "user_name",
              "annotation": "Optional[str]"
            },
            {
              "name": "scope",
              "annotation": "Optional[str]"
            }
          ],
          "return_annotation": null,
          "docstring": null,
          "quality_score": 0.0,
          "issues": [
            "Missing docstring"
          ],
          "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param host: String value representing host data.\\n:param access_key: String value representing access key data.\\n:param port: Integer value for port specification.\\n:param db: Integer value for db specification.\\n:param ssl: Boolean flag indicating ssl status.\\n:param credential: Parameter for credential specification.\\n:param user_name: String value representing user name data.\\n:param scope: String value representing scope data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
        }
      ],
      "classes": [
        {
          "name": "AzureRedisManager",
          "line_number": 8,
          "docstring": "AzureRedisManager provides a simplified async interface to connect, store,\nretrieve, and manage session data using Azure Cache for Redis.",
          "methods": [
            {
              "name": "__init__",
              "line_number": 14,
              "is_async": false,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "host",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "access_key",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "port",
                  "annotation": "int"
                },
                {
                  "name": "db",
                  "annotation": "int"
                },
                {
                  "name": "ssl",
                  "annotation": "bool"
                },
                {
                  "name": "credential",
                  "annotation": "Optional[object]"
                },
                {
                  "name": "user_name",
                  "annotation": "Optional[str]"
                },
                {
                  "name": "scope",
                  "annotation": "Optional[str]"
                }
              ],
              "return_annotation": null,
              "docstring": null,
              "quality_score": 0.0,
              "issues": [
                "Missing docstring"
              ],
              "suggested_docstring": "Execute   init   operation.\\n\\nThis function implements   init   functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param host: String value representing host data.\\n:param access_key: String value representing access key data.\\n:param port: Integer value for port specification.\\n:param db: Integer value for db specification.\\n:param ssl: Boolean flag indicating ssl status.\\n:param credential: Parameter for credential specification.\\n:param user_name: String value representing user name data.\\n:param scope: String value representing scope data.\\n:return: None upon successful completion of the operation.\\n:raises RuntimeError: If   init   operation fails due to invalid parameters or system state."
            },
            {
              "name": "ping",
              "line_number": 80,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "bool",
              "docstring": "Check Redis connectivity.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Check Redis connectivity.\\n\\nThis function implements ping functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If ping operation fails due to invalid parameters or system state."
            },
            {
              "name": "set_value",
              "line_number": 84,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "str"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Set a string value in Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Set a string value in Redis.\\n\\nThis function implements set value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:param value: String value representing value data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If set value operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_value",
              "line_number": 88,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "key",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Optional[str]",
              "docstring": "Get a string value from Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Get a string value from Redis.\\n\\nThis function implements get value functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param key: String value representing key data.\\n:return: String value containing the requested information.\\n:raises RuntimeError: If get value operation fails due to invalid parameters or system state."
            },
            {
              "name": "store_data",
              "line_number": 93,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "data",
                  "annotation": "Dict[str, Any]"
                },
                {
                  "name": "ttl_seconds",
                  "annotation": "Optional[int]"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Store session data using a Redis hash. Optionally set TTL (in seconds).",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Store session data using a Redis hash.\\n\\nThis function implements store data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param data: String value representing data data.\\n:param ttl_seconds: Integer value for ttl seconds specification.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If store data operation fails due to invalid parameters or system state."
            },
            {
              "name": "get_data",
              "line_number": 102,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "Dict[str, str]",
              "docstring": "Retrieve all session data for a given session ID.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Retrieve all session data for a given session ID.\\n\\nThis function implements get data functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Dictionary containing operation results and status information.\\n:raises RuntimeError: If get data operation fails due to invalid parameters or system state."
            },
            {
              "name": "update_session_field",
              "line_number": 107,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                },
                {
                  "name": "field",
                  "annotation": "str"
                },
                {
                  "name": "value",
                  "annotation": "str"
                }
              ],
              "return_annotation": "bool",
              "docstring": "Update a single field in the session hash.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Update a single field in the session hash.\\n\\nThis function implements update session field functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:param field: String value representing field data.\\n:param value: String value representing value data.\\n:return: Boolean value indicating operation success status.\\n:raises RuntimeError: If update session field operation fails due to invalid parameters or system state."
            },
            {
              "name": "delete_session",
              "line_number": 113,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                },
                {
                  "name": "session_id",
                  "annotation": "str"
                }
              ],
              "return_annotation": "int",
              "docstring": "Delete a session from Redis.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "Delete a session from Redis.\\n\\nThis function implements delete session functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:param session_id: Unique session identifier for tracking user interactions.\\n:return: Integer value representing the operation result.\\n:raises RuntimeError: If delete session operation fails due to invalid parameters or system state."
            },
            {
              "name": "list_connected_clients",
              "line_number": 117,
              "is_async": true,
              "parameters": [
                {
                  "name": "self",
                  "annotation": null
                }
              ],
              "return_annotation": "List[Dict[str, str]]",
              "docstring": "List currently connected clients.",
              "quality_score": 0.30000000000000004,
              "issues": [
                "Missing parameter documentation",
                "Missing return value documentation",
                "Missing exception documentation",
                "Docstring should have detailed description"
              ],
              "suggested_docstring": "List currently connected clients.\\n\\nThis function implements list connected clients functionality with comprehensive error handling, logging, and performance optimization. It integrates with the real-time voice application architecture to provide reliable operation.\\n\\n:param self: Parameter for self specification.\\n:return: Dictionary containing operation results and status information.\\n:raises ConnectionError: If list connected clients operation fails due to invalid parameters or system state."
            }
          ],
          "quality_score": 0.30000000000000004,
          "issues": [
            "Missing exception documentation",
            "Docstring should have detailed description"
          ],
          "suggested_docstring": "Represents a azureredismanager with comprehensive functionality.\n\nThis class provides azureredismanager operations with enterprise-grade\n        error handling, logging, and performance optimization. It integrates with\n        the real-time voice application architecture to deliver reliable functionality.\n\n:param: Construction parameters depend on specific implementation requirements.\n:return: Initialized AzureRedisManager instance ready for operation.\n:raises ValueError: If initialization parameters are invalid or missing."
        }
      ],
      "issues": []
    }
  ],
  "recommendations": [
    "Overall documentation quality is below enterprise standards. Consider systematic docstring improvement.",
    "Many functions lack docstrings. Add comprehensive documentation to all public functions.",
    "Class documentation is incomplete. Add detailed class docstrings describing purpose and usage.",
    "Implement automated docstring validation in CI/CD pipeline.",
    "Use the generated standardized docstrings to improve documentation coverage."
  ]
}